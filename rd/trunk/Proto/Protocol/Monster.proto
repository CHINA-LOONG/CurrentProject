import "Protocol/Const.proto";
import "Protocol/Skill.proto";
import "Protocol/Equip.proto";

option java_package = "com.hawk.game.protocol";

// struct-------------------------------------------------------

message SynMonsterAttr
{
	required int32 monsterId = 1;
	optional int32 level = 2;
	optional int32 exp = 3;
}

message HSMonster
{
	required int32 monsterId = 1;
	required string cfgId = 2;
	required int32 stage = 3;
	required int32 level = 4;
	required int32 exp = 5;
	required int32 lazy = 6;
	required int32 lazyExp = 7;
	required int32 disposition = 8;
	repeated HSSkill skill = 9;
	repeated EquipInfo equipInfos = 10;
	optional bool locked = 11 [default = false];
}

// protocol-----------------------------------------------------

message HSMonsterInfoSync
{
	repeated HSMonster monsterInfo = 1;
}

// MONSTER_ADD_S
message HSMonsterAdd
{
	required HSMonster monster = 1;
	optional RewardReason reason = 2 [default = SYS_PRESENT];
}

// MONSTER_CATCH_C
message HSMonsterCatch
{
	required string cfgId = 1;
	optional int32 stage = 2 [default = 0];
	optional int32 level = 3 [default = 1];
	optional int32 lazy = 4 [default = 1];
	optional int32 disposition = 5 [default = 1];
	repeated HSSkill skill = 6;
}

// MONSTER_CATCH_S
message HSMonsterCatchRet
{
	required int32 status = 1;
}

// MONSTER_BREAK_C
message HSMonsterBreak
{
	required int32 monsterId = 1;
}

// MONSTER_BREAK_S
message HSMonsterBreakRet
{
	required int32 status = 1;
	required int32 monsterId = 2;
}

//MONSTER_FEED_C
message HSMonsterFeed
{
	required int32 monsterId = 1;
	required int32 foodMonsterId = 2;
}

// MONSTER_FEED_S
message HSMonsterFeedRet
{
	required int32 status = 1;
	required int32 monsterId = 2;
	required int32 foodMonsterId = 3;
	optional int32 exp = 4;
	optional int32 level = 5;
}

// MONSTER_SKILL_UP_C
message HSMonsterSkillUp
{
	required int32 monsterId = 1;
	required string skillId = 2;
}

// MONSTER_SKILL_UP_S
message HSMonsterSkillUpRet
{
	required int32 skillPoint = 1;
	required int32 skillPointTimeStamp = 2;
}

// MONSTER_STAGE_UP_C
message HSMonsterStageUp
{
	required int32 monsterId = 1;
	repeated int32 consumeMonsterId = 2;
}

// MONSTER_STAGE_UP_S
message HSMonsterStageUpRet
{
}

// MONSTER_LOCK_C
message HSMonsterLock
{
	required int32 monsterId = 1;
	required bool locked = 2;
}

// MONSTER_LOCK_S
message HSMonsterLockRet
{
	required int32 monsterId = 1;
	required bool locked = 2;
}

// MONSTER_DECOMPOSE_C
message HSMonsterDecompose
{
	repeated int32 monsterId = 1;
}

// MONSTER_DECOMPOSE_S
message HSMonsterDecomposeRet
{

}

// MONSTER_COMPOSE_C
message HSMonsterCompose
{
	required string cfgId = 1;
	required bool useCommon = 2;
}

// MONSTER_COMPOSE_S
message HSMonsterComposeRet
{

}