// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol/HS.proto

package com.hawk.game.protocol;

public final class HS {
  private HS() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code sys}
   *
   * <pre>
   * 系统协议ID列表(&lt;100)
   * </pre>
   */
  public enum sys
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DATA_WRAPPER = 1;</code>
     *
     * <pre>
     * 数据封装
     * </pre>
     */
    DATA_WRAPPER(0, 1),
    /**
     * <code>KEY_EXCHANGE = 2;</code>
     *
     * <pre>
     * 秘钥交换
     * </pre>
     */
    KEY_EXCHANGE(1, 2),
    /**
     * <code>HEART_BEAT = 3;</code>
     *
     * <pre>
     * 心跳通知
     * </pre>
     */
    HEART_BEAT(2, 3),
    /**
     * <code>DELAY_TEST = 4;</code>
     *
     * <pre>
     * 延迟测试
     * </pre>
     */
    DELAY_TEST(3, 4),
    /**
     * <code>ERROR_CODE = 5;</code>
     *
     * <pre>
     * 错误码提示
     * </pre>
     */
    ERROR_CODE(4, 5),
    /**
     * <code>WARN = 6;</code>
     *
     * <pre>
     * 警告
     * </pre>
     */
    WARN(5, 6),
    ;

    /**
     * <code>DATA_WRAPPER = 1;</code>
     *
     * <pre>
     * 数据封装
     * </pre>
     */
    public static final int DATA_WRAPPER_VALUE = 1;
    /**
     * <code>KEY_EXCHANGE = 2;</code>
     *
     * <pre>
     * 秘钥交换
     * </pre>
     */
    public static final int KEY_EXCHANGE_VALUE = 2;
    /**
     * <code>HEART_BEAT = 3;</code>
     *
     * <pre>
     * 心跳通知
     * </pre>
     */
    public static final int HEART_BEAT_VALUE = 3;
    /**
     * <code>DELAY_TEST = 4;</code>
     *
     * <pre>
     * 延迟测试
     * </pre>
     */
    public static final int DELAY_TEST_VALUE = 4;
    /**
     * <code>ERROR_CODE = 5;</code>
     *
     * <pre>
     * 错误码提示
     * </pre>
     */
    public static final int ERROR_CODE_VALUE = 5;
    /**
     * <code>WARN = 6;</code>
     *
     * <pre>
     * 警告
     * </pre>
     */
    public static final int WARN_VALUE = 6;


    public final int getNumber() { return value; }

    public static sys valueOf(int value) {
      switch (value) {
        case 1: return DATA_WRAPPER;
        case 2: return KEY_EXCHANGE;
        case 3: return HEART_BEAT;
        case 4: return DELAY_TEST;
        case 5: return ERROR_CODE;
        case 6: return WARN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<sys>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<sys>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<sys>() {
            public sys findValueByNumber(int number) {
              return sys.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.HS.getDescriptor().getEnumTypes().get(0);
    }

    private static final sys[] VALUES = values();

    public static sys valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private sys(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sys)
  }

  /**
   * Protobuf enum {@code gm}
   *
   * <pre>
   * GM协议ID列表(100&lt;=gm&lt;1000)
   * </pre>
   */
  public enum gm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GEN_TEST_ACCOUNT = 100;</code>
     *
     * <pre>
     * 生成测试账号
     * </pre>
     */
    GEN_TEST_ACCOUNT(0, 100),
    /**
     * <code>GMOPERATION_C = 101;</code>
     *
     * <pre>
     * gm命令
     * </pre>
     */
    GMOPERATION_C(1, 101),
    /**
     * <code>GMOPERATION_S = 102;</code>
     */
    GMOPERATION_S(2, 102),
    /**
     * <code>GM_INSTANCE_PUSH_S = 200;</code>
     *
     * <pre>
     * gm生效后推送
     * </pre>
     */
    GM_INSTANCE_PUSH_S(3, 200),
    ;

    /**
     * <code>GEN_TEST_ACCOUNT = 100;</code>
     *
     * <pre>
     * 生成测试账号
     * </pre>
     */
    public static final int GEN_TEST_ACCOUNT_VALUE = 100;
    /**
     * <code>GMOPERATION_C = 101;</code>
     *
     * <pre>
     * gm命令
     * </pre>
     */
    public static final int GMOPERATION_C_VALUE = 101;
    /**
     * <code>GMOPERATION_S = 102;</code>
     */
    public static final int GMOPERATION_S_VALUE = 102;
    /**
     * <code>GM_INSTANCE_PUSH_S = 200;</code>
     *
     * <pre>
     * gm生效后推送
     * </pre>
     */
    public static final int GM_INSTANCE_PUSH_S_VALUE = 200;


    public final int getNumber() { return value; }

    public static gm valueOf(int value) {
      switch (value) {
        case 100: return GEN_TEST_ACCOUNT;
        case 101: return GMOPERATION_C;
        case 102: return GMOPERATION_S;
        case 200: return GM_INSTANCE_PUSH_S;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<gm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<gm>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<gm>() {
            public gm findValueByNumber(int number) {
              return gm.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.HS.getDescriptor().getEnumTypes().get(1);
    }

    private static final gm[] VALUES = values();

    public static gm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private gm(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gm)
  }

  /**
   * Protobuf enum {@code code}
   *
   * <pre>
   * 游戏协议ID列表(&gt;=1000)
   * </pre>
   */
  public enum code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOGIN_C = 1000;</code>
     *
     * <pre>
     * 角色登录相关
     * </pre>
     */
    LOGIN_C(0, 1000),
    /**
     * <code>LOGIN_S = 1001;</code>
     */
    LOGIN_S(1, 1001),
    /**
     * <code>LOGOUT_C = 1002;</code>
     */
    LOGOUT_C(2, 1002),
    /**
     * <code>LOGOUT_S = 1003;</code>
     */
    LOGOUT_S(3, 1003),
    /**
     * <code>RECCONECT_C = 1004;</code>
     */
    RECCONECT_C(4, 1004),
    /**
     * <code>RECCONECT_S = 1005;</code>
     */
    RECCONECT_S(5, 1005),
    /**
     * <code>SYNCINFO_C = 1006;</code>
     */
    SYNCINFO_C(6, 1006),
    /**
     * <code>SYNCINFO_S = 1007;</code>
     */
    SYNCINFO_S(7, 1007),
    /**
     * <code>KICKOUT_S = 1008;</code>
     */
    KICKOUT_S(8, 1008),
    /**
     * <code>PLAYER_INFO_SYNC_S = 1020;</code>
     */
    PLAYER_INFO_SYNC_S(9, 1020),
    /**
     * <code>SETTING_INFO_SYNC_S = 1021;</code>
     */
    SETTING_INFO_SYNC_S(10, 1021),
    /**
     * <code>MONSTER_INFO_SYNC_S = 1022;</code>
     */
    MONSTER_INFO_SYNC_S(11, 1022),
    /**
     * <code>ITEM_INFO_SYNC_S = 1023;</code>
     */
    ITEM_INFO_SYNC_S(12, 1023),
    /**
     * <code>EQUIP_INFO_SYNC_S = 1024;</code>
     */
    EQUIP_INFO_SYNC_S(13, 1024),
    /**
     * <code>MAIL_INFO_SYNC_S = 1025;</code>
     */
    MAIL_INFO_SYNC_S(14, 1025),
    /**
     * <code>ADVENTURE_INFO_SYNC_S = 1026;</code>
     */
    ADVENTURE_INFO_SYNC_S(15, 1026),
    /**
     * <code>QUEST_INFO_SYNC_S = 1027;</code>
     */
    QUEST_INFO_SYNC_S(16, 1027),
    /**
     * <code>PVP_DEFENCE_SYNC_S = 1028;</code>
     */
    PVP_DEFENCE_SYNC_S(17, 1028),
    /**
     * <code>STATISTICS_SYNC_PART1_S = 1040;</code>
     */
    STATISTICS_SYNC_PART1_S(18, 1040),
    /**
     * <code>STATISTICS_SYNC_PART2_S = 1041;</code>
     */
    STATISTICS_SYNC_PART2_S(19, 1041),
    /**
     * <code>STATISTICS_SYNC_PART3_S = 1042;</code>
     */
    STATISTICS_SYNC_PART3_S(20, 1042),
    /**
     * <code>STATISTICS_SYNC_GUIDE_S = 1043;</code>
     */
    STATISTICS_SYNC_GUIDE_S(21, 1043),
    /**
     * <code>ASSEMBLE_FINISH_S = 1099;</code>
     */
    ASSEMBLE_FINISH_S(22, 1099),
    /**
     * <code>PLAYER_COMPLETE_C = 1101;</code>
     *
     * <pre>
     * 角色详细信息补完
     * </pre>
     */
    PLAYER_COMPLETE_C(23, 1101),
    /**
     * <code>PLAYER_COMPLETE_S = 1102;</code>
     */
    PLAYER_COMPLETE_S(24, 1102),
    /**
     * <code>PLAYER_CONSUME_S = 1201;</code>
     *
     * <pre>
     * 消耗、奖励
     * </pre>
     */
    PLAYER_CONSUME_S(25, 1201),
    /**
     * <code>PLAYER_REWARD_S = 1202;</code>
     */
    PLAYER_REWARD_S(26, 1202),
    /**
     * <code>SIGNIN_C = 1301;</code>
     *
     * <pre>
     * 签到
     * </pre>
     */
    SIGNIN_C(27, 1301),
    /**
     * <code>SIGNIN_FILL_C = 1302;</code>
     */
    SIGNIN_FILL_C(28, 1302),
    /**
     * <code>SIGNIN_S = 1303;</code>
     */
    SIGNIN_S(29, 1303),
    /**
     * <code>GUIDE_FINISH_C = 1401;</code>
     *
     * <pre>
     * 新手引导
     * </pre>
     */
    GUIDE_FINISH_C(30, 1401),
    /**
     * <code>GUIDE_FINISH_S = 1402;</code>
     */
    GUIDE_FINISH_S(31, 1402),
    /**
     * <code>MONSTER_ADD_S = 2001;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    MONSTER_ADD_S(32, 2001),
    /**
     * <code>MONSTER_CATCH_C = 2002;</code>
     */
    MONSTER_CATCH_C(33, 2002),
    /**
     * <code>MONSTER_CATCH_S = 2003;</code>
     */
    MONSTER_CATCH_S(34, 2003),
    /**
     * <code>MONSTER_BREAK_C = 2004;</code>
     */
    MONSTER_BREAK_C(35, 2004),
    /**
     * <code>MONSTER_BREAK_S = 2005;</code>
     */
    MONSTER_BREAK_S(36, 2005),
    /**
     * <code>MONSTER_FEED_C = 2006;</code>
     */
    MONSTER_FEED_C(37, 2006),
    /**
     * <code>MONSTER_FEED_S = 2007;</code>
     */
    MONSTER_FEED_S(38, 2007),
    /**
     * <code>MONSTER_SKILL_UP_C = 2008;</code>
     */
    MONSTER_SKILL_UP_C(39, 2008),
    /**
     * <code>MONSTER_SKILL_UP_S = 2009;</code>
     */
    MONSTER_SKILL_UP_S(40, 2009),
    /**
     * <code>MONSTER_STAGE_UP_C = 2010;</code>
     */
    MONSTER_STAGE_UP_C(41, 2010),
    /**
     * <code>MONSTER_STAGE_UP_S = 2011;</code>
     */
    MONSTER_STAGE_UP_S(42, 2011),
    /**
     * <code>MONSTER_LOCK_C = 2012;</code>
     */
    MONSTER_LOCK_C(43, 2012),
    /**
     * <code>MONSTER_LOCK_S = 2013;</code>
     */
    MONSTER_LOCK_S(44, 2013),
    /**
     * <code>MONSTER_DECOMPOSE_C = 2014;</code>
     */
    MONSTER_DECOMPOSE_C(45, 2014),
    /**
     * <code>MONSTER_DECOMPOSE_S = 2015;</code>
     */
    MONSTER_DECOMPOSE_S(46, 2015),
    /**
     * <code>MONSTER_COMPOSE_C = 2016;</code>
     */
    MONSTER_COMPOSE_C(47, 2016),
    /**
     * <code>MONSTER_COMPOSE_S = 2017;</code>
     */
    MONSTER_COMPOSE_S(48, 2017),
    /**
     * <code>INSTANCE_ASSIST_C = 3001;</code>
     *
     * <pre>
     * 副本
     * </pre>
     */
    INSTANCE_ASSIST_C(49, 3001),
    /**
     * <code>INSTANCE_ASSIST_S = 3002;</code>
     */
    INSTANCE_ASSIST_S(50, 3002),
    /**
     * <code>INSTANCE_ENTER_C = 3003;</code>
     */
    INSTANCE_ENTER_C(51, 3003),
    /**
     * <code>INSTANCE_ENTER_S = 3004;</code>
     */
    INSTANCE_ENTER_S(52, 3004),
    /**
     * <code>INSTANCE_SETTLE_C = 3005;</code>
     */
    INSTANCE_SETTLE_C(53, 3005),
    /**
     * <code>INSTANCE_SETTLE_S = 3006;</code>
     */
    INSTANCE_SETTLE_S(54, 3006),
    /**
     * <code>INSTANCE_OPEN_CARD_C = 3007;</code>
     */
    INSTANCE_OPEN_CARD_C(55, 3007),
    /**
     * <code>INSTANCE_OPEN_CARD_S = 3008;</code>
     */
    INSTANCE_OPEN_CARD_S(56, 3008),
    /**
     * <code>INSTANCE_SWEEP_C = 3009;</code>
     */
    INSTANCE_SWEEP_C(57, 3009),
    /**
     * <code>INSTANCE_SWEEP_S = 3010;</code>
     */
    INSTANCE_SWEEP_S(58, 3010),
    /**
     * <code>INSTANCE_RESET_COUNT_C = 3011;</code>
     */
    INSTANCE_RESET_COUNT_C(59, 3011),
    /**
     * <code>INSTANCE_RESET_COUNT_S = 3012;</code>
     */
    INSTANCE_RESET_COUNT_S(60, 3012),
    /**
     * <code>INSTANCE_REVIVE_C = 3013;</code>
     */
    INSTANCE_REVIVE_C(61, 3013),
    /**
     * <code>INSTANCE_REVIVE_S = 3014;</code>
     */
    INSTANCE_REVIVE_S(62, 3014),
    /**
     * <code>CHAPTER_BOX_C = 3015;</code>
     */
    CHAPTER_BOX_C(63, 3015),
    /**
     * <code>CHAPTER_BOX_S = 3016;</code>
     */
    CHAPTER_BOX_S(64, 3016),
    /**
     * <code>HOLE_ENTER_C = 3101;</code>
     */
    HOLE_ENTER_C(65, 3101),
    /**
     * <code>TOWER_ENTER_C = 3102;</code>
     */
    TOWER_ENTER_C(66, 3102),
    /**
     * <code>GUILD_INSTANCE_ENTER_C = 3103;</code>
     */
    GUILD_INSTANCE_ENTER_C(67, 3103),
    /**
     * <code>ADVENTURE_ENTER_C = 3201;</code>
     */
    ADVENTURE_ENTER_C(68, 3201),
    /**
     * <code>ADVENTURE_ENTER_S = 3202;</code>
     */
    ADVENTURE_ENTER_S(69, 3202),
    /**
     * <code>ADVENTURE_SETTLE_C = 3203;</code>
     */
    ADVENTURE_SETTLE_C(70, 3203),
    /**
     * <code>ADVENTURE_SETTLE_S = 3204;</code>
     */
    ADVENTURE_SETTLE_S(71, 3204),
    /**
     * <code>ADVENTURE_NEW_CONDITION_C = 3205;</code>
     */
    ADVENTURE_NEW_CONDITION_C(72, 3205),
    /**
     * <code>ADVENTURE_NEW_CONDITION_S = 3206;</code>
     */
    ADVENTURE_NEW_CONDITION_S(73, 3206),
    /**
     * <code>ADVENTURE_BUY_CONDITION_C = 3207;</code>
     */
    ADVENTURE_BUY_CONDITION_C(74, 3207),
    /**
     * <code>ADVENTURE_BUY_CONDITION_S = 3208;</code>
     */
    ADVENTURE_BUY_CONDITION_S(75, 3208),
    /**
     * <code>ADVENTURE_BUY_TEAM_C = 3209;</code>
     */
    ADVENTURE_BUY_TEAM_C(76, 3209),
    /**
     * <code>ADVENTURE_BUY_TEAM_S = 3210;</code>
     */
    ADVENTURE_BUY_TEAM_S(77, 3210),
    /**
     * <code>ADVENTURE_CONDITION_PUSH_S = 3211;</code>
     */
    ADVENTURE_CONDITION_PUSH_S(78, 3211),
    /**
     * <code>ITEM_USE_C = 4001;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    ITEM_USE_C(79, 4001),
    /**
     * <code>ITEM_USE_S = 4002;</code>
     */
    ITEM_USE_S(80, 4002),
    /**
     * <code>ITEM_BOX_USE_BATCH_C = 4003;</code>
     */
    ITEM_BOX_USE_BATCH_C(81, 4003),
    /**
     * <code>ITEM_BOX_USE_BATCH_S = 4004;</code>
     */
    ITEM_BOX_USE_BATCH_S(82, 4004),
    /**
     * <code>ITEM_SELL_C = 4005;</code>
     */
    ITEM_SELL_C(83, 4005),
    /**
     * <code>ITEM_SELL_S = 4006;</code>
     */
    ITEM_SELL_S(84, 4006),
    /**
     * <code>ITEM_SELL_BATCH_C = 4007;</code>
     */
    ITEM_SELL_BATCH_C(85, 4007),
    /**
     * <code>ITEM_SELL_BATCH_S = 4008;</code>
     */
    ITEM_SELL_BATCH_S(86, 4008),
    /**
     * <code>ITEM_BUY_C = 4009;</code>
     */
    ITEM_BUY_C(87, 4009),
    /**
     * <code>ITEM_BUY_S = 4010;</code>
     */
    ITEM_BUY_S(88, 4010),
    /**
     * <code>ITEM_COMPOSE_C = 4011;</code>
     */
    ITEM_COMPOSE_C(89, 4011),
    /**
     * <code>ITEM_COMPOSE_S = 4012;</code>
     */
    ITEM_COMPOSE_S(90, 4012),
    /**
     * <code>GEM_COMPOSE_C = 4013;</code>
     */
    GEM_COMPOSE_C(91, 4013),
    /**
     * <code>GEM_COMPOSE_S = 4014;</code>
     */
    GEM_COMPOSE_S(92, 4014),
    /**
     * <code>ITEM_BUY_AND_USE_C = 4015;</code>
     */
    ITEM_BUY_AND_USE_C(93, 4015),
    /**
     * <code>ITEM_BUY_AND_USE_S = 4016;</code>
     */
    ITEM_BUY_AND_USE_S(94, 4016),
    /**
     * <code>EQUIP_SELL_C = 4101;</code>
     */
    EQUIP_SELL_C(95, 4101),
    /**
     * <code>EQUIP_SELL_S = 4102;</code>
     */
    EQUIP_SELL_S(96, 4102),
    /**
     * <code>EQUIP_BUY_C = 4103;</code>
     */
    EQUIP_BUY_C(97, 4103),
    /**
     * <code>EQUIP_BUY_S = 4104;</code>
     */
    EQUIP_BUY_S(98, 4104),
    /**
     * <code>EQUIP_COMPOSE_C = 4105;</code>
     */
    EQUIP_COMPOSE_C(99, 4105),
    /**
     * <code>EQUIP_COMPOSE_S = 4106;</code>
     */
    EQUIP_COMPOSE_S(100, 4106),
    /**
     * <code>EQUIP_INCREASE_LEVEL_C = 4107;</code>
     */
    EQUIP_INCREASE_LEVEL_C(101, 4107),
    /**
     * <code>EQUIP_INCREASE_LEVEL_S = 4108;</code>
     */
    EQUIP_INCREASE_LEVEL_S(102, 4108),
    /**
     * <code>EQUIP_INCREASE_STAGE_C = 4109;</code>
     */
    EQUIP_INCREASE_STAGE_C(103, 4109),
    /**
     * <code>EQUIP_INCREASE_STAGE_S = 4110;</code>
     */
    EQUIP_INCREASE_STAGE_S(104, 4110),
    /**
     * <code>EQUIP_PUNCH_C = 4111;</code>
     */
    EQUIP_PUNCH_C(105, 4111),
    /**
     * <code>EQUIP_PUNCH_S = 4112;</code>
     */
    EQUIP_PUNCH_S(106, 4112),
    /**
     * <code>EQUIP_GEM_C = 4113;</code>
     */
    EQUIP_GEM_C(107, 4113),
    /**
     * <code>EQUIP_GEM_S = 4114;</code>
     */
    EQUIP_GEM_S(108, 4114),
    /**
     * <code>EQUIP_DECOMPOSE_C = 4115;</code>
     */
    EQUIP_DECOMPOSE_C(109, 4115),
    /**
     * <code>EQUIP_DECOMPOSE_S = 4116;</code>
     */
    EQUIP_DECOMPOSE_S(110, 4116),
    /**
     * <code>EQUIP_MONSTER_DRESS_C = 4120;</code>
     */
    EQUIP_MONSTER_DRESS_C(111, 4120),
    /**
     * <code>EQUIP_MONSTER_DRESS_S = 4121;</code>
     */
    EQUIP_MONSTER_DRESS_S(112, 4121),
    /**
     * <code>EQUIP_MONSTER_UNDRESS_C = 4122;</code>
     */
    EQUIP_MONSTER_UNDRESS_C(113, 4122),
    /**
     * <code>EQUIP_MONSTER_UNDRESS_S = 4123;</code>
     */
    EQUIP_MONSTER_UNDRESS_S(114, 4123),
    /**
     * <code>EQUIP_MONSTER_REPLACE_C = 4124;</code>
     */
    EQUIP_MONSTER_REPLACE_C(115, 4124),
    /**
     * <code>EQUIP_MONSTER_REPLACE_S = 4125;</code>
     */
    EQUIP_MONSTER_REPLACE_S(116, 4125),
    /**
     * <code>QUEST_SUBMIT_C = 5001;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    QUEST_SUBMIT_C(117, 5001),
    /**
     * <code>QUEST_SUBMIT_S = 5002;</code>
     */
    QUEST_SUBMIT_S(118, 5002),
    /**
     * <code>QUEST_ACCEPT_S = 5003;</code>
     */
    QUEST_ACCEPT_S(119, 5003),
    /**
     * <code>QUEST_UPDATE_S = 5004;</code>
     */
    QUEST_UPDATE_S(120, 5004),
    /**
     * <code>QUEST_REMOVE_S = 5005;</code>
     */
    QUEST_REMOVE_S(121, 5005),
    /**
     * <code>MAIL_READ_C = 6001;</code>
     *
     * <pre>
     * 邮件
     * </pre>
     */
    MAIL_READ_C(122, 6001),
    /**
     * <code>MAIL_RECEIVE_C = 6002;</code>
     */
    MAIL_RECEIVE_C(123, 6002),
    /**
     * <code>MAIL_RECEIVE_S = 6003;</code>
     */
    MAIL_RECEIVE_S(124, 6003),
    /**
     * <code>MAIL_RECEIVE_ALL_C = 6004;</code>
     */
    MAIL_RECEIVE_ALL_C(125, 6004),
    /**
     * <code>MAIL_RECEIVE_ALL_S = 6005;</code>
     */
    MAIL_RECEIVE_ALL_S(126, 6005),
    /**
     * <code>MAIL_NEW_S = 6006;</code>
     */
    MAIL_NEW_S(127, 6006),
    /**
     * <code>MAIL_DELETE_C = 6007;</code>
     */
    MAIL_DELETE_C(128, 6007),
    /**
     * <code>MAIL_DELETE_S = 6008;</code>
     */
    MAIL_DELETE_S(129, 6008),
    /**
     * <code>IM_CHAT_SEND_C = 7001;</code>
     *
     * <pre>
     * 即时通讯
     * </pre>
     */
    IM_CHAT_SEND_C(130, 7001),
    /**
     * <code>IM_PUSH_S = 7002;</code>
     */
    IM_PUSH_S(131, 7002),
    /**
     * <code>IM_PLAYER_GET_C = 7003;</code>
     */
    IM_PLAYER_GET_C(132, 7003),
    /**
     * <code>IM_PLAYER_GET_S = 7004;</code>
     */
    IM_PLAYER_GET_S(133, 7004),
    /**
     * <code>IM_DUMP_S = 7005;</code>
     */
    IM_DUMP_S(134, 7005),
    /**
     * <code>SHOP_DATA_INIT_C = 8001;</code>
     *
     * <pre>
     * 商店
     * </pre>
     */
    SHOP_DATA_INIT_C(135, 8001),
    /**
     * <code>SHOP_DATA_INIT_S = 8002;</code>
     */
    SHOP_DATA_INIT_S(136, 8002),
    /**
     * <code>SHOP_REFRESH_C = 8003;</code>
     */
    SHOP_REFRESH_C(137, 8003),
    /**
     * <code>SHOP_REFRESH_S = 8004;</code>
     */
    SHOP_REFRESH_S(138, 8004),
    /**
     * <code>SHOP_ITEM_BUY_C = 8005;</code>
     */
    SHOP_ITEM_BUY_C(139, 8005),
    /**
     * <code>SHOP_ITEM_BUY_S = 8006;</code>
     */
    SHOP_ITEM_BUY_S(140, 8006),
    /**
     * <code>SHOP_DATA_SYN_C = 8007;</code>
     */
    SHOP_DATA_SYN_C(141, 8007),
    /**
     * <code>SHOP_DATA_SYN_S = 8008;</code>
     */
    SHOP_DATA_SYN_S(142, 8008),
    /**
     * <code>SHOP_GOLD2COIN_C = 8009;</code>
     */
    SHOP_GOLD2COIN_C(143, 8009),
    /**
     * <code>SHOP_GOLD2COIN_S = 8010;</code>
     */
    SHOP_GOLD2COIN_S(144, 8010),
    /**
     * <code>SHOP_REFRESH_TIMES = 8011;</code>
     */
    SHOP_REFRESH_TIMES(145, 8011),
    /**
     * <code>SHOP_STORE_BUY_C = 8012;</code>
     */
    SHOP_STORE_BUY_C(146, 8012),
    /**
     * <code>SHOP_STORE_BUY_S = 8013;</code>
     */
    SHOP_STORE_BUY_S(147, 8013),
    /**
     * <code>SUMMON_ONE_C = 8101;</code>
     */
    SUMMON_ONE_C(148, 8101),
    /**
     * <code>SUMMON_ONE_S = 8102;</code>
     */
    SUMMON_ONE_S(149, 8102),
    /**
     * <code>SUMMON_TEN_C = 8103;</code>
     */
    SUMMON_TEN_C(150, 8103),
    /**
     * <code>SUMMON_TEN_S = 8104;</code>
     */
    SUMMON_TEN_S(151, 8104),
    /**
     * <code>ALLIANCE_CREATE_C = 9001;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    ALLIANCE_CREATE_C(152, 9001),
    /**
     * <code>ALLIANCE_CREATE_S = 9002;</code>
     */
    ALLIANCE_CREATE_S(153, 9002),
    /**
     * <code>ALLIANCE_LIST_C = 9003;</code>
     */
    ALLIANCE_LIST_C(154, 9003),
    /**
     * <code>ALLIANCE_LIST_S = 9004;</code>
     */
    ALLIANCE_LIST_S(155, 9004),
    /**
     * <code>ALLIANCE_SEARCH_C = 9005;</code>
     */
    ALLIANCE_SEARCH_C(156, 9005),
    /**
     * <code>ALLIANCE_SEARCH_S = 9006;</code>
     */
    ALLIANCE_SEARCH_S(157, 9006),
    /**
     * <code>ALLIANCE_NOTICE_C = 9007;</code>
     */
    ALLIANCE_NOTICE_C(158, 9007),
    /**
     * <code>ALLIANCE_NOTICE_S = 9008;</code>
     */
    ALLIANCE_NOTICE_S(159, 9008),
    /**
     * <code>ALLIANCE_APPLY_C = 9009;</code>
     */
    ALLIANCE_APPLY_C(160, 9009),
    /**
     * <code>ALLIANCE_APPLY_S = 9010;</code>
     */
    ALLIANCE_APPLY_S(161, 9010),
    /**
     * <code>ALLIANCE_HANDLE_APPLY_C = 9011;</code>
     */
    ALLIANCE_HANDLE_APPLY_C(162, 9011),
    /**
     * <code>ALLIANCE_HANDLE_APPLY_S = 9012;</code>
     */
    ALLIANCE_HANDLE_APPLY_S(163, 9012),
    /**
     * <code>ALLIANCE_DATA_C = 9013;</code>
     */
    ALLIANCE_DATA_C(164, 9013),
    /**
     * <code>ALLIANCE_DATA_S = 9014;</code>
     */
    ALLIANCE_DATA_S(165, 9014),
    /**
     * <code>ALLIANCE_SELF_DATA_C = 9015;</code>
     */
    ALLIANCE_SELF_DATA_C(166, 9015),
    /**
     * <code>ALLIANCE_SELF_DATA_S = 9016;</code>
     */
    ALLIANCE_SELF_DATA_S(167, 9016),
    /**
     * <code>ALLIANCE_MEMBERS_C = 9017;</code>
     */
    ALLIANCE_MEMBERS_C(168, 9017),
    /**
     * <code>ALLIANCE_MEMBERS_S = 9018;</code>
     */
    ALLIANCE_MEMBERS_S(169, 9018),
    /**
     * <code>ALLIANCE_APPLYS_C = 9019;</code>
     */
    ALLIANCE_APPLYS_C(170, 9019),
    /**
     * <code>ALLIANCE_APPLYS_S = 9020;</code>
     */
    ALLIANCE_APPLYS_S(171, 9020),
    /**
     * <code>ALLIANCE_FATIGUE_C = 9021;</code>
     */
    ALLIANCE_FATIGUE_C(172, 9021),
    /**
     * <code>ALLIANCE_FATIGUE_S = 9022;</code>
     */
    ALLIANCE_FATIGUE_S(173, 9022),
    /**
     * <code>ALLIANCE_SYN_C = 9023;</code>
     */
    ALLIANCE_SYN_C(174, 9023),
    /**
     * <code>ALLIANCE_SYN_S = 9024;</code>
     */
    ALLIANCE_SYN_S(175, 9024),
    /**
     * <code>ALLIANCE_CHANGE_POS_C = 9025;</code>
     */
    ALLIANCE_CHANGE_POS_C(176, 9025),
    /**
     * <code>ALLIANCE_CHANGE_POS_S = 9026;</code>
     */
    ALLIANCE_CHANGE_POS_S(177, 9026),
    /**
     * <code>ALLIANCE_MEMBER_KICK_C = 9027;</code>
     */
    ALLIANCE_MEMBER_KICK_C(178, 9027),
    /**
     * <code>ALLIANCE_MEMBER_KICK_S = 9028;</code>
     */
    ALLIANCE_MEMBER_KICK_S(179, 9028),
    /**
     * <code>ALLIANCE_MEMBER_LEAVE_C = 9029;</code>
     */
    ALLIANCE_MEMBER_LEAVE_C(180, 9029),
    /**
     * <code>ALLIANCE_MEMBER_LEAVE_S = 9030;</code>
     */
    ALLIANCE_MEMBER_LEAVE_S(181, 9030),
    /**
     * <code>ALLIANCE_CHANGE_OWNER_C = 9031;</code>
     */
    ALLIANCE_CHANGE_OWNER_C(182, 9031),
    /**
     * <code>ALLIANCE_CHANGE_OWNER_S = 9032;</code>
     */
    ALLIANCE_CHANGE_OWNER_S(183, 9032),
    /**
     * <code>ALLIANCE_LEVEL_UP_C = 9033;</code>
     */
    ALLIANCE_LEVEL_UP_C(184, 9033),
    /**
     * <code>ALLIANCE_LEVEL_UP_S = 9034;</code>
     */
    ALLIANCE_LEVEL_UP_S(185, 9034),
    /**
     * <code>ALLIANCE_PRAY_C = 9035;</code>
     */
    ALLIANCE_PRAY_C(186, 9035),
    /**
     * <code>ALLIANCE_PRAY_S = 9036;</code>
     */
    ALLIANCE_PRAY_S(187, 9036),
    /**
     * <code>ALLIANCE_SETTING_C = 9037;</code>
     */
    ALLIANCE_SETTING_C(188, 9037),
    /**
     * <code>ALLIANCE_SETTING_S = 9038;</code>
     */
    ALLIANCE_SETTING_S(189, 9038),
    /**
     * <code>ALLIANCE_SETTING_SYNC_C = 9039;</code>
     */
    ALLIANCE_SETTING_SYNC_C(190, 9039),
    /**
     * <code>ALLIANCE_SETTING_SYNC_S = 9040;</code>
     */
    ALLIANCE_SETTING_SYNC_S(191, 9040),
    /**
     * <code>ALLIANCE_FATIGUE_GIVE_C = 9041;</code>
     */
    ALLIANCE_FATIGUE_GIVE_C(192, 9041),
    /**
     * <code>ALLIANCE_FATIGUE_GIVE_S = 9042;</code>
     */
    ALLIANCE_FATIGUE_GIVE_S(193, 9042),
    /**
     * <code>ALLIANCE_CANCLE_APPLY_C = 9043;</code>
     */
    ALLIANCE_CANCLE_APPLY_C(194, 9043),
    /**
     * <code>ALLIANCE_CANCLE_APPLY_S = 9044;</code>
     */
    ALLIANCE_CANCLE_APPLY_S(195, 9044),
    /**
     * <code>ALLIANCE_CREATE_TEAM_C = 9060;</code>
     */
    ALLIANCE_CREATE_TEAM_C(196, 9060),
    /**
     * <code>ALLIANCE_CREATE_TEAM_S = 9061;</code>
     */
    ALLIANCE_CREATE_TEAM_S(197, 9061),
    /**
     * <code>ALLIANCE_JOIN_TEAM_C = 9062;</code>
     */
    ALLIANCE_JOIN_TEAM_C(198, 9062),
    /**
     * <code>ALLIANCE_JOIN_TEAM_S = 9063;</code>
     */
    ALLIANCE_JOIN_TEAM_S(199, 9063),
    /**
     * <code>ALLIANCE_ACCEPT_TASK_C = 9064;</code>
     */
    ALLIANCE_ACCEPT_TASK_C(200, 9064),
    /**
     * <code>ALLIANCE_ACCEPT_TASK_S = 9065;</code>
     */
    ALLIANCE_ACCEPT_TASK_S(201, 9065),
    /**
     * <code>ALLIANCE_COMMIT_TASK_C = 9066;</code>
     */
    ALLIANCE_COMMIT_TASK_C(202, 9066),
    /**
     * <code>ALLIANCE_COMMIT_TASK_S = 9067;</code>
     */
    ALLIANCE_COMMIT_TASK_S(203, 9067),
    /**
     * <code>ALLIANCE_TASK_REWARD_C = 9068;</code>
     */
    ALLIANCE_TASK_REWARD_C(204, 9068),
    /**
     * <code>ALLIANCE_TASK_REWARD_S = 9069;</code>
     */
    ALLIANCE_TASK_REWARD_S(205, 9069),
    /**
     * <code>ALLIANCE_TEAM_LIST_C = 9070;</code>
     */
    ALLIANCE_TEAM_LIST_C(206, 9070),
    /**
     * <code>ALLIANCE_TEAM_LIST_S = 9071;</code>
     */
    ALLIANCE_TEAM_LIST_S(207, 9071),
    /**
     * <code>ALLIANCE_SELF_TEAM_C = 9072;</code>
     */
    ALLIANCE_SELF_TEAM_C(208, 9072),
    /**
     * <code>ALLIANCE_SELF_TEAM_S = 9073;</code>
     */
    ALLIANCE_SELF_TEAM_S(209, 9073),
    /**
     * <code>ALLIANCE_INSTANCE_TASK_C = 9074;</code>
     */
    ALLIANCE_INSTANCE_TASK_C(210, 9074),
    /**
     * <code>ALLIANCE_INSTANCE_TASK_S = 9075;</code>
     */
    ALLIANCE_INSTANCE_TASK_S(211, 9075),
    /**
     * <code>ALLIANCE_DISSOVLE_TEAM_C = 9076;</code>
     */
    ALLIANCE_DISSOVLE_TEAM_C(212, 9076),
    /**
     * <code>ALLIANCE_DISSOVLE_TEAM_S = 9077;</code>
     */
    ALLIANCE_DISSOVLE_TEAM_S(213, 9077),
    /**
     * <code>ALLIANCE_CONTRIBUTION_C = 9078;</code>
     */
    ALLIANCE_CONTRIBUTION_C(214, 9078),
    /**
     * <code>ALLIANCE_CONTRIBUTION_S = 9079;</code>
     */
    ALLIANCE_CONTRIBUTION_S(215, 9079),
    /**
     * <code>ALLIANCE_CONTRI_REWARD_C = 9080;</code>
     */
    ALLIANCE_CONTRI_REWARD_C(216, 9080),
    /**
     * <code>ALLIANCE_CONTRI_REWARD_S = 9081;</code>
     */
    ALLIANCE_CONTRI_REWARD_S(217, 9081),
    /**
     * <code>ALLIANCE_INSTANCE_REWARD_S = 9082;</code>
     */
    ALLIANCE_INSTANCE_REWARD_S(218, 9082),
    /**
     * <code>ALLIANCE_BASE_SEND_C = 9083;</code>
     */
    ALLIANCE_BASE_SEND_C(219, 9083),
    /**
     * <code>ALLIANCE_BASE_SEND_S = 9084;</code>
     */
    ALLIANCE_BASE_SEND_S(220, 9084),
    /**
     * <code>ALLIANCE_BASE_RECALL_C = 9085;</code>
     */
    ALLIANCE_BASE_RECALL_C(221, 9085),
    /**
     * <code>ALLIANCE_BASE_RECALL_S = 9086;</code>
     */
    ALLIANCE_BASE_RECALL_S(222, 9086),
    /**
     * <code>ALLIANCE_MY_BASE_LIST_C = 9087;</code>
     */
    ALLIANCE_MY_BASE_LIST_C(223, 9087),
    /**
     * <code>ALLIANCE_MY_BASE_LIST_S = 9088;</code>
     */
    ALLIANCE_MY_BASE_LIST_S(224, 9088),
    /**
     * <code>ALLIANCE_BASE_LIST_C = 9089;</code>
     */
    ALLIANCE_BASE_LIST_C(225, 9089),
    /**
     * <code>ALLIANCE_BASE_LIST_S = 9090;</code>
     */
    ALLIANCE_BASE_LIST_S(226, 9090),
    /**
     * <code>ALLIANCE_APPLY_N_S = 9100;</code>
     */
    ALLIANCE_APPLY_N_S(227, 9100),
    /**
     * <code>ALLIANCE_REMOVE_APPLY_N_S = 9101;</code>
     */
    ALLIANCE_REMOVE_APPLY_N_S(228, 9101),
    /**
     * <code>ALLIANCE_NOTICE_N_S = 9102;</code>
     */
    ALLIANCE_NOTICE_N_S(229, 9102),
    /**
     * <code>ALLIANCE_MEMBER_ADD_N_S = 9103;</code>
     */
    ALLIANCE_MEMBER_ADD_N_S(230, 9103),
    /**
     * <code>ALLIANCE_MEMBER_REMOVE_N_S = 9104;</code>
     */
    ALLIANCE_MEMBER_REMOVE_N_S(231, 9104),
    /**
     * <code>ALLIANCE_CHANGE_POS_N_S = 9105;</code>
     */
    ALLIANCE_CHANGE_POS_N_S(232, 9105),
    /**
     * <code>ALLIANCE_CHANGE_OWNER_N_S = 9106;</code>
     */
    ALLIANCE_CHANGE_OWNER_N_S(233, 9106),
    /**
     * <code>ALLIANCE_LEVEL_CHANGE_N_S = 9107;</code>
     */
    ALLIANCE_LEVEL_CHANGE_N_S(234, 9107),
    /**
     * <code>ALLIANCE_JOIN_N_S = 9108;</code>
     */
    ALLIANCE_JOIN_N_S(235, 9108),
    /**
     * <code>ALLIANCE_LEAVE_N_S = 9109;</code>
     */
    ALLIANCE_LEAVE_N_S(236, 9109),
    /**
     * <code>ALLIANCE_QUEST_FINISH_N_S = 9110;</code>
     */
    ALLIANCE_QUEST_FINISH_N_S(237, 9110),
    /**
     * <code>ALLIANCE_TEAM_JOIN_N_S = 9111;</code>
     */
    ALLIANCE_TEAM_JOIN_N_S(238, 9111),
    /**
     * <code>ALLIANCE_TEAM_LEAVE_N_S = 9112;</code>
     */
    ALLIANCE_TEAM_LEAVE_N_S(239, 9112),
    /**
     * <code>ALLIANCE_TASK_TIMEOUT_N_S = 9113;</code>
     */
    ALLIANCE_TASK_TIMEOUT_N_S(240, 9113),
    /**
     * <code>SETTING_LANGUAGE_C = 10001;</code>
     *
     * <pre>
     * 系统设置
     * </pre>
     */
    SETTING_LANGUAGE_C(241, 10001),
    /**
     * <code>SETTING_LANGUAGE_S = 10002;</code>
     */
    SETTING_LANGUAGE_S(242, 10002),
    /**
     * <code>SETTING_BLOCK_C = 10003;</code>
     */
    SETTING_BLOCK_C(243, 10003),
    /**
     * <code>SETTING_BLOCK_S = 10004;</code>
     */
    SETTING_BLOCK_S(244, 10004),
    /**
     * <code>SYNC_DAILY_REFRESH_S = 11001;</code>
     *
     * <pre>
     * 数据同步
     * </pre>
     */
    SYNC_DAILY_REFRESH_S(245, 11001),
    /**
     * <code>SYNC_MONTHLY_REFRESH_S = 11002;</code>
     *
     * <pre>
     * 每月刷新
     * </pre>
     */
    SYNC_MONTHLY_REFRESH_S(246, 11002),
    /**
     * <code>SYNC_SHOP_REFRESH_S = 11003;</code>
     *
     * <pre>
     * 商店刷新
     * </pre>
     */
    SYNC_SHOP_REFRESH_S(247, 11003),
    /**
     * <code>SYNC_EXP_LEFT_TIMES_S = 11004;</code>
     *
     * <pre>
     * 经验药水剩余次数
     * </pre>
     */
    SYNC_EXP_LEFT_TIMES_S(248, 11004),
    /**
     * <code>PVP_SET_DEFENCE_MONSTERS_C = 12001;</code>
     *
     * <pre>
     *PVP
     * </pre>
     */
    PVP_SET_DEFENCE_MONSTERS_C(249, 12001),
    /**
     * <code>PVP_SET_DEFENCE_MONSTERS_S = 12002;</code>
     */
    PVP_SET_DEFENCE_MONSTERS_S(250, 12002),
    /**
     * <code>PVP_MATCH_TARGET_C = 12003;</code>
     *
     * <pre>
     *匹配玩家
     * </pre>
     */
    PVP_MATCH_TARGET_C(251, 12003),
    /**
     * <code>PVP_MATCH_TARGET_S = 12004;</code>
     */
    PVP_MATCH_TARGET_S(252, 12004),
    /**
     * <code>PVP_SETTLE_C = 12005;</code>
     *
     * <pre>
     *战斗结算
     * </pre>
     */
    PVP_SETTLE_C(253, 12005),
    /**
     * <code>PVP_SETTLE_S = 12006;</code>
     */
    PVP_SETTLE_S(254, 12006),
    /**
     * <code>PVP_RANK_LIST_C = 12007;</code>
     *
     * <pre>
     *排行榜
     * </pre>
     */
    PVP_RANK_LIST_C(255, 12007),
    /**
     * <code>PVP_RANK_LIST_S = 12008;</code>
     */
    PVP_RANK_LIST_S(256, 12008),
    /**
     * <code>PVP_DEFENCE_RECORD_C = 12009;</code>
     *
     * <pre>
     *防守记录
     * </pre>
     */
    PVP_DEFENCE_RECORD_C(257, 12009),
    /**
     * <code>PVP_DEFENCE_RECORD_S = 12010;</code>
     */
    PVP_DEFENCE_RECORD_S(258, 12010),
    /**
     * <code>PVP_GET_DEFENCE_MONSTERS_C = 12011;</code>
     *
     * <pre>
     *同步pvp防守阵容
     * </pre>
     */
    PVP_GET_DEFENCE_MONSTERS_C(259, 12011),
    /**
     * <code>PVP_GET_DEFENCE_MONSTERS_S = 12012;</code>
     */
    PVP_GET_DEFENCE_MONSTERS_S(260, 12012),
    /**
     * <code>PVP_GET_MY_INFO_C = 12013;</code>
     *
     * <pre>
     *获得我的排名
     * </pre>
     */
    PVP_GET_MY_INFO_C(261, 12013),
    /**
     * <code>PVP_GET_MY_INFO_S = 12014;</code>
     */
    PVP_GET_MY_INFO_S(262, 12014),
    /**
     * <code>PVP_GET_RANK_DEFENCE_C = 12015;</code>
     *
     * <pre>
     *获得排行榜防守数据
     * </pre>
     */
    PVP_GET_RANK_DEFENCE_C(263, 12015),
    /**
     * <code>PVP_GET_RANK_DEFENCE_S = 12016;</code>
     */
    PVP_GET_RANK_DEFENCE_S(264, 12016),
    /**
     * <code>PVP_ENTER_ROOM_C = 12017;</code>
     *
     * <pre>
     *进入房间
     * </pre>
     */
    PVP_ENTER_ROOM_C(265, 12017),
    /**
     * <code>PVP_ENTER_ROOM_S = 12018;</code>
     */
    PVP_ENTER_ROOM_S(266, 12018),
    ;

    /**
     * <code>LOGIN_C = 1000;</code>
     *
     * <pre>
     * 角色登录相关
     * </pre>
     */
    public static final int LOGIN_C_VALUE = 1000;
    /**
     * <code>LOGIN_S = 1001;</code>
     */
    public static final int LOGIN_S_VALUE = 1001;
    /**
     * <code>LOGOUT_C = 1002;</code>
     */
    public static final int LOGOUT_C_VALUE = 1002;
    /**
     * <code>LOGOUT_S = 1003;</code>
     */
    public static final int LOGOUT_S_VALUE = 1003;
    /**
     * <code>RECCONECT_C = 1004;</code>
     */
    public static final int RECCONECT_C_VALUE = 1004;
    /**
     * <code>RECCONECT_S = 1005;</code>
     */
    public static final int RECCONECT_S_VALUE = 1005;
    /**
     * <code>SYNCINFO_C = 1006;</code>
     */
    public static final int SYNCINFO_C_VALUE = 1006;
    /**
     * <code>SYNCINFO_S = 1007;</code>
     */
    public static final int SYNCINFO_S_VALUE = 1007;
    /**
     * <code>KICKOUT_S = 1008;</code>
     */
    public static final int KICKOUT_S_VALUE = 1008;
    /**
     * <code>PLAYER_INFO_SYNC_S = 1020;</code>
     */
    public static final int PLAYER_INFO_SYNC_S_VALUE = 1020;
    /**
     * <code>SETTING_INFO_SYNC_S = 1021;</code>
     */
    public static final int SETTING_INFO_SYNC_S_VALUE = 1021;
    /**
     * <code>MONSTER_INFO_SYNC_S = 1022;</code>
     */
    public static final int MONSTER_INFO_SYNC_S_VALUE = 1022;
    /**
     * <code>ITEM_INFO_SYNC_S = 1023;</code>
     */
    public static final int ITEM_INFO_SYNC_S_VALUE = 1023;
    /**
     * <code>EQUIP_INFO_SYNC_S = 1024;</code>
     */
    public static final int EQUIP_INFO_SYNC_S_VALUE = 1024;
    /**
     * <code>MAIL_INFO_SYNC_S = 1025;</code>
     */
    public static final int MAIL_INFO_SYNC_S_VALUE = 1025;
    /**
     * <code>ADVENTURE_INFO_SYNC_S = 1026;</code>
     */
    public static final int ADVENTURE_INFO_SYNC_S_VALUE = 1026;
    /**
     * <code>QUEST_INFO_SYNC_S = 1027;</code>
     */
    public static final int QUEST_INFO_SYNC_S_VALUE = 1027;
    /**
     * <code>PVP_DEFENCE_SYNC_S = 1028;</code>
     */
    public static final int PVP_DEFENCE_SYNC_S_VALUE = 1028;
    /**
     * <code>STATISTICS_SYNC_PART1_S = 1040;</code>
     */
    public static final int STATISTICS_SYNC_PART1_S_VALUE = 1040;
    /**
     * <code>STATISTICS_SYNC_PART2_S = 1041;</code>
     */
    public static final int STATISTICS_SYNC_PART2_S_VALUE = 1041;
    /**
     * <code>STATISTICS_SYNC_PART3_S = 1042;</code>
     */
    public static final int STATISTICS_SYNC_PART3_S_VALUE = 1042;
    /**
     * <code>STATISTICS_SYNC_GUIDE_S = 1043;</code>
     */
    public static final int STATISTICS_SYNC_GUIDE_S_VALUE = 1043;
    /**
     * <code>ASSEMBLE_FINISH_S = 1099;</code>
     */
    public static final int ASSEMBLE_FINISH_S_VALUE = 1099;
    /**
     * <code>PLAYER_COMPLETE_C = 1101;</code>
     *
     * <pre>
     * 角色详细信息补完
     * </pre>
     */
    public static final int PLAYER_COMPLETE_C_VALUE = 1101;
    /**
     * <code>PLAYER_COMPLETE_S = 1102;</code>
     */
    public static final int PLAYER_COMPLETE_S_VALUE = 1102;
    /**
     * <code>PLAYER_CONSUME_S = 1201;</code>
     *
     * <pre>
     * 消耗、奖励
     * </pre>
     */
    public static final int PLAYER_CONSUME_S_VALUE = 1201;
    /**
     * <code>PLAYER_REWARD_S = 1202;</code>
     */
    public static final int PLAYER_REWARD_S_VALUE = 1202;
    /**
     * <code>SIGNIN_C = 1301;</code>
     *
     * <pre>
     * 签到
     * </pre>
     */
    public static final int SIGNIN_C_VALUE = 1301;
    /**
     * <code>SIGNIN_FILL_C = 1302;</code>
     */
    public static final int SIGNIN_FILL_C_VALUE = 1302;
    /**
     * <code>SIGNIN_S = 1303;</code>
     */
    public static final int SIGNIN_S_VALUE = 1303;
    /**
     * <code>GUIDE_FINISH_C = 1401;</code>
     *
     * <pre>
     * 新手引导
     * </pre>
     */
    public static final int GUIDE_FINISH_C_VALUE = 1401;
    /**
     * <code>GUIDE_FINISH_S = 1402;</code>
     */
    public static final int GUIDE_FINISH_S_VALUE = 1402;
    /**
     * <code>MONSTER_ADD_S = 2001;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    public static final int MONSTER_ADD_S_VALUE = 2001;
    /**
     * <code>MONSTER_CATCH_C = 2002;</code>
     */
    public static final int MONSTER_CATCH_C_VALUE = 2002;
    /**
     * <code>MONSTER_CATCH_S = 2003;</code>
     */
    public static final int MONSTER_CATCH_S_VALUE = 2003;
    /**
     * <code>MONSTER_BREAK_C = 2004;</code>
     */
    public static final int MONSTER_BREAK_C_VALUE = 2004;
    /**
     * <code>MONSTER_BREAK_S = 2005;</code>
     */
    public static final int MONSTER_BREAK_S_VALUE = 2005;
    /**
     * <code>MONSTER_FEED_C = 2006;</code>
     */
    public static final int MONSTER_FEED_C_VALUE = 2006;
    /**
     * <code>MONSTER_FEED_S = 2007;</code>
     */
    public static final int MONSTER_FEED_S_VALUE = 2007;
    /**
     * <code>MONSTER_SKILL_UP_C = 2008;</code>
     */
    public static final int MONSTER_SKILL_UP_C_VALUE = 2008;
    /**
     * <code>MONSTER_SKILL_UP_S = 2009;</code>
     */
    public static final int MONSTER_SKILL_UP_S_VALUE = 2009;
    /**
     * <code>MONSTER_STAGE_UP_C = 2010;</code>
     */
    public static final int MONSTER_STAGE_UP_C_VALUE = 2010;
    /**
     * <code>MONSTER_STAGE_UP_S = 2011;</code>
     */
    public static final int MONSTER_STAGE_UP_S_VALUE = 2011;
    /**
     * <code>MONSTER_LOCK_C = 2012;</code>
     */
    public static final int MONSTER_LOCK_C_VALUE = 2012;
    /**
     * <code>MONSTER_LOCK_S = 2013;</code>
     */
    public static final int MONSTER_LOCK_S_VALUE = 2013;
    /**
     * <code>MONSTER_DECOMPOSE_C = 2014;</code>
     */
    public static final int MONSTER_DECOMPOSE_C_VALUE = 2014;
    /**
     * <code>MONSTER_DECOMPOSE_S = 2015;</code>
     */
    public static final int MONSTER_DECOMPOSE_S_VALUE = 2015;
    /**
     * <code>MONSTER_COMPOSE_C = 2016;</code>
     */
    public static final int MONSTER_COMPOSE_C_VALUE = 2016;
    /**
     * <code>MONSTER_COMPOSE_S = 2017;</code>
     */
    public static final int MONSTER_COMPOSE_S_VALUE = 2017;
    /**
     * <code>INSTANCE_ASSIST_C = 3001;</code>
     *
     * <pre>
     * 副本
     * </pre>
     */
    public static final int INSTANCE_ASSIST_C_VALUE = 3001;
    /**
     * <code>INSTANCE_ASSIST_S = 3002;</code>
     */
    public static final int INSTANCE_ASSIST_S_VALUE = 3002;
    /**
     * <code>INSTANCE_ENTER_C = 3003;</code>
     */
    public static final int INSTANCE_ENTER_C_VALUE = 3003;
    /**
     * <code>INSTANCE_ENTER_S = 3004;</code>
     */
    public static final int INSTANCE_ENTER_S_VALUE = 3004;
    /**
     * <code>INSTANCE_SETTLE_C = 3005;</code>
     */
    public static final int INSTANCE_SETTLE_C_VALUE = 3005;
    /**
     * <code>INSTANCE_SETTLE_S = 3006;</code>
     */
    public static final int INSTANCE_SETTLE_S_VALUE = 3006;
    /**
     * <code>INSTANCE_OPEN_CARD_C = 3007;</code>
     */
    public static final int INSTANCE_OPEN_CARD_C_VALUE = 3007;
    /**
     * <code>INSTANCE_OPEN_CARD_S = 3008;</code>
     */
    public static final int INSTANCE_OPEN_CARD_S_VALUE = 3008;
    /**
     * <code>INSTANCE_SWEEP_C = 3009;</code>
     */
    public static final int INSTANCE_SWEEP_C_VALUE = 3009;
    /**
     * <code>INSTANCE_SWEEP_S = 3010;</code>
     */
    public static final int INSTANCE_SWEEP_S_VALUE = 3010;
    /**
     * <code>INSTANCE_RESET_COUNT_C = 3011;</code>
     */
    public static final int INSTANCE_RESET_COUNT_C_VALUE = 3011;
    /**
     * <code>INSTANCE_RESET_COUNT_S = 3012;</code>
     */
    public static final int INSTANCE_RESET_COUNT_S_VALUE = 3012;
    /**
     * <code>INSTANCE_REVIVE_C = 3013;</code>
     */
    public static final int INSTANCE_REVIVE_C_VALUE = 3013;
    /**
     * <code>INSTANCE_REVIVE_S = 3014;</code>
     */
    public static final int INSTANCE_REVIVE_S_VALUE = 3014;
    /**
     * <code>CHAPTER_BOX_C = 3015;</code>
     */
    public static final int CHAPTER_BOX_C_VALUE = 3015;
    /**
     * <code>CHAPTER_BOX_S = 3016;</code>
     */
    public static final int CHAPTER_BOX_S_VALUE = 3016;
    /**
     * <code>HOLE_ENTER_C = 3101;</code>
     */
    public static final int HOLE_ENTER_C_VALUE = 3101;
    /**
     * <code>TOWER_ENTER_C = 3102;</code>
     */
    public static final int TOWER_ENTER_C_VALUE = 3102;
    /**
     * <code>GUILD_INSTANCE_ENTER_C = 3103;</code>
     */
    public static final int GUILD_INSTANCE_ENTER_C_VALUE = 3103;
    /**
     * <code>ADVENTURE_ENTER_C = 3201;</code>
     */
    public static final int ADVENTURE_ENTER_C_VALUE = 3201;
    /**
     * <code>ADVENTURE_ENTER_S = 3202;</code>
     */
    public static final int ADVENTURE_ENTER_S_VALUE = 3202;
    /**
     * <code>ADVENTURE_SETTLE_C = 3203;</code>
     */
    public static final int ADVENTURE_SETTLE_C_VALUE = 3203;
    /**
     * <code>ADVENTURE_SETTLE_S = 3204;</code>
     */
    public static final int ADVENTURE_SETTLE_S_VALUE = 3204;
    /**
     * <code>ADVENTURE_NEW_CONDITION_C = 3205;</code>
     */
    public static final int ADVENTURE_NEW_CONDITION_C_VALUE = 3205;
    /**
     * <code>ADVENTURE_NEW_CONDITION_S = 3206;</code>
     */
    public static final int ADVENTURE_NEW_CONDITION_S_VALUE = 3206;
    /**
     * <code>ADVENTURE_BUY_CONDITION_C = 3207;</code>
     */
    public static final int ADVENTURE_BUY_CONDITION_C_VALUE = 3207;
    /**
     * <code>ADVENTURE_BUY_CONDITION_S = 3208;</code>
     */
    public static final int ADVENTURE_BUY_CONDITION_S_VALUE = 3208;
    /**
     * <code>ADVENTURE_BUY_TEAM_C = 3209;</code>
     */
    public static final int ADVENTURE_BUY_TEAM_C_VALUE = 3209;
    /**
     * <code>ADVENTURE_BUY_TEAM_S = 3210;</code>
     */
    public static final int ADVENTURE_BUY_TEAM_S_VALUE = 3210;
    /**
     * <code>ADVENTURE_CONDITION_PUSH_S = 3211;</code>
     */
    public static final int ADVENTURE_CONDITION_PUSH_S_VALUE = 3211;
    /**
     * <code>ITEM_USE_C = 4001;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    public static final int ITEM_USE_C_VALUE = 4001;
    /**
     * <code>ITEM_USE_S = 4002;</code>
     */
    public static final int ITEM_USE_S_VALUE = 4002;
    /**
     * <code>ITEM_BOX_USE_BATCH_C = 4003;</code>
     */
    public static final int ITEM_BOX_USE_BATCH_C_VALUE = 4003;
    /**
     * <code>ITEM_BOX_USE_BATCH_S = 4004;</code>
     */
    public static final int ITEM_BOX_USE_BATCH_S_VALUE = 4004;
    /**
     * <code>ITEM_SELL_C = 4005;</code>
     */
    public static final int ITEM_SELL_C_VALUE = 4005;
    /**
     * <code>ITEM_SELL_S = 4006;</code>
     */
    public static final int ITEM_SELL_S_VALUE = 4006;
    /**
     * <code>ITEM_SELL_BATCH_C = 4007;</code>
     */
    public static final int ITEM_SELL_BATCH_C_VALUE = 4007;
    /**
     * <code>ITEM_SELL_BATCH_S = 4008;</code>
     */
    public static final int ITEM_SELL_BATCH_S_VALUE = 4008;
    /**
     * <code>ITEM_BUY_C = 4009;</code>
     */
    public static final int ITEM_BUY_C_VALUE = 4009;
    /**
     * <code>ITEM_BUY_S = 4010;</code>
     */
    public static final int ITEM_BUY_S_VALUE = 4010;
    /**
     * <code>ITEM_COMPOSE_C = 4011;</code>
     */
    public static final int ITEM_COMPOSE_C_VALUE = 4011;
    /**
     * <code>ITEM_COMPOSE_S = 4012;</code>
     */
    public static final int ITEM_COMPOSE_S_VALUE = 4012;
    /**
     * <code>GEM_COMPOSE_C = 4013;</code>
     */
    public static final int GEM_COMPOSE_C_VALUE = 4013;
    /**
     * <code>GEM_COMPOSE_S = 4014;</code>
     */
    public static final int GEM_COMPOSE_S_VALUE = 4014;
    /**
     * <code>ITEM_BUY_AND_USE_C = 4015;</code>
     */
    public static final int ITEM_BUY_AND_USE_C_VALUE = 4015;
    /**
     * <code>ITEM_BUY_AND_USE_S = 4016;</code>
     */
    public static final int ITEM_BUY_AND_USE_S_VALUE = 4016;
    /**
     * <code>EQUIP_SELL_C = 4101;</code>
     */
    public static final int EQUIP_SELL_C_VALUE = 4101;
    /**
     * <code>EQUIP_SELL_S = 4102;</code>
     */
    public static final int EQUIP_SELL_S_VALUE = 4102;
    /**
     * <code>EQUIP_BUY_C = 4103;</code>
     */
    public static final int EQUIP_BUY_C_VALUE = 4103;
    /**
     * <code>EQUIP_BUY_S = 4104;</code>
     */
    public static final int EQUIP_BUY_S_VALUE = 4104;
    /**
     * <code>EQUIP_COMPOSE_C = 4105;</code>
     */
    public static final int EQUIP_COMPOSE_C_VALUE = 4105;
    /**
     * <code>EQUIP_COMPOSE_S = 4106;</code>
     */
    public static final int EQUIP_COMPOSE_S_VALUE = 4106;
    /**
     * <code>EQUIP_INCREASE_LEVEL_C = 4107;</code>
     */
    public static final int EQUIP_INCREASE_LEVEL_C_VALUE = 4107;
    /**
     * <code>EQUIP_INCREASE_LEVEL_S = 4108;</code>
     */
    public static final int EQUIP_INCREASE_LEVEL_S_VALUE = 4108;
    /**
     * <code>EQUIP_INCREASE_STAGE_C = 4109;</code>
     */
    public static final int EQUIP_INCREASE_STAGE_C_VALUE = 4109;
    /**
     * <code>EQUIP_INCREASE_STAGE_S = 4110;</code>
     */
    public static final int EQUIP_INCREASE_STAGE_S_VALUE = 4110;
    /**
     * <code>EQUIP_PUNCH_C = 4111;</code>
     */
    public static final int EQUIP_PUNCH_C_VALUE = 4111;
    /**
     * <code>EQUIP_PUNCH_S = 4112;</code>
     */
    public static final int EQUIP_PUNCH_S_VALUE = 4112;
    /**
     * <code>EQUIP_GEM_C = 4113;</code>
     */
    public static final int EQUIP_GEM_C_VALUE = 4113;
    /**
     * <code>EQUIP_GEM_S = 4114;</code>
     */
    public static final int EQUIP_GEM_S_VALUE = 4114;
    /**
     * <code>EQUIP_DECOMPOSE_C = 4115;</code>
     */
    public static final int EQUIP_DECOMPOSE_C_VALUE = 4115;
    /**
     * <code>EQUIP_DECOMPOSE_S = 4116;</code>
     */
    public static final int EQUIP_DECOMPOSE_S_VALUE = 4116;
    /**
     * <code>EQUIP_MONSTER_DRESS_C = 4120;</code>
     */
    public static final int EQUIP_MONSTER_DRESS_C_VALUE = 4120;
    /**
     * <code>EQUIP_MONSTER_DRESS_S = 4121;</code>
     */
    public static final int EQUIP_MONSTER_DRESS_S_VALUE = 4121;
    /**
     * <code>EQUIP_MONSTER_UNDRESS_C = 4122;</code>
     */
    public static final int EQUIP_MONSTER_UNDRESS_C_VALUE = 4122;
    /**
     * <code>EQUIP_MONSTER_UNDRESS_S = 4123;</code>
     */
    public static final int EQUIP_MONSTER_UNDRESS_S_VALUE = 4123;
    /**
     * <code>EQUIP_MONSTER_REPLACE_C = 4124;</code>
     */
    public static final int EQUIP_MONSTER_REPLACE_C_VALUE = 4124;
    /**
     * <code>EQUIP_MONSTER_REPLACE_S = 4125;</code>
     */
    public static final int EQUIP_MONSTER_REPLACE_S_VALUE = 4125;
    /**
     * <code>QUEST_SUBMIT_C = 5001;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public static final int QUEST_SUBMIT_C_VALUE = 5001;
    /**
     * <code>QUEST_SUBMIT_S = 5002;</code>
     */
    public static final int QUEST_SUBMIT_S_VALUE = 5002;
    /**
     * <code>QUEST_ACCEPT_S = 5003;</code>
     */
    public static final int QUEST_ACCEPT_S_VALUE = 5003;
    /**
     * <code>QUEST_UPDATE_S = 5004;</code>
     */
    public static final int QUEST_UPDATE_S_VALUE = 5004;
    /**
     * <code>QUEST_REMOVE_S = 5005;</code>
     */
    public static final int QUEST_REMOVE_S_VALUE = 5005;
    /**
     * <code>MAIL_READ_C = 6001;</code>
     *
     * <pre>
     * 邮件
     * </pre>
     */
    public static final int MAIL_READ_C_VALUE = 6001;
    /**
     * <code>MAIL_RECEIVE_C = 6002;</code>
     */
    public static final int MAIL_RECEIVE_C_VALUE = 6002;
    /**
     * <code>MAIL_RECEIVE_S = 6003;</code>
     */
    public static final int MAIL_RECEIVE_S_VALUE = 6003;
    /**
     * <code>MAIL_RECEIVE_ALL_C = 6004;</code>
     */
    public static final int MAIL_RECEIVE_ALL_C_VALUE = 6004;
    /**
     * <code>MAIL_RECEIVE_ALL_S = 6005;</code>
     */
    public static final int MAIL_RECEIVE_ALL_S_VALUE = 6005;
    /**
     * <code>MAIL_NEW_S = 6006;</code>
     */
    public static final int MAIL_NEW_S_VALUE = 6006;
    /**
     * <code>MAIL_DELETE_C = 6007;</code>
     */
    public static final int MAIL_DELETE_C_VALUE = 6007;
    /**
     * <code>MAIL_DELETE_S = 6008;</code>
     */
    public static final int MAIL_DELETE_S_VALUE = 6008;
    /**
     * <code>IM_CHAT_SEND_C = 7001;</code>
     *
     * <pre>
     * 即时通讯
     * </pre>
     */
    public static final int IM_CHAT_SEND_C_VALUE = 7001;
    /**
     * <code>IM_PUSH_S = 7002;</code>
     */
    public static final int IM_PUSH_S_VALUE = 7002;
    /**
     * <code>IM_PLAYER_GET_C = 7003;</code>
     */
    public static final int IM_PLAYER_GET_C_VALUE = 7003;
    /**
     * <code>IM_PLAYER_GET_S = 7004;</code>
     */
    public static final int IM_PLAYER_GET_S_VALUE = 7004;
    /**
     * <code>IM_DUMP_S = 7005;</code>
     */
    public static final int IM_DUMP_S_VALUE = 7005;
    /**
     * <code>SHOP_DATA_INIT_C = 8001;</code>
     *
     * <pre>
     * 商店
     * </pre>
     */
    public static final int SHOP_DATA_INIT_C_VALUE = 8001;
    /**
     * <code>SHOP_DATA_INIT_S = 8002;</code>
     */
    public static final int SHOP_DATA_INIT_S_VALUE = 8002;
    /**
     * <code>SHOP_REFRESH_C = 8003;</code>
     */
    public static final int SHOP_REFRESH_C_VALUE = 8003;
    /**
     * <code>SHOP_REFRESH_S = 8004;</code>
     */
    public static final int SHOP_REFRESH_S_VALUE = 8004;
    /**
     * <code>SHOP_ITEM_BUY_C = 8005;</code>
     */
    public static final int SHOP_ITEM_BUY_C_VALUE = 8005;
    /**
     * <code>SHOP_ITEM_BUY_S = 8006;</code>
     */
    public static final int SHOP_ITEM_BUY_S_VALUE = 8006;
    /**
     * <code>SHOP_DATA_SYN_C = 8007;</code>
     */
    public static final int SHOP_DATA_SYN_C_VALUE = 8007;
    /**
     * <code>SHOP_DATA_SYN_S = 8008;</code>
     */
    public static final int SHOP_DATA_SYN_S_VALUE = 8008;
    /**
     * <code>SHOP_GOLD2COIN_C = 8009;</code>
     */
    public static final int SHOP_GOLD2COIN_C_VALUE = 8009;
    /**
     * <code>SHOP_GOLD2COIN_S = 8010;</code>
     */
    public static final int SHOP_GOLD2COIN_S_VALUE = 8010;
    /**
     * <code>SHOP_REFRESH_TIMES = 8011;</code>
     */
    public static final int SHOP_REFRESH_TIMES_VALUE = 8011;
    /**
     * <code>SHOP_STORE_BUY_C = 8012;</code>
     */
    public static final int SHOP_STORE_BUY_C_VALUE = 8012;
    /**
     * <code>SHOP_STORE_BUY_S = 8013;</code>
     */
    public static final int SHOP_STORE_BUY_S_VALUE = 8013;
    /**
     * <code>SUMMON_ONE_C = 8101;</code>
     */
    public static final int SUMMON_ONE_C_VALUE = 8101;
    /**
     * <code>SUMMON_ONE_S = 8102;</code>
     */
    public static final int SUMMON_ONE_S_VALUE = 8102;
    /**
     * <code>SUMMON_TEN_C = 8103;</code>
     */
    public static final int SUMMON_TEN_C_VALUE = 8103;
    /**
     * <code>SUMMON_TEN_S = 8104;</code>
     */
    public static final int SUMMON_TEN_S_VALUE = 8104;
    /**
     * <code>ALLIANCE_CREATE_C = 9001;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    public static final int ALLIANCE_CREATE_C_VALUE = 9001;
    /**
     * <code>ALLIANCE_CREATE_S = 9002;</code>
     */
    public static final int ALLIANCE_CREATE_S_VALUE = 9002;
    /**
     * <code>ALLIANCE_LIST_C = 9003;</code>
     */
    public static final int ALLIANCE_LIST_C_VALUE = 9003;
    /**
     * <code>ALLIANCE_LIST_S = 9004;</code>
     */
    public static final int ALLIANCE_LIST_S_VALUE = 9004;
    /**
     * <code>ALLIANCE_SEARCH_C = 9005;</code>
     */
    public static final int ALLIANCE_SEARCH_C_VALUE = 9005;
    /**
     * <code>ALLIANCE_SEARCH_S = 9006;</code>
     */
    public static final int ALLIANCE_SEARCH_S_VALUE = 9006;
    /**
     * <code>ALLIANCE_NOTICE_C = 9007;</code>
     */
    public static final int ALLIANCE_NOTICE_C_VALUE = 9007;
    /**
     * <code>ALLIANCE_NOTICE_S = 9008;</code>
     */
    public static final int ALLIANCE_NOTICE_S_VALUE = 9008;
    /**
     * <code>ALLIANCE_APPLY_C = 9009;</code>
     */
    public static final int ALLIANCE_APPLY_C_VALUE = 9009;
    /**
     * <code>ALLIANCE_APPLY_S = 9010;</code>
     */
    public static final int ALLIANCE_APPLY_S_VALUE = 9010;
    /**
     * <code>ALLIANCE_HANDLE_APPLY_C = 9011;</code>
     */
    public static final int ALLIANCE_HANDLE_APPLY_C_VALUE = 9011;
    /**
     * <code>ALLIANCE_HANDLE_APPLY_S = 9012;</code>
     */
    public static final int ALLIANCE_HANDLE_APPLY_S_VALUE = 9012;
    /**
     * <code>ALLIANCE_DATA_C = 9013;</code>
     */
    public static final int ALLIANCE_DATA_C_VALUE = 9013;
    /**
     * <code>ALLIANCE_DATA_S = 9014;</code>
     */
    public static final int ALLIANCE_DATA_S_VALUE = 9014;
    /**
     * <code>ALLIANCE_SELF_DATA_C = 9015;</code>
     */
    public static final int ALLIANCE_SELF_DATA_C_VALUE = 9015;
    /**
     * <code>ALLIANCE_SELF_DATA_S = 9016;</code>
     */
    public static final int ALLIANCE_SELF_DATA_S_VALUE = 9016;
    /**
     * <code>ALLIANCE_MEMBERS_C = 9017;</code>
     */
    public static final int ALLIANCE_MEMBERS_C_VALUE = 9017;
    /**
     * <code>ALLIANCE_MEMBERS_S = 9018;</code>
     */
    public static final int ALLIANCE_MEMBERS_S_VALUE = 9018;
    /**
     * <code>ALLIANCE_APPLYS_C = 9019;</code>
     */
    public static final int ALLIANCE_APPLYS_C_VALUE = 9019;
    /**
     * <code>ALLIANCE_APPLYS_S = 9020;</code>
     */
    public static final int ALLIANCE_APPLYS_S_VALUE = 9020;
    /**
     * <code>ALLIANCE_FATIGUE_C = 9021;</code>
     */
    public static final int ALLIANCE_FATIGUE_C_VALUE = 9021;
    /**
     * <code>ALLIANCE_FATIGUE_S = 9022;</code>
     */
    public static final int ALLIANCE_FATIGUE_S_VALUE = 9022;
    /**
     * <code>ALLIANCE_SYN_C = 9023;</code>
     */
    public static final int ALLIANCE_SYN_C_VALUE = 9023;
    /**
     * <code>ALLIANCE_SYN_S = 9024;</code>
     */
    public static final int ALLIANCE_SYN_S_VALUE = 9024;
    /**
     * <code>ALLIANCE_CHANGE_POS_C = 9025;</code>
     */
    public static final int ALLIANCE_CHANGE_POS_C_VALUE = 9025;
    /**
     * <code>ALLIANCE_CHANGE_POS_S = 9026;</code>
     */
    public static final int ALLIANCE_CHANGE_POS_S_VALUE = 9026;
    /**
     * <code>ALLIANCE_MEMBER_KICK_C = 9027;</code>
     */
    public static final int ALLIANCE_MEMBER_KICK_C_VALUE = 9027;
    /**
     * <code>ALLIANCE_MEMBER_KICK_S = 9028;</code>
     */
    public static final int ALLIANCE_MEMBER_KICK_S_VALUE = 9028;
    /**
     * <code>ALLIANCE_MEMBER_LEAVE_C = 9029;</code>
     */
    public static final int ALLIANCE_MEMBER_LEAVE_C_VALUE = 9029;
    /**
     * <code>ALLIANCE_MEMBER_LEAVE_S = 9030;</code>
     */
    public static final int ALLIANCE_MEMBER_LEAVE_S_VALUE = 9030;
    /**
     * <code>ALLIANCE_CHANGE_OWNER_C = 9031;</code>
     */
    public static final int ALLIANCE_CHANGE_OWNER_C_VALUE = 9031;
    /**
     * <code>ALLIANCE_CHANGE_OWNER_S = 9032;</code>
     */
    public static final int ALLIANCE_CHANGE_OWNER_S_VALUE = 9032;
    /**
     * <code>ALLIANCE_LEVEL_UP_C = 9033;</code>
     */
    public static final int ALLIANCE_LEVEL_UP_C_VALUE = 9033;
    /**
     * <code>ALLIANCE_LEVEL_UP_S = 9034;</code>
     */
    public static final int ALLIANCE_LEVEL_UP_S_VALUE = 9034;
    /**
     * <code>ALLIANCE_PRAY_C = 9035;</code>
     */
    public static final int ALLIANCE_PRAY_C_VALUE = 9035;
    /**
     * <code>ALLIANCE_PRAY_S = 9036;</code>
     */
    public static final int ALLIANCE_PRAY_S_VALUE = 9036;
    /**
     * <code>ALLIANCE_SETTING_C = 9037;</code>
     */
    public static final int ALLIANCE_SETTING_C_VALUE = 9037;
    /**
     * <code>ALLIANCE_SETTING_S = 9038;</code>
     */
    public static final int ALLIANCE_SETTING_S_VALUE = 9038;
    /**
     * <code>ALLIANCE_SETTING_SYNC_C = 9039;</code>
     */
    public static final int ALLIANCE_SETTING_SYNC_C_VALUE = 9039;
    /**
     * <code>ALLIANCE_SETTING_SYNC_S = 9040;</code>
     */
    public static final int ALLIANCE_SETTING_SYNC_S_VALUE = 9040;
    /**
     * <code>ALLIANCE_FATIGUE_GIVE_C = 9041;</code>
     */
    public static final int ALLIANCE_FATIGUE_GIVE_C_VALUE = 9041;
    /**
     * <code>ALLIANCE_FATIGUE_GIVE_S = 9042;</code>
     */
    public static final int ALLIANCE_FATIGUE_GIVE_S_VALUE = 9042;
    /**
     * <code>ALLIANCE_CANCLE_APPLY_C = 9043;</code>
     */
    public static final int ALLIANCE_CANCLE_APPLY_C_VALUE = 9043;
    /**
     * <code>ALLIANCE_CANCLE_APPLY_S = 9044;</code>
     */
    public static final int ALLIANCE_CANCLE_APPLY_S_VALUE = 9044;
    /**
     * <code>ALLIANCE_CREATE_TEAM_C = 9060;</code>
     */
    public static final int ALLIANCE_CREATE_TEAM_C_VALUE = 9060;
    /**
     * <code>ALLIANCE_CREATE_TEAM_S = 9061;</code>
     */
    public static final int ALLIANCE_CREATE_TEAM_S_VALUE = 9061;
    /**
     * <code>ALLIANCE_JOIN_TEAM_C = 9062;</code>
     */
    public static final int ALLIANCE_JOIN_TEAM_C_VALUE = 9062;
    /**
     * <code>ALLIANCE_JOIN_TEAM_S = 9063;</code>
     */
    public static final int ALLIANCE_JOIN_TEAM_S_VALUE = 9063;
    /**
     * <code>ALLIANCE_ACCEPT_TASK_C = 9064;</code>
     */
    public static final int ALLIANCE_ACCEPT_TASK_C_VALUE = 9064;
    /**
     * <code>ALLIANCE_ACCEPT_TASK_S = 9065;</code>
     */
    public static final int ALLIANCE_ACCEPT_TASK_S_VALUE = 9065;
    /**
     * <code>ALLIANCE_COMMIT_TASK_C = 9066;</code>
     */
    public static final int ALLIANCE_COMMIT_TASK_C_VALUE = 9066;
    /**
     * <code>ALLIANCE_COMMIT_TASK_S = 9067;</code>
     */
    public static final int ALLIANCE_COMMIT_TASK_S_VALUE = 9067;
    /**
     * <code>ALLIANCE_TASK_REWARD_C = 9068;</code>
     */
    public static final int ALLIANCE_TASK_REWARD_C_VALUE = 9068;
    /**
     * <code>ALLIANCE_TASK_REWARD_S = 9069;</code>
     */
    public static final int ALLIANCE_TASK_REWARD_S_VALUE = 9069;
    /**
     * <code>ALLIANCE_TEAM_LIST_C = 9070;</code>
     */
    public static final int ALLIANCE_TEAM_LIST_C_VALUE = 9070;
    /**
     * <code>ALLIANCE_TEAM_LIST_S = 9071;</code>
     */
    public static final int ALLIANCE_TEAM_LIST_S_VALUE = 9071;
    /**
     * <code>ALLIANCE_SELF_TEAM_C = 9072;</code>
     */
    public static final int ALLIANCE_SELF_TEAM_C_VALUE = 9072;
    /**
     * <code>ALLIANCE_SELF_TEAM_S = 9073;</code>
     */
    public static final int ALLIANCE_SELF_TEAM_S_VALUE = 9073;
    /**
     * <code>ALLIANCE_INSTANCE_TASK_C = 9074;</code>
     */
    public static final int ALLIANCE_INSTANCE_TASK_C_VALUE = 9074;
    /**
     * <code>ALLIANCE_INSTANCE_TASK_S = 9075;</code>
     */
    public static final int ALLIANCE_INSTANCE_TASK_S_VALUE = 9075;
    /**
     * <code>ALLIANCE_DISSOVLE_TEAM_C = 9076;</code>
     */
    public static final int ALLIANCE_DISSOVLE_TEAM_C_VALUE = 9076;
    /**
     * <code>ALLIANCE_DISSOVLE_TEAM_S = 9077;</code>
     */
    public static final int ALLIANCE_DISSOVLE_TEAM_S_VALUE = 9077;
    /**
     * <code>ALLIANCE_CONTRIBUTION_C = 9078;</code>
     */
    public static final int ALLIANCE_CONTRIBUTION_C_VALUE = 9078;
    /**
     * <code>ALLIANCE_CONTRIBUTION_S = 9079;</code>
     */
    public static final int ALLIANCE_CONTRIBUTION_S_VALUE = 9079;
    /**
     * <code>ALLIANCE_CONTRI_REWARD_C = 9080;</code>
     */
    public static final int ALLIANCE_CONTRI_REWARD_C_VALUE = 9080;
    /**
     * <code>ALLIANCE_CONTRI_REWARD_S = 9081;</code>
     */
    public static final int ALLIANCE_CONTRI_REWARD_S_VALUE = 9081;
    /**
     * <code>ALLIANCE_INSTANCE_REWARD_S = 9082;</code>
     */
    public static final int ALLIANCE_INSTANCE_REWARD_S_VALUE = 9082;
    /**
     * <code>ALLIANCE_BASE_SEND_C = 9083;</code>
     */
    public static final int ALLIANCE_BASE_SEND_C_VALUE = 9083;
    /**
     * <code>ALLIANCE_BASE_SEND_S = 9084;</code>
     */
    public static final int ALLIANCE_BASE_SEND_S_VALUE = 9084;
    /**
     * <code>ALLIANCE_BASE_RECALL_C = 9085;</code>
     */
    public static final int ALLIANCE_BASE_RECALL_C_VALUE = 9085;
    /**
     * <code>ALLIANCE_BASE_RECALL_S = 9086;</code>
     */
    public static final int ALLIANCE_BASE_RECALL_S_VALUE = 9086;
    /**
     * <code>ALLIANCE_MY_BASE_LIST_C = 9087;</code>
     */
    public static final int ALLIANCE_MY_BASE_LIST_C_VALUE = 9087;
    /**
     * <code>ALLIANCE_MY_BASE_LIST_S = 9088;</code>
     */
    public static final int ALLIANCE_MY_BASE_LIST_S_VALUE = 9088;
    /**
     * <code>ALLIANCE_BASE_LIST_C = 9089;</code>
     */
    public static final int ALLIANCE_BASE_LIST_C_VALUE = 9089;
    /**
     * <code>ALLIANCE_BASE_LIST_S = 9090;</code>
     */
    public static final int ALLIANCE_BASE_LIST_S_VALUE = 9090;
    /**
     * <code>ALLIANCE_APPLY_N_S = 9100;</code>
     */
    public static final int ALLIANCE_APPLY_N_S_VALUE = 9100;
    /**
     * <code>ALLIANCE_REMOVE_APPLY_N_S = 9101;</code>
     */
    public static final int ALLIANCE_REMOVE_APPLY_N_S_VALUE = 9101;
    /**
     * <code>ALLIANCE_NOTICE_N_S = 9102;</code>
     */
    public static final int ALLIANCE_NOTICE_N_S_VALUE = 9102;
    /**
     * <code>ALLIANCE_MEMBER_ADD_N_S = 9103;</code>
     */
    public static final int ALLIANCE_MEMBER_ADD_N_S_VALUE = 9103;
    /**
     * <code>ALLIANCE_MEMBER_REMOVE_N_S = 9104;</code>
     */
    public static final int ALLIANCE_MEMBER_REMOVE_N_S_VALUE = 9104;
    /**
     * <code>ALLIANCE_CHANGE_POS_N_S = 9105;</code>
     */
    public static final int ALLIANCE_CHANGE_POS_N_S_VALUE = 9105;
    /**
     * <code>ALLIANCE_CHANGE_OWNER_N_S = 9106;</code>
     */
    public static final int ALLIANCE_CHANGE_OWNER_N_S_VALUE = 9106;
    /**
     * <code>ALLIANCE_LEVEL_CHANGE_N_S = 9107;</code>
     */
    public static final int ALLIANCE_LEVEL_CHANGE_N_S_VALUE = 9107;
    /**
     * <code>ALLIANCE_JOIN_N_S = 9108;</code>
     */
    public static final int ALLIANCE_JOIN_N_S_VALUE = 9108;
    /**
     * <code>ALLIANCE_LEAVE_N_S = 9109;</code>
     */
    public static final int ALLIANCE_LEAVE_N_S_VALUE = 9109;
    /**
     * <code>ALLIANCE_QUEST_FINISH_N_S = 9110;</code>
     */
    public static final int ALLIANCE_QUEST_FINISH_N_S_VALUE = 9110;
    /**
     * <code>ALLIANCE_TEAM_JOIN_N_S = 9111;</code>
     */
    public static final int ALLIANCE_TEAM_JOIN_N_S_VALUE = 9111;
    /**
     * <code>ALLIANCE_TEAM_LEAVE_N_S = 9112;</code>
     */
    public static final int ALLIANCE_TEAM_LEAVE_N_S_VALUE = 9112;
    /**
     * <code>ALLIANCE_TASK_TIMEOUT_N_S = 9113;</code>
     */
    public static final int ALLIANCE_TASK_TIMEOUT_N_S_VALUE = 9113;
    /**
     * <code>SETTING_LANGUAGE_C = 10001;</code>
     *
     * <pre>
     * 系统设置
     * </pre>
     */
    public static final int SETTING_LANGUAGE_C_VALUE = 10001;
    /**
     * <code>SETTING_LANGUAGE_S = 10002;</code>
     */
    public static final int SETTING_LANGUAGE_S_VALUE = 10002;
    /**
     * <code>SETTING_BLOCK_C = 10003;</code>
     */
    public static final int SETTING_BLOCK_C_VALUE = 10003;
    /**
     * <code>SETTING_BLOCK_S = 10004;</code>
     */
    public static final int SETTING_BLOCK_S_VALUE = 10004;
    /**
     * <code>SYNC_DAILY_REFRESH_S = 11001;</code>
     *
     * <pre>
     * 数据同步
     * </pre>
     */
    public static final int SYNC_DAILY_REFRESH_S_VALUE = 11001;
    /**
     * <code>SYNC_MONTHLY_REFRESH_S = 11002;</code>
     *
     * <pre>
     * 每月刷新
     * </pre>
     */
    public static final int SYNC_MONTHLY_REFRESH_S_VALUE = 11002;
    /**
     * <code>SYNC_SHOP_REFRESH_S = 11003;</code>
     *
     * <pre>
     * 商店刷新
     * </pre>
     */
    public static final int SYNC_SHOP_REFRESH_S_VALUE = 11003;
    /**
     * <code>SYNC_EXP_LEFT_TIMES_S = 11004;</code>
     *
     * <pre>
     * 经验药水剩余次数
     * </pre>
     */
    public static final int SYNC_EXP_LEFT_TIMES_S_VALUE = 11004;
    /**
     * <code>PVP_SET_DEFENCE_MONSTERS_C = 12001;</code>
     *
     * <pre>
     *PVP
     * </pre>
     */
    public static final int PVP_SET_DEFENCE_MONSTERS_C_VALUE = 12001;
    /**
     * <code>PVP_SET_DEFENCE_MONSTERS_S = 12002;</code>
     */
    public static final int PVP_SET_DEFENCE_MONSTERS_S_VALUE = 12002;
    /**
     * <code>PVP_MATCH_TARGET_C = 12003;</code>
     *
     * <pre>
     *匹配玩家
     * </pre>
     */
    public static final int PVP_MATCH_TARGET_C_VALUE = 12003;
    /**
     * <code>PVP_MATCH_TARGET_S = 12004;</code>
     */
    public static final int PVP_MATCH_TARGET_S_VALUE = 12004;
    /**
     * <code>PVP_SETTLE_C = 12005;</code>
     *
     * <pre>
     *战斗结算
     * </pre>
     */
    public static final int PVP_SETTLE_C_VALUE = 12005;
    /**
     * <code>PVP_SETTLE_S = 12006;</code>
     */
    public static final int PVP_SETTLE_S_VALUE = 12006;
    /**
     * <code>PVP_RANK_LIST_C = 12007;</code>
     *
     * <pre>
     *排行榜
     * </pre>
     */
    public static final int PVP_RANK_LIST_C_VALUE = 12007;
    /**
     * <code>PVP_RANK_LIST_S = 12008;</code>
     */
    public static final int PVP_RANK_LIST_S_VALUE = 12008;
    /**
     * <code>PVP_DEFENCE_RECORD_C = 12009;</code>
     *
     * <pre>
     *防守记录
     * </pre>
     */
    public static final int PVP_DEFENCE_RECORD_C_VALUE = 12009;
    /**
     * <code>PVP_DEFENCE_RECORD_S = 12010;</code>
     */
    public static final int PVP_DEFENCE_RECORD_S_VALUE = 12010;
    /**
     * <code>PVP_GET_DEFENCE_MONSTERS_C = 12011;</code>
     *
     * <pre>
     *同步pvp防守阵容
     * </pre>
     */
    public static final int PVP_GET_DEFENCE_MONSTERS_C_VALUE = 12011;
    /**
     * <code>PVP_GET_DEFENCE_MONSTERS_S = 12012;</code>
     */
    public static final int PVP_GET_DEFENCE_MONSTERS_S_VALUE = 12012;
    /**
     * <code>PVP_GET_MY_INFO_C = 12013;</code>
     *
     * <pre>
     *获得我的排名
     * </pre>
     */
    public static final int PVP_GET_MY_INFO_C_VALUE = 12013;
    /**
     * <code>PVP_GET_MY_INFO_S = 12014;</code>
     */
    public static final int PVP_GET_MY_INFO_S_VALUE = 12014;
    /**
     * <code>PVP_GET_RANK_DEFENCE_C = 12015;</code>
     *
     * <pre>
     *获得排行榜防守数据
     * </pre>
     */
    public static final int PVP_GET_RANK_DEFENCE_C_VALUE = 12015;
    /**
     * <code>PVP_GET_RANK_DEFENCE_S = 12016;</code>
     */
    public static final int PVP_GET_RANK_DEFENCE_S_VALUE = 12016;
    /**
     * <code>PVP_ENTER_ROOM_C = 12017;</code>
     *
     * <pre>
     *进入房间
     * </pre>
     */
    public static final int PVP_ENTER_ROOM_C_VALUE = 12017;
    /**
     * <code>PVP_ENTER_ROOM_S = 12018;</code>
     */
    public static final int PVP_ENTER_ROOM_S_VALUE = 12018;


    public final int getNumber() { return value; }

    public static code valueOf(int value) {
      switch (value) {
        case 1000: return LOGIN_C;
        case 1001: return LOGIN_S;
        case 1002: return LOGOUT_C;
        case 1003: return LOGOUT_S;
        case 1004: return RECCONECT_C;
        case 1005: return RECCONECT_S;
        case 1006: return SYNCINFO_C;
        case 1007: return SYNCINFO_S;
        case 1008: return KICKOUT_S;
        case 1020: return PLAYER_INFO_SYNC_S;
        case 1021: return SETTING_INFO_SYNC_S;
        case 1022: return MONSTER_INFO_SYNC_S;
        case 1023: return ITEM_INFO_SYNC_S;
        case 1024: return EQUIP_INFO_SYNC_S;
        case 1025: return MAIL_INFO_SYNC_S;
        case 1026: return ADVENTURE_INFO_SYNC_S;
        case 1027: return QUEST_INFO_SYNC_S;
        case 1028: return PVP_DEFENCE_SYNC_S;
        case 1040: return STATISTICS_SYNC_PART1_S;
        case 1041: return STATISTICS_SYNC_PART2_S;
        case 1042: return STATISTICS_SYNC_PART3_S;
        case 1043: return STATISTICS_SYNC_GUIDE_S;
        case 1099: return ASSEMBLE_FINISH_S;
        case 1101: return PLAYER_COMPLETE_C;
        case 1102: return PLAYER_COMPLETE_S;
        case 1201: return PLAYER_CONSUME_S;
        case 1202: return PLAYER_REWARD_S;
        case 1301: return SIGNIN_C;
        case 1302: return SIGNIN_FILL_C;
        case 1303: return SIGNIN_S;
        case 1401: return GUIDE_FINISH_C;
        case 1402: return GUIDE_FINISH_S;
        case 2001: return MONSTER_ADD_S;
        case 2002: return MONSTER_CATCH_C;
        case 2003: return MONSTER_CATCH_S;
        case 2004: return MONSTER_BREAK_C;
        case 2005: return MONSTER_BREAK_S;
        case 2006: return MONSTER_FEED_C;
        case 2007: return MONSTER_FEED_S;
        case 2008: return MONSTER_SKILL_UP_C;
        case 2009: return MONSTER_SKILL_UP_S;
        case 2010: return MONSTER_STAGE_UP_C;
        case 2011: return MONSTER_STAGE_UP_S;
        case 2012: return MONSTER_LOCK_C;
        case 2013: return MONSTER_LOCK_S;
        case 2014: return MONSTER_DECOMPOSE_C;
        case 2015: return MONSTER_DECOMPOSE_S;
        case 2016: return MONSTER_COMPOSE_C;
        case 2017: return MONSTER_COMPOSE_S;
        case 3001: return INSTANCE_ASSIST_C;
        case 3002: return INSTANCE_ASSIST_S;
        case 3003: return INSTANCE_ENTER_C;
        case 3004: return INSTANCE_ENTER_S;
        case 3005: return INSTANCE_SETTLE_C;
        case 3006: return INSTANCE_SETTLE_S;
        case 3007: return INSTANCE_OPEN_CARD_C;
        case 3008: return INSTANCE_OPEN_CARD_S;
        case 3009: return INSTANCE_SWEEP_C;
        case 3010: return INSTANCE_SWEEP_S;
        case 3011: return INSTANCE_RESET_COUNT_C;
        case 3012: return INSTANCE_RESET_COUNT_S;
        case 3013: return INSTANCE_REVIVE_C;
        case 3014: return INSTANCE_REVIVE_S;
        case 3015: return CHAPTER_BOX_C;
        case 3016: return CHAPTER_BOX_S;
        case 3101: return HOLE_ENTER_C;
        case 3102: return TOWER_ENTER_C;
        case 3103: return GUILD_INSTANCE_ENTER_C;
        case 3201: return ADVENTURE_ENTER_C;
        case 3202: return ADVENTURE_ENTER_S;
        case 3203: return ADVENTURE_SETTLE_C;
        case 3204: return ADVENTURE_SETTLE_S;
        case 3205: return ADVENTURE_NEW_CONDITION_C;
        case 3206: return ADVENTURE_NEW_CONDITION_S;
        case 3207: return ADVENTURE_BUY_CONDITION_C;
        case 3208: return ADVENTURE_BUY_CONDITION_S;
        case 3209: return ADVENTURE_BUY_TEAM_C;
        case 3210: return ADVENTURE_BUY_TEAM_S;
        case 3211: return ADVENTURE_CONDITION_PUSH_S;
        case 4001: return ITEM_USE_C;
        case 4002: return ITEM_USE_S;
        case 4003: return ITEM_BOX_USE_BATCH_C;
        case 4004: return ITEM_BOX_USE_BATCH_S;
        case 4005: return ITEM_SELL_C;
        case 4006: return ITEM_SELL_S;
        case 4007: return ITEM_SELL_BATCH_C;
        case 4008: return ITEM_SELL_BATCH_S;
        case 4009: return ITEM_BUY_C;
        case 4010: return ITEM_BUY_S;
        case 4011: return ITEM_COMPOSE_C;
        case 4012: return ITEM_COMPOSE_S;
        case 4013: return GEM_COMPOSE_C;
        case 4014: return GEM_COMPOSE_S;
        case 4015: return ITEM_BUY_AND_USE_C;
        case 4016: return ITEM_BUY_AND_USE_S;
        case 4101: return EQUIP_SELL_C;
        case 4102: return EQUIP_SELL_S;
        case 4103: return EQUIP_BUY_C;
        case 4104: return EQUIP_BUY_S;
        case 4105: return EQUIP_COMPOSE_C;
        case 4106: return EQUIP_COMPOSE_S;
        case 4107: return EQUIP_INCREASE_LEVEL_C;
        case 4108: return EQUIP_INCREASE_LEVEL_S;
        case 4109: return EQUIP_INCREASE_STAGE_C;
        case 4110: return EQUIP_INCREASE_STAGE_S;
        case 4111: return EQUIP_PUNCH_C;
        case 4112: return EQUIP_PUNCH_S;
        case 4113: return EQUIP_GEM_C;
        case 4114: return EQUIP_GEM_S;
        case 4115: return EQUIP_DECOMPOSE_C;
        case 4116: return EQUIP_DECOMPOSE_S;
        case 4120: return EQUIP_MONSTER_DRESS_C;
        case 4121: return EQUIP_MONSTER_DRESS_S;
        case 4122: return EQUIP_MONSTER_UNDRESS_C;
        case 4123: return EQUIP_MONSTER_UNDRESS_S;
        case 4124: return EQUIP_MONSTER_REPLACE_C;
        case 4125: return EQUIP_MONSTER_REPLACE_S;
        case 5001: return QUEST_SUBMIT_C;
        case 5002: return QUEST_SUBMIT_S;
        case 5003: return QUEST_ACCEPT_S;
        case 5004: return QUEST_UPDATE_S;
        case 5005: return QUEST_REMOVE_S;
        case 6001: return MAIL_READ_C;
        case 6002: return MAIL_RECEIVE_C;
        case 6003: return MAIL_RECEIVE_S;
        case 6004: return MAIL_RECEIVE_ALL_C;
        case 6005: return MAIL_RECEIVE_ALL_S;
        case 6006: return MAIL_NEW_S;
        case 6007: return MAIL_DELETE_C;
        case 6008: return MAIL_DELETE_S;
        case 7001: return IM_CHAT_SEND_C;
        case 7002: return IM_PUSH_S;
        case 7003: return IM_PLAYER_GET_C;
        case 7004: return IM_PLAYER_GET_S;
        case 7005: return IM_DUMP_S;
        case 8001: return SHOP_DATA_INIT_C;
        case 8002: return SHOP_DATA_INIT_S;
        case 8003: return SHOP_REFRESH_C;
        case 8004: return SHOP_REFRESH_S;
        case 8005: return SHOP_ITEM_BUY_C;
        case 8006: return SHOP_ITEM_BUY_S;
        case 8007: return SHOP_DATA_SYN_C;
        case 8008: return SHOP_DATA_SYN_S;
        case 8009: return SHOP_GOLD2COIN_C;
        case 8010: return SHOP_GOLD2COIN_S;
        case 8011: return SHOP_REFRESH_TIMES;
        case 8012: return SHOP_STORE_BUY_C;
        case 8013: return SHOP_STORE_BUY_S;
        case 8101: return SUMMON_ONE_C;
        case 8102: return SUMMON_ONE_S;
        case 8103: return SUMMON_TEN_C;
        case 8104: return SUMMON_TEN_S;
        case 9001: return ALLIANCE_CREATE_C;
        case 9002: return ALLIANCE_CREATE_S;
        case 9003: return ALLIANCE_LIST_C;
        case 9004: return ALLIANCE_LIST_S;
        case 9005: return ALLIANCE_SEARCH_C;
        case 9006: return ALLIANCE_SEARCH_S;
        case 9007: return ALLIANCE_NOTICE_C;
        case 9008: return ALLIANCE_NOTICE_S;
        case 9009: return ALLIANCE_APPLY_C;
        case 9010: return ALLIANCE_APPLY_S;
        case 9011: return ALLIANCE_HANDLE_APPLY_C;
        case 9012: return ALLIANCE_HANDLE_APPLY_S;
        case 9013: return ALLIANCE_DATA_C;
        case 9014: return ALLIANCE_DATA_S;
        case 9015: return ALLIANCE_SELF_DATA_C;
        case 9016: return ALLIANCE_SELF_DATA_S;
        case 9017: return ALLIANCE_MEMBERS_C;
        case 9018: return ALLIANCE_MEMBERS_S;
        case 9019: return ALLIANCE_APPLYS_C;
        case 9020: return ALLIANCE_APPLYS_S;
        case 9021: return ALLIANCE_FATIGUE_C;
        case 9022: return ALLIANCE_FATIGUE_S;
        case 9023: return ALLIANCE_SYN_C;
        case 9024: return ALLIANCE_SYN_S;
        case 9025: return ALLIANCE_CHANGE_POS_C;
        case 9026: return ALLIANCE_CHANGE_POS_S;
        case 9027: return ALLIANCE_MEMBER_KICK_C;
        case 9028: return ALLIANCE_MEMBER_KICK_S;
        case 9029: return ALLIANCE_MEMBER_LEAVE_C;
        case 9030: return ALLIANCE_MEMBER_LEAVE_S;
        case 9031: return ALLIANCE_CHANGE_OWNER_C;
        case 9032: return ALLIANCE_CHANGE_OWNER_S;
        case 9033: return ALLIANCE_LEVEL_UP_C;
        case 9034: return ALLIANCE_LEVEL_UP_S;
        case 9035: return ALLIANCE_PRAY_C;
        case 9036: return ALLIANCE_PRAY_S;
        case 9037: return ALLIANCE_SETTING_C;
        case 9038: return ALLIANCE_SETTING_S;
        case 9039: return ALLIANCE_SETTING_SYNC_C;
        case 9040: return ALLIANCE_SETTING_SYNC_S;
        case 9041: return ALLIANCE_FATIGUE_GIVE_C;
        case 9042: return ALLIANCE_FATIGUE_GIVE_S;
        case 9043: return ALLIANCE_CANCLE_APPLY_C;
        case 9044: return ALLIANCE_CANCLE_APPLY_S;
        case 9060: return ALLIANCE_CREATE_TEAM_C;
        case 9061: return ALLIANCE_CREATE_TEAM_S;
        case 9062: return ALLIANCE_JOIN_TEAM_C;
        case 9063: return ALLIANCE_JOIN_TEAM_S;
        case 9064: return ALLIANCE_ACCEPT_TASK_C;
        case 9065: return ALLIANCE_ACCEPT_TASK_S;
        case 9066: return ALLIANCE_COMMIT_TASK_C;
        case 9067: return ALLIANCE_COMMIT_TASK_S;
        case 9068: return ALLIANCE_TASK_REWARD_C;
        case 9069: return ALLIANCE_TASK_REWARD_S;
        case 9070: return ALLIANCE_TEAM_LIST_C;
        case 9071: return ALLIANCE_TEAM_LIST_S;
        case 9072: return ALLIANCE_SELF_TEAM_C;
        case 9073: return ALLIANCE_SELF_TEAM_S;
        case 9074: return ALLIANCE_INSTANCE_TASK_C;
        case 9075: return ALLIANCE_INSTANCE_TASK_S;
        case 9076: return ALLIANCE_DISSOVLE_TEAM_C;
        case 9077: return ALLIANCE_DISSOVLE_TEAM_S;
        case 9078: return ALLIANCE_CONTRIBUTION_C;
        case 9079: return ALLIANCE_CONTRIBUTION_S;
        case 9080: return ALLIANCE_CONTRI_REWARD_C;
        case 9081: return ALLIANCE_CONTRI_REWARD_S;
        case 9082: return ALLIANCE_INSTANCE_REWARD_S;
        case 9083: return ALLIANCE_BASE_SEND_C;
        case 9084: return ALLIANCE_BASE_SEND_S;
        case 9085: return ALLIANCE_BASE_RECALL_C;
        case 9086: return ALLIANCE_BASE_RECALL_S;
        case 9087: return ALLIANCE_MY_BASE_LIST_C;
        case 9088: return ALLIANCE_MY_BASE_LIST_S;
        case 9089: return ALLIANCE_BASE_LIST_C;
        case 9090: return ALLIANCE_BASE_LIST_S;
        case 9100: return ALLIANCE_APPLY_N_S;
        case 9101: return ALLIANCE_REMOVE_APPLY_N_S;
        case 9102: return ALLIANCE_NOTICE_N_S;
        case 9103: return ALLIANCE_MEMBER_ADD_N_S;
        case 9104: return ALLIANCE_MEMBER_REMOVE_N_S;
        case 9105: return ALLIANCE_CHANGE_POS_N_S;
        case 9106: return ALLIANCE_CHANGE_OWNER_N_S;
        case 9107: return ALLIANCE_LEVEL_CHANGE_N_S;
        case 9108: return ALLIANCE_JOIN_N_S;
        case 9109: return ALLIANCE_LEAVE_N_S;
        case 9110: return ALLIANCE_QUEST_FINISH_N_S;
        case 9111: return ALLIANCE_TEAM_JOIN_N_S;
        case 9112: return ALLIANCE_TEAM_LEAVE_N_S;
        case 9113: return ALLIANCE_TASK_TIMEOUT_N_S;
        case 10001: return SETTING_LANGUAGE_C;
        case 10002: return SETTING_LANGUAGE_S;
        case 10003: return SETTING_BLOCK_C;
        case 10004: return SETTING_BLOCK_S;
        case 11001: return SYNC_DAILY_REFRESH_S;
        case 11002: return SYNC_MONTHLY_REFRESH_S;
        case 11003: return SYNC_SHOP_REFRESH_S;
        case 11004: return SYNC_EXP_LEFT_TIMES_S;
        case 12001: return PVP_SET_DEFENCE_MONSTERS_C;
        case 12002: return PVP_SET_DEFENCE_MONSTERS_S;
        case 12003: return PVP_MATCH_TARGET_C;
        case 12004: return PVP_MATCH_TARGET_S;
        case 12005: return PVP_SETTLE_C;
        case 12006: return PVP_SETTLE_S;
        case 12007: return PVP_RANK_LIST_C;
        case 12008: return PVP_RANK_LIST_S;
        case 12009: return PVP_DEFENCE_RECORD_C;
        case 12010: return PVP_DEFENCE_RECORD_S;
        case 12011: return PVP_GET_DEFENCE_MONSTERS_C;
        case 12012: return PVP_GET_DEFENCE_MONSTERS_S;
        case 12013: return PVP_GET_MY_INFO_C;
        case 12014: return PVP_GET_MY_INFO_S;
        case 12015: return PVP_GET_RANK_DEFENCE_C;
        case 12016: return PVP_GET_RANK_DEFENCE_S;
        case 12017: return PVP_ENTER_ROOM_C;
        case 12018: return PVP_ENTER_ROOM_S;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<code>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<code>() {
            public code findValueByNumber(int number) {
              return code.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.HS.getDescriptor().getEnumTypes().get(2);
    }

    private static final code[] VALUES = values();

    public static code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private code(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:code)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Protocol/HS.proto*c\n\003sys\022\020\n\014DATA_WRAPP" +
      "ER\020\001\022\020\n\014KEY_EXCHANGE\020\002\022\016\n\nHEART_BEAT\020\003\022\016" +
      "\n\nDELAY_TEST\020\004\022\016\n\nERROR_CODE\020\005\022\010\n\004WARN\020\006" +
      "*Y\n\002gm\022\024\n\020GEN_TEST_ACCOUNT\020d\022\021\n\rGMOPERAT" +
      "ION_C\020e\022\021\n\rGMOPERATION_S\020f\022\027\n\022GM_INSTANC" +
      "E_PUSH_S\020\310\001*\3113\n\004code\022\014\n\007LOGIN_C\020\350\007\022\014\n\007LO" +
      "GIN_S\020\351\007\022\r\n\010LOGOUT_C\020\352\007\022\r\n\010LOGOUT_S\020\353\007\022\020" +
      "\n\013RECCONECT_C\020\354\007\022\020\n\013RECCONECT_S\020\355\007\022\017\n\nSY" +
      "NCINFO_C\020\356\007\022\017\n\nSYNCINFO_S\020\357\007\022\016\n\tKICKOUT_" +
      "S\020\360\007\022\027\n\022PLAYER_INFO_SYNC_S\020\374\007\022\030\n\023SETTING",
      "_INFO_SYNC_S\020\375\007\022\030\n\023MONSTER_INFO_SYNC_S\020\376" +
      "\007\022\025\n\020ITEM_INFO_SYNC_S\020\377\007\022\026\n\021EQUIP_INFO_S" +
      "YNC_S\020\200\010\022\025\n\020MAIL_INFO_SYNC_S\020\201\010\022\032\n\025ADVEN" +
      "TURE_INFO_SYNC_S\020\202\010\022\026\n\021QUEST_INFO_SYNC_S" +
      "\020\203\010\022\027\n\022PVP_DEFENCE_SYNC_S\020\204\010\022\034\n\027STATISTI" +
      "CS_SYNC_PART1_S\020\220\010\022\034\n\027STATISTICS_SYNC_PA" +
      "RT2_S\020\221\010\022\034\n\027STATISTICS_SYNC_PART3_S\020\222\010\022\034" +
      "\n\027STATISTICS_SYNC_GUIDE_S\020\223\010\022\026\n\021ASSEMBLE" +
      "_FINISH_S\020\313\010\022\026\n\021PLAYER_COMPLETE_C\020\315\010\022\026\n\021" +
      "PLAYER_COMPLETE_S\020\316\010\022\025\n\020PLAYER_CONSUME_S",
      "\020\261\t\022\024\n\017PLAYER_REWARD_S\020\262\t\022\r\n\010SIGNIN_C\020\225\n" +
      "\022\022\n\rSIGNIN_FILL_C\020\226\n\022\r\n\010SIGNIN_S\020\227\n\022\023\n\016G" +
      "UIDE_FINISH_C\020\371\n\022\023\n\016GUIDE_FINISH_S\020\372\n\022\022\n" +
      "\rMONSTER_ADD_S\020\321\017\022\024\n\017MONSTER_CATCH_C\020\322\017\022" +
      "\024\n\017MONSTER_CATCH_S\020\323\017\022\024\n\017MONSTER_BREAK_C" +
      "\020\324\017\022\024\n\017MONSTER_BREAK_S\020\325\017\022\023\n\016MONSTER_FEE" +
      "D_C\020\326\017\022\023\n\016MONSTER_FEED_S\020\327\017\022\027\n\022MONSTER_S" +
      "KILL_UP_C\020\330\017\022\027\n\022MONSTER_SKILL_UP_S\020\331\017\022\027\n" +
      "\022MONSTER_STAGE_UP_C\020\332\017\022\027\n\022MONSTER_STAGE_" +
      "UP_S\020\333\017\022\023\n\016MONSTER_LOCK_C\020\334\017\022\023\n\016MONSTER_",
      "LOCK_S\020\335\017\022\030\n\023MONSTER_DECOMPOSE_C\020\336\017\022\030\n\023M" +
      "ONSTER_DECOMPOSE_S\020\337\017\022\026\n\021MONSTER_COMPOSE" +
      "_C\020\340\017\022\026\n\021MONSTER_COMPOSE_S\020\341\017\022\026\n\021INSTANC" +
      "E_ASSIST_C\020\271\027\022\026\n\021INSTANCE_ASSIST_S\020\272\027\022\025\n" +
      "\020INSTANCE_ENTER_C\020\273\027\022\025\n\020INSTANCE_ENTER_S" +
      "\020\274\027\022\026\n\021INSTANCE_SETTLE_C\020\275\027\022\026\n\021INSTANCE_" +
      "SETTLE_S\020\276\027\022\031\n\024INSTANCE_OPEN_CARD_C\020\277\027\022\031" +
      "\n\024INSTANCE_OPEN_CARD_S\020\300\027\022\025\n\020INSTANCE_SW" +
      "EEP_C\020\301\027\022\025\n\020INSTANCE_SWEEP_S\020\302\027\022\033\n\026INSTA" +
      "NCE_RESET_COUNT_C\020\303\027\022\033\n\026INSTANCE_RESET_C",
      "OUNT_S\020\304\027\022\026\n\021INSTANCE_REVIVE_C\020\305\027\022\026\n\021INS" +
      "TANCE_REVIVE_S\020\306\027\022\022\n\rCHAPTER_BOX_C\020\307\027\022\022\n" +
      "\rCHAPTER_BOX_S\020\310\027\022\021\n\014HOLE_ENTER_C\020\235\030\022\022\n\r" +
      "TOWER_ENTER_C\020\236\030\022\033\n\026GUILD_INSTANCE_ENTER" +
      "_C\020\237\030\022\026\n\021ADVENTURE_ENTER_C\020\201\031\022\026\n\021ADVENTU" +
      "RE_ENTER_S\020\202\031\022\027\n\022ADVENTURE_SETTLE_C\020\203\031\022\027" +
      "\n\022ADVENTURE_SETTLE_S\020\204\031\022\036\n\031ADVENTURE_NEW" +
      "_CONDITION_C\020\205\031\022\036\n\031ADVENTURE_NEW_CONDITI" +
      "ON_S\020\206\031\022\036\n\031ADVENTURE_BUY_CONDITION_C\020\207\031\022" +
      "\036\n\031ADVENTURE_BUY_CONDITION_S\020\210\031\022\031\n\024ADVEN",
      "TURE_BUY_TEAM_C\020\211\031\022\031\n\024ADVENTURE_BUY_TEAM" +
      "_S\020\212\031\022\037\n\032ADVENTURE_CONDITION_PUSH_S\020\213\031\022\017" +
      "\n\nITEM_USE_C\020\241\037\022\017\n\nITEM_USE_S\020\242\037\022\031\n\024ITEM" +
      "_BOX_USE_BATCH_C\020\243\037\022\031\n\024ITEM_BOX_USE_BATC" +
      "H_S\020\244\037\022\020\n\013ITEM_SELL_C\020\245\037\022\020\n\013ITEM_SELL_S\020" +
      "\246\037\022\026\n\021ITEM_SELL_BATCH_C\020\247\037\022\026\n\021ITEM_SELL_" +
      "BATCH_S\020\250\037\022\017\n\nITEM_BUY_C\020\251\037\022\017\n\nITEM_BUY_" +
      "S\020\252\037\022\023\n\016ITEM_COMPOSE_C\020\253\037\022\023\n\016ITEM_COMPOS" +
      "E_S\020\254\037\022\022\n\rGEM_COMPOSE_C\020\255\037\022\022\n\rGEM_COMPOS" +
      "E_S\020\256\037\022\027\n\022ITEM_BUY_AND_USE_C\020\257\037\022\027\n\022ITEM_",
      "BUY_AND_USE_S\020\260\037\022\021\n\014EQUIP_SELL_C\020\205 \022\021\n\014E" +
      "QUIP_SELL_S\020\206 \022\020\n\013EQUIP_BUY_C\020\207 \022\020\n\013EQUI" +
      "P_BUY_S\020\210 \022\024\n\017EQUIP_COMPOSE_C\020\211 \022\024\n\017EQUI" +
      "P_COMPOSE_S\020\212 \022\033\n\026EQUIP_INCREASE_LEVEL_C" +
      "\020\213 \022\033\n\026EQUIP_INCREASE_LEVEL_S\020\214 \022\033\n\026EQUI" +
      "P_INCREASE_STAGE_C\020\215 \022\033\n\026EQUIP_INCREASE_" +
      "STAGE_S\020\216 \022\022\n\rEQUIP_PUNCH_C\020\217 \022\022\n\rEQUIP_" +
      "PUNCH_S\020\220 \022\020\n\013EQUIP_GEM_C\020\221 \022\020\n\013EQUIP_GE" +
      "M_S\020\222 \022\026\n\021EQUIP_DECOMPOSE_C\020\223 \022\026\n\021EQUIP_" +
      "DECOMPOSE_S\020\224 \022\032\n\025EQUIP_MONSTER_DRESS_C\020",
      "\230 \022\032\n\025EQUIP_MONSTER_DRESS_S\020\231 \022\034\n\027EQUIP_" +
      "MONSTER_UNDRESS_C\020\232 \022\034\n\027EQUIP_MONSTER_UN" +
      "DRESS_S\020\233 \022\034\n\027EQUIP_MONSTER_REPLACE_C\020\234 " +
      "\022\034\n\027EQUIP_MONSTER_REPLACE_S\020\235 \022\023\n\016QUEST_" +
      "SUBMIT_C\020\211\'\022\023\n\016QUEST_SUBMIT_S\020\212\'\022\023\n\016QUES" +
      "T_ACCEPT_S\020\213\'\022\023\n\016QUEST_UPDATE_S\020\214\'\022\023\n\016QU" +
      "EST_REMOVE_S\020\215\'\022\020\n\013MAIL_READ_C\020\361.\022\023\n\016MAI" +
      "L_RECEIVE_C\020\362.\022\023\n\016MAIL_RECEIVE_S\020\363.\022\027\n\022M" +
      "AIL_RECEIVE_ALL_C\020\364.\022\027\n\022MAIL_RECEIVE_ALL" +
      "_S\020\365.\022\017\n\nMAIL_NEW_S\020\366.\022\022\n\rMAIL_DELETE_C\020",
      "\367.\022\022\n\rMAIL_DELETE_S\020\370.\022\023\n\016IM_CHAT_SEND_C" +
      "\020\3316\022\016\n\tIM_PUSH_S\020\3326\022\024\n\017IM_PLAYER_GET_C\020\333" +
      "6\022\024\n\017IM_PLAYER_GET_S\020\3346\022\016\n\tIM_DUMP_S\020\3356\022" +
      "\025\n\020SHOP_DATA_INIT_C\020\301>\022\025\n\020SHOP_DATA_INIT" +
      "_S\020\302>\022\023\n\016SHOP_REFRESH_C\020\303>\022\023\n\016SHOP_REFRE" +
      "SH_S\020\304>\022\024\n\017SHOP_ITEM_BUY_C\020\305>\022\024\n\017SHOP_IT" +
      "EM_BUY_S\020\306>\022\024\n\017SHOP_DATA_SYN_C\020\307>\022\024\n\017SHO" +
      "P_DATA_SYN_S\020\310>\022\025\n\020SHOP_GOLD2COIN_C\020\311>\022\025" +
      "\n\020SHOP_GOLD2COIN_S\020\312>\022\027\n\022SHOP_REFRESH_TI" +
      "MES\020\313>\022\025\n\020SHOP_STORE_BUY_C\020\314>\022\025\n\020SHOP_ST",
      "ORE_BUY_S\020\315>\022\021\n\014SUMMON_ONE_C\020\245?\022\021\n\014SUMMO" +
      "N_ONE_S\020\246?\022\021\n\014SUMMON_TEN_C\020\247?\022\021\n\014SUMMON_" +
      "TEN_S\020\250?\022\026\n\021ALLIANCE_CREATE_C\020\251F\022\026\n\021ALLI" +
      "ANCE_CREATE_S\020\252F\022\024\n\017ALLIANCE_LIST_C\020\253F\022\024" +
      "\n\017ALLIANCE_LIST_S\020\254F\022\026\n\021ALLIANCE_SEARCH_" +
      "C\020\255F\022\026\n\021ALLIANCE_SEARCH_S\020\256F\022\026\n\021ALLIANCE" +
      "_NOTICE_C\020\257F\022\026\n\021ALLIANCE_NOTICE_S\020\260F\022\025\n\020" +
      "ALLIANCE_APPLY_C\020\261F\022\025\n\020ALLIANCE_APPLY_S\020" +
      "\262F\022\034\n\027ALLIANCE_HANDLE_APPLY_C\020\263F\022\034\n\027ALLI" +
      "ANCE_HANDLE_APPLY_S\020\264F\022\024\n\017ALLIANCE_DATA_",
      "C\020\265F\022\024\n\017ALLIANCE_DATA_S\020\266F\022\031\n\024ALLIANCE_S" +
      "ELF_DATA_C\020\267F\022\031\n\024ALLIANCE_SELF_DATA_S\020\270F" +
      "\022\027\n\022ALLIANCE_MEMBERS_C\020\271F\022\027\n\022ALLIANCE_ME" +
      "MBERS_S\020\272F\022\026\n\021ALLIANCE_APPLYS_C\020\273F\022\026\n\021AL" +
      "LIANCE_APPLYS_S\020\274F\022\027\n\022ALLIANCE_FATIGUE_C" +
      "\020\275F\022\027\n\022ALLIANCE_FATIGUE_S\020\276F\022\023\n\016ALLIANCE" +
      "_SYN_C\020\277F\022\023\n\016ALLIANCE_SYN_S\020\300F\022\032\n\025ALLIAN" +
      "CE_CHANGE_POS_C\020\301F\022\032\n\025ALLIANCE_CHANGE_PO" +
      "S_S\020\302F\022\033\n\026ALLIANCE_MEMBER_KICK_C\020\303F\022\033\n\026A" +
      "LLIANCE_MEMBER_KICK_S\020\304F\022\034\n\027ALLIANCE_MEM",
      "BER_LEAVE_C\020\305F\022\034\n\027ALLIANCE_MEMBER_LEAVE_" +
      "S\020\306F\022\034\n\027ALLIANCE_CHANGE_OWNER_C\020\307F\022\034\n\027AL" +
      "LIANCE_CHANGE_OWNER_S\020\310F\022\030\n\023ALLIANCE_LEV" +
      "EL_UP_C\020\311F\022\030\n\023ALLIANCE_LEVEL_UP_S\020\312F\022\024\n\017" +
      "ALLIANCE_PRAY_C\020\313F\022\024\n\017ALLIANCE_PRAY_S\020\314F" +
      "\022\027\n\022ALLIANCE_SETTING_C\020\315F\022\027\n\022ALLIANCE_SE" +
      "TTING_S\020\316F\022\034\n\027ALLIANCE_SETTING_SYNC_C\020\317F" +
      "\022\034\n\027ALLIANCE_SETTING_SYNC_S\020\320F\022\034\n\027ALLIAN" +
      "CE_FATIGUE_GIVE_C\020\321F\022\034\n\027ALLIANCE_FATIGUE" +
      "_GIVE_S\020\322F\022\034\n\027ALLIANCE_CANCLE_APPLY_C\020\323F",
      "\022\034\n\027ALLIANCE_CANCLE_APPLY_S\020\324F\022\033\n\026ALLIAN" +
      "CE_CREATE_TEAM_C\020\344F\022\033\n\026ALLIANCE_CREATE_T" +
      "EAM_S\020\345F\022\031\n\024ALLIANCE_JOIN_TEAM_C\020\346F\022\031\n\024A" +
      "LLIANCE_JOIN_TEAM_S\020\347F\022\033\n\026ALLIANCE_ACCEP" +
      "T_TASK_C\020\350F\022\033\n\026ALLIANCE_ACCEPT_TASK_S\020\351F" +
      "\022\033\n\026ALLIANCE_COMMIT_TASK_C\020\352F\022\033\n\026ALLIANC" +
      "E_COMMIT_TASK_S\020\353F\022\033\n\026ALLIANCE_TASK_REWA" +
      "RD_C\020\354F\022\033\n\026ALLIANCE_TASK_REWARD_S\020\355F\022\031\n\024" +
      "ALLIANCE_TEAM_LIST_C\020\356F\022\031\n\024ALLIANCE_TEAM" +
      "_LIST_S\020\357F\022\031\n\024ALLIANCE_SELF_TEAM_C\020\360F\022\031\n",
      "\024ALLIANCE_SELF_TEAM_S\020\361F\022\035\n\030ALLIANCE_INS" +
      "TANCE_TASK_C\020\362F\022\035\n\030ALLIANCE_INSTANCE_TAS" +
      "K_S\020\363F\022\035\n\030ALLIANCE_DISSOVLE_TEAM_C\020\364F\022\035\n" +
      "\030ALLIANCE_DISSOVLE_TEAM_S\020\365F\022\034\n\027ALLIANCE" +
      "_CONTRIBUTION_C\020\366F\022\034\n\027ALLIANCE_CONTRIBUT" +
      "ION_S\020\367F\022\035\n\030ALLIANCE_CONTRI_REWARD_C\020\370F\022" +
      "\035\n\030ALLIANCE_CONTRI_REWARD_S\020\371F\022\037\n\032ALLIAN" +
      "CE_INSTANCE_REWARD_S\020\372F\022\031\n\024ALLIANCE_BASE" +
      "_SEND_C\020\373F\022\031\n\024ALLIANCE_BASE_SEND_S\020\374F\022\033\n" +
      "\026ALLIANCE_BASE_RECALL_C\020\375F\022\033\n\026ALLIANCE_B",
      "ASE_RECALL_S\020\376F\022\034\n\027ALLIANCE_MY_BASE_LIST" +
      "_C\020\377F\022\034\n\027ALLIANCE_MY_BASE_LIST_S\020\200G\022\031\n\024A" +
      "LLIANCE_BASE_LIST_C\020\201G\022\031\n\024ALLIANCE_BASE_" +
      "LIST_S\020\202G\022\027\n\022ALLIANCE_APPLY_N_S\020\214G\022\036\n\031AL" +
      "LIANCE_REMOVE_APPLY_N_S\020\215G\022\030\n\023ALLIANCE_N" +
      "OTICE_N_S\020\216G\022\034\n\027ALLIANCE_MEMBER_ADD_N_S\020" +
      "\217G\022\037\n\032ALLIANCE_MEMBER_REMOVE_N_S\020\220G\022\034\n\027A" +
      "LLIANCE_CHANGE_POS_N_S\020\221G\022\036\n\031ALLIANCE_CH" +
      "ANGE_OWNER_N_S\020\222G\022\036\n\031ALLIANCE_LEVEL_CHAN" +
      "GE_N_S\020\223G\022\026\n\021ALLIANCE_JOIN_N_S\020\224G\022\027\n\022ALL",
      "IANCE_LEAVE_N_S\020\225G\022\036\n\031ALLIANCE_QUEST_FIN" +
      "ISH_N_S\020\226G\022\033\n\026ALLIANCE_TEAM_JOIN_N_S\020\227G\022" +
      "\034\n\027ALLIANCE_TEAM_LEAVE_N_S\020\230G\022\036\n\031ALLIANC" +
      "E_TASK_TIMEOUT_N_S\020\231G\022\027\n\022SETTING_LANGUAG" +
      "E_C\020\221N\022\027\n\022SETTING_LANGUAGE_S\020\222N\022\024\n\017SETTI" +
      "NG_BLOCK_C\020\223N\022\024\n\017SETTING_BLOCK_S\020\224N\022\031\n\024S" +
      "YNC_DAILY_REFRESH_S\020\371U\022\033\n\026SYNC_MONTHLY_R" +
      "EFRESH_S\020\372U\022\030\n\023SYNC_SHOP_REFRESH_S\020\373U\022\032\n" +
      "\025SYNC_EXP_LEFT_TIMES_S\020\374U\022\037\n\032PVP_SET_DEF" +
      "ENCE_MONSTERS_C\020\341]\022\037\n\032PVP_SET_DEFENCE_MO",
      "NSTERS_S\020\342]\022\027\n\022PVP_MATCH_TARGET_C\020\343]\022\027\n\022" +
      "PVP_MATCH_TARGET_S\020\344]\022\021\n\014PVP_SETTLE_C\020\345]" +
      "\022\021\n\014PVP_SETTLE_S\020\346]\022\024\n\017PVP_RANK_LIST_C\020\347" +
      "]\022\024\n\017PVP_RANK_LIST_S\020\350]\022\031\n\024PVP_DEFENCE_R" +
      "ECORD_C\020\351]\022\031\n\024PVP_DEFENCE_RECORD_S\020\352]\022\037\n" +
      "\032PVP_GET_DEFENCE_MONSTERS_C\020\353]\022\037\n\032PVP_GE" +
      "T_DEFENCE_MONSTERS_S\020\354]\022\026\n\021PVP_GET_MY_IN" +
      "FO_C\020\355]\022\026\n\021PVP_GET_MY_INFO_S\020\356]\022\033\n\026PVP_G" +
      "ET_RANK_DEFENCE_C\020\357]\022\033\n\026PVP_GET_RANK_DEF" +
      "ENCE_S\020\360]\022\025\n\020PVP_ENTER_ROOM_C\020\361]\022\025\n\020PVP_",
      "ENTER_ROOM_S\020\362]B\030\n\026com.hawk.game.protoco" +
      "l"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
