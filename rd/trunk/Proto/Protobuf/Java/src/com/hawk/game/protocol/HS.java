// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol/HS.proto

package com.hawk.game.protocol;

public final class HS {
  private HS() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code sys}
   *
   * <pre>
   * 系统协议ID列表(&lt;100)
   * </pre>
   */
  public enum sys
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DATA_WRAPPER = 1;</code>
     *
     * <pre>
     * 数据封装
     * </pre>
     */
    DATA_WRAPPER(0, 1),
    /**
     * <code>KEY_EXCHANGE = 2;</code>
     *
     * <pre>
     * 秘钥交换
     * </pre>
     */
    KEY_EXCHANGE(1, 2),
    /**
     * <code>HEART_BEAT = 3;</code>
     *
     * <pre>
     * 心跳通知
     * </pre>
     */
    HEART_BEAT(2, 3),
    /**
     * <code>ERROR_CODE = 4;</code>
     *
     * <pre>
     * 错误码提示
     * </pre>
     */
    ERROR_CODE(3, 4),
    ;

    /**
     * <code>DATA_WRAPPER = 1;</code>
     *
     * <pre>
     * 数据封装
     * </pre>
     */
    public static final int DATA_WRAPPER_VALUE = 1;
    /**
     * <code>KEY_EXCHANGE = 2;</code>
     *
     * <pre>
     * 秘钥交换
     * </pre>
     */
    public static final int KEY_EXCHANGE_VALUE = 2;
    /**
     * <code>HEART_BEAT = 3;</code>
     *
     * <pre>
     * 心跳通知
     * </pre>
     */
    public static final int HEART_BEAT_VALUE = 3;
    /**
     * <code>ERROR_CODE = 4;</code>
     *
     * <pre>
     * 错误码提示
     * </pre>
     */
    public static final int ERROR_CODE_VALUE = 4;


    public final int getNumber() { return value; }

    public static sys valueOf(int value) {
      switch (value) {
        case 1: return DATA_WRAPPER;
        case 2: return KEY_EXCHANGE;
        case 3: return HEART_BEAT;
        case 4: return ERROR_CODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<sys>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<sys>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<sys>() {
            public sys findValueByNumber(int number) {
              return sys.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.HS.getDescriptor().getEnumTypes().get(0);
    }

    private static final sys[] VALUES = values();

    public static sys valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private sys(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sys)
  }

  /**
   * Protobuf enum {@code gm}
   *
   * <pre>
   * GM协议ID列表(100&lt;=gm&lt;1000)
   * </pre>
   */
  public enum gm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GEN_TEST_ACCOUNT = 100;</code>
     *
     * <pre>
     * 生成测试账号
     * </pre>
     */
    GEN_TEST_ACCOUNT(0, 100),
    ;

    /**
     * <code>GEN_TEST_ACCOUNT = 100;</code>
     *
     * <pre>
     * 生成测试账号
     * </pre>
     */
    public static final int GEN_TEST_ACCOUNT_VALUE = 100;


    public final int getNumber() { return value; }

    public static gm valueOf(int value) {
      switch (value) {
        case 100: return GEN_TEST_ACCOUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<gm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<gm>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<gm>() {
            public gm findValueByNumber(int number) {
              return gm.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.HS.getDescriptor().getEnumTypes().get(1);
    }

    private static final gm[] VALUES = values();

    public static gm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private gm(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:gm)
  }

  /**
   * Protobuf enum {@code code}
   *
   * <pre>
   * 游戏协议ID列表(&gt;=1000)
   * </pre>
   */
  public enum code
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOGIN_C = 1000;</code>
     *
     * <pre>
     * 玩家
     * </pre>
     */
    LOGIN_C(0, 1000),
    /**
     * <code>LOGIN_S = 1001;</code>
     */
    LOGIN_S(1, 1001),
    /**
     * <code>LOGOUT_C = 1002;</code>
     */
    LOGOUT_C(2, 1002),
    /**
     * <code>LOGOUT_S = 1003;</code>
     */
    LOGOUT_S(3, 1003),
    /**
     * <code>KICKOUT_S = 1004;</code>
     */
    KICKOUT_S(4, 1004),
    /**
     * <code>SYNCINFO_C = 1005;</code>
     */
    SYNCINFO_C(5, 1005),
    /**
     * <code>SYNCINFO_S = 1006;</code>
     */
    SYNCINFO_S(6, 1006),
    /**
     * <code>PLAYER_INFO_SYNC_S = 1010;</code>
     */
    PLAYER_INFO_SYNC_S(7, 1010),
    /**
     * <code>STATISTICS_INFO_SYNC_S = 1011;</code>
     */
    STATISTICS_INFO_SYNC_S(8, 1011),
    /**
     * <code>SETTING_INFO_SYNC_S = 1012;</code>
     */
    SETTING_INFO_SYNC_S(9, 1012),
    /**
     * <code>MONSTER_INFO_SYNC_S = 1013;</code>
     */
    MONSTER_INFO_SYNC_S(10, 1013),
    /**
     * <code>ITEM_INFO_SYNC_S = 1014;</code>
     */
    ITEM_INFO_SYNC_S(11, 1014),
    /**
     * <code>EQUIP_INFO_SYNC_S = 1015;</code>
     */
    EQUIP_INFO_SYNC_S(12, 1015),
    /**
     * <code>QUEST_INFO_SYNC_S = 1016;</code>
     */
    QUEST_INFO_SYNC_S(13, 1016),
    /**
     * <code>MAIL_INFO_SYNC_S = 1017;</code>
     */
    MAIL_INFO_SYNC_S(14, 1017),
    /**
     * <code>ASSEMBLE_FINISH_S = 1018;</code>
     */
    ASSEMBLE_FINISH_S(15, 1018),
    /**
     * <code>PLAYER_CREATE_C = 1101;</code>
     *
     * <pre>
     * 角色
     * </pre>
     */
    PLAYER_CREATE_C(16, 1101),
    /**
     * <code>PLAYER_CREATE_S = 1102;</code>
     */
    PLAYER_CREATE_S(17, 1102),
    /**
     * <code>PLAYER_CONSUME_S = 1103;</code>
     */
    PLAYER_CONSUME_S(18, 1103),
    /**
     * <code>PLAYER_REWARD_S = 1104;</code>
     */
    PLAYER_REWARD_S(19, 1104),
    /**
     * <code>MONSTER_ADD_S = 2001;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    MONSTER_ADD_S(20, 2001),
    /**
     * <code>MONSTER_CATCH_C = 2002;</code>
     */
    MONSTER_CATCH_C(21, 2002),
    /**
     * <code>MONSTER_CATCH_S = 2003;</code>
     */
    MONSTER_CATCH_S(22, 2003),
    /**
     * <code>MONSTER_BREAK_C = 2004;</code>
     */
    MONSTER_BREAK_C(23, 2004),
    /**
     * <code>MONSTER_BREAK_S = 2005;</code>
     */
    MONSTER_BREAK_S(24, 2005),
    /**
     * <code>MONSTER_FEED_C = 2006;</code>
     */
    MONSTER_FEED_C(25, 2006),
    /**
     * <code>MONSTER_FEED_S = 2007;</code>
     */
    MONSTER_FEED_S(26, 2007),
    /**
     * <code>MONSTER_SKILL_UP_C = 2008;</code>
     */
    MONSTER_SKILL_UP_C(27, 2008),
    /**
     * <code>MONSTER_SKILL_UP_S = 2009;</code>
     */
    MONSTER_SKILL_UP_S(28, 2009),
    /**
     * <code>MONSTER_STAGE_UP_C = 2010;</code>
     */
    MONSTER_STAGE_UP_C(29, 2010),
    /**
     * <code>MONSTER_STAGE_UP_S = 2011;</code>
     */
    MONSTER_STAGE_UP_S(30, 2011),
    /**
     * <code>INSTANCE_ASSIST_C = 3001;</code>
     *
     * <pre>
     * 副本
     * </pre>
     */
    INSTANCE_ASSIST_C(31, 3001),
    /**
     * <code>INSTANCE_ASSIST_S = 3002;</code>
     */
    INSTANCE_ASSIST_S(32, 3002),
    /**
     * <code>INSTANCE_ENTER_C = 3003;</code>
     */
    INSTANCE_ENTER_C(33, 3003),
    /**
     * <code>INSTANCE_ENTER_S = 3004;</code>
     */
    INSTANCE_ENTER_S(34, 3004),
    /**
     * <code>INSTANCE_SETTLE_C = 3005;</code>
     */
    INSTANCE_SETTLE_C(35, 3005),
    /**
     * <code>INSTANCE_SETTLE_S = 3006;</code>
     */
    INSTANCE_SETTLE_S(36, 3006),
    /**
     * <code>INSTANCE_OPEN_CARD_C = 3007;</code>
     */
    INSTANCE_OPEN_CARD_C(37, 3007),
    /**
     * <code>INSTANCE_OPEN_CARD_S = 3008;</code>
     */
    INSTANCE_OPEN_CARD_S(38, 3008),
    /**
     * <code>INSTANCE_SWEEP_C = 3009;</code>
     */
    INSTANCE_SWEEP_C(39, 3009),
    /**
     * <code>INSTANCE_SWEEP_S = 3010;</code>
     */
    INSTANCE_SWEEP_S(40, 3010),
    /**
     * <code>INSTANCE_RESET_COUNT_C = 3011;</code>
     */
    INSTANCE_RESET_COUNT_C(41, 3011),
    /**
     * <code>INSTANCE_RESET_COUNT_S = 3012;</code>
     */
    INSTANCE_RESET_COUNT_S(42, 3012),
    /**
     * <code>ITEM_USE_C = 4001;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    ITEM_USE_C(43, 4001),
    /**
     * <code>ITEM_USE_S = 4002;</code>
     */
    ITEM_USE_S(44, 4002),
    /**
     * <code>ITEM_SELL_C = 4003;</code>
     */
    ITEM_SELL_C(45, 4003),
    /**
     * <code>ITEM_SELL_S = 4004;</code>
     */
    ITEM_SELL_S(46, 4004),
    /**
     * <code>ITEM_BUY_C = 4005;</code>
     */
    ITEM_BUY_C(47, 4005),
    /**
     * <code>ITEM_BUY_S = 4006;</code>
     */
    ITEM_BUY_S(48, 4006),
    /**
     * <code>ITEM_COMPOSE_C = 4007;</code>
     */
    ITEM_COMPOSE_C(49, 4007),
    /**
     * <code>ITEM_COMPOSE_S = 4008;</code>
     */
    ITEM_COMPOSE_S(50, 4008),
    /**
     * <code>EQUIP_SELL_C = 4101;</code>
     */
    EQUIP_SELL_C(51, 4101),
    /**
     * <code>EQUIP_SELL_S = 4102;</code>
     */
    EQUIP_SELL_S(52, 4102),
    /**
     * <code>EQUIP_BUY_C = 4103;</code>
     */
    EQUIP_BUY_C(53, 4103),
    /**
     * <code>EQUIP_BUY_S = 4104;</code>
     */
    EQUIP_BUY_S(54, 4104),
    /**
     * <code>EQUIP_COMPOSE_C = 4105;</code>
     */
    EQUIP_COMPOSE_C(55, 4105),
    /**
     * <code>EQUIP_COMPOSE_S = 4106;</code>
     */
    EQUIP_COMPOSE_S(56, 4106),
    /**
     * <code>EQUIP_INCREASE_LEVEL_C = 4107;</code>
     */
    EQUIP_INCREASE_LEVEL_C(57, 4107),
    /**
     * <code>EQUIP_INCREASE_LEVEL_S = 4108;</code>
     */
    EQUIP_INCREASE_LEVEL_S(58, 4108),
    /**
     * <code>EQUIP_INCREASE_STAGE_C = 4109;</code>
     */
    EQUIP_INCREASE_STAGE_C(59, 4109),
    /**
     * <code>EQUIP_INCREASE_STAGE_S = 4110;</code>
     */
    EQUIP_INCREASE_STAGE_S(60, 4110),
    /**
     * <code>EQUIP_PUNCH_C = 4111;</code>
     */
    EQUIP_PUNCH_C(61, 4111),
    /**
     * <code>EQUIP_PUNCH_S = 4112;</code>
     */
    EQUIP_PUNCH_S(62, 4112),
    /**
     * <code>EQUIP_GEM_C = 4113;</code>
     */
    EQUIP_GEM_C(63, 4113),
    /**
     * <code>EQUIP_GEM_S = 4114;</code>
     */
    EQUIP_GEM_S(64, 4114),
    /**
     * <code>EQUIP_MONSTER_DRESS_C = 4120;</code>
     */
    EQUIP_MONSTER_DRESS_C(65, 4120),
    /**
     * <code>EQUIP_MONSTER_DRESS_S = 4121;</code>
     */
    EQUIP_MONSTER_DRESS_S(66, 4121),
    /**
     * <code>EQUIP_MONSTER_UNDRESS_C = 4122;</code>
     */
    EQUIP_MONSTER_UNDRESS_C(67, 4122),
    /**
     * <code>EQUIP_MONSTER_UNDRESS_S = 4123;</code>
     */
    EQUIP_MONSTER_UNDRESS_S(68, 4123),
    /**
     * <code>EQUIP_MONSTER_REPLACE_C = 4124;</code>
     */
    EQUIP_MONSTER_REPLACE_C(69, 4124),
    /**
     * <code>EQUIP_MONSTER_REPLACE_S = 4125;</code>
     */
    EQUIP_MONSTER_REPLACE_S(70, 4125),
    /**
     * <code>QUEST_SUBMIT_C = 5001;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    QUEST_SUBMIT_C(71, 5001),
    /**
     * <code>QUEST_SUBMIT_S = 5002;</code>
     */
    QUEST_SUBMIT_S(72, 5002),
    /**
     * <code>QUEST_ACCEPT_S = 5003;</code>
     */
    QUEST_ACCEPT_S(73, 5003),
    /**
     * <code>QUEST_UPDATE_S = 5004;</code>
     */
    QUEST_UPDATE_S(74, 5004),
    /**
     * <code>QUEST_REMOVE_S = 5005;</code>
     */
    QUEST_REMOVE_S(75, 5005),
    /**
     * <code>MAIL_READ_C = 6001;</code>
     *
     * <pre>
     * 邮件
     * </pre>
     */
    MAIL_READ_C(76, 6001),
    /**
     * <code>MAIL_RECEIVE_C = 6002;</code>
     */
    MAIL_RECEIVE_C(77, 6002),
    /**
     * <code>MAIL_RECEIVE_S = 6003;</code>
     */
    MAIL_RECEIVE_S(78, 6003),
    /**
     * <code>MAIL_RECEIVE_ALL_C = 6004;</code>
     */
    MAIL_RECEIVE_ALL_C(79, 6004),
    /**
     * <code>MAIL_RECEIVE_ALL_S = 6005;</code>
     */
    MAIL_RECEIVE_ALL_S(80, 6005),
    /**
     * <code>MAIL_NEW_S = 6006;</code>
     */
    MAIL_NEW_S(81, 6006),
    /**
     * <code>IM_CHAT_SEND_C = 7001;</code>
     *
     * <pre>
     * 即时通讯
     * </pre>
     */
    IM_CHAT_SEND_C(82, 7001),
    /**
     * <code>IM_PUSH_S = 7002;</code>
     */
    IM_PUSH_S(83, 7002),
    /**
     * <code>ShopDataInitC = 8001;</code>
     *
     * <pre>
     * 商店
     * </pre>
     */
    ShopDataInitC(84, 8001),
    /**
     * <code>ShopDataInitS = 8002;</code>
     */
    ShopDataInitS(85, 8002),
    /**
     * <code>ShopRefreshC = 8003;</code>
     */
    ShopRefreshC(86, 8003),
    /**
     * <code>ShopRefreshS = 8004;</code>
     */
    ShopRefreshS(87, 8004),
    /**
     * <code>ShopItemBuyC = 8005;</code>
     */
    ShopItemBuyC(88, 8005),
    /**
     * <code>ShopItemBuyS = 8006;</code>
     */
    ShopItemBuyS(89, 8006),
    /**
     * <code>ShopDataSynC = 8007;</code>
     */
    ShopDataSynC(90, 8007),
    /**
     * <code>ShopDataSynS = 8008;</code>
     */
    ShopDataSynS(91, 8008),
    /**
     * <code>ShopGold2CoinC = 8009;</code>
     */
    ShopGold2CoinC(92, 8009),
    /**
     * <code>ShopGold2CoinS = 8010;</code>
     */
    ShopGold2CoinS(93, 8010),
    /**
     * <code>AllianceCreateC = 9001;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    AllianceCreateC(94, 9001),
    /**
     * <code>AllianceCreateS = 9002;</code>
     */
    AllianceCreateS(95, 9002),
    /**
     * <code>SETTING_LANGUAGE_C = 10001;</code>
     *
     * <pre>
     * 系统设置
     * </pre>
     */
    SETTING_LANGUAGE_C(96, 10001),
    /**
     * <code>SETTING_LANGUAGE_S = 10002;</code>
     */
    SETTING_LANGUAGE_S(97, 10002),
    /**
     * <code>SETTING_BLOCK_C = 10003;</code>
     */
    SETTING_BLOCK_C(98, 10003),
    /**
     * <code>SETTING_BLOCK_S = 10004;</code>
     */
    SETTING_BLOCK_S(99, 10004),
    ;

    /**
     * <code>LOGIN_C = 1000;</code>
     *
     * <pre>
     * 玩家
     * </pre>
     */
    public static final int LOGIN_C_VALUE = 1000;
    /**
     * <code>LOGIN_S = 1001;</code>
     */
    public static final int LOGIN_S_VALUE = 1001;
    /**
     * <code>LOGOUT_C = 1002;</code>
     */
    public static final int LOGOUT_C_VALUE = 1002;
    /**
     * <code>LOGOUT_S = 1003;</code>
     */
    public static final int LOGOUT_S_VALUE = 1003;
    /**
     * <code>KICKOUT_S = 1004;</code>
     */
    public static final int KICKOUT_S_VALUE = 1004;
    /**
     * <code>SYNCINFO_C = 1005;</code>
     */
    public static final int SYNCINFO_C_VALUE = 1005;
    /**
     * <code>SYNCINFO_S = 1006;</code>
     */
    public static final int SYNCINFO_S_VALUE = 1006;
    /**
     * <code>PLAYER_INFO_SYNC_S = 1010;</code>
     */
    public static final int PLAYER_INFO_SYNC_S_VALUE = 1010;
    /**
     * <code>STATISTICS_INFO_SYNC_S = 1011;</code>
     */
    public static final int STATISTICS_INFO_SYNC_S_VALUE = 1011;
    /**
     * <code>SETTING_INFO_SYNC_S = 1012;</code>
     */
    public static final int SETTING_INFO_SYNC_S_VALUE = 1012;
    /**
     * <code>MONSTER_INFO_SYNC_S = 1013;</code>
     */
    public static final int MONSTER_INFO_SYNC_S_VALUE = 1013;
    /**
     * <code>ITEM_INFO_SYNC_S = 1014;</code>
     */
    public static final int ITEM_INFO_SYNC_S_VALUE = 1014;
    /**
     * <code>EQUIP_INFO_SYNC_S = 1015;</code>
     */
    public static final int EQUIP_INFO_SYNC_S_VALUE = 1015;
    /**
     * <code>QUEST_INFO_SYNC_S = 1016;</code>
     */
    public static final int QUEST_INFO_SYNC_S_VALUE = 1016;
    /**
     * <code>MAIL_INFO_SYNC_S = 1017;</code>
     */
    public static final int MAIL_INFO_SYNC_S_VALUE = 1017;
    /**
     * <code>ASSEMBLE_FINISH_S = 1018;</code>
     */
    public static final int ASSEMBLE_FINISH_S_VALUE = 1018;
    /**
     * <code>PLAYER_CREATE_C = 1101;</code>
     *
     * <pre>
     * 角色
     * </pre>
     */
    public static final int PLAYER_CREATE_C_VALUE = 1101;
    /**
     * <code>PLAYER_CREATE_S = 1102;</code>
     */
    public static final int PLAYER_CREATE_S_VALUE = 1102;
    /**
     * <code>PLAYER_CONSUME_S = 1103;</code>
     */
    public static final int PLAYER_CONSUME_S_VALUE = 1103;
    /**
     * <code>PLAYER_REWARD_S = 1104;</code>
     */
    public static final int PLAYER_REWARD_S_VALUE = 1104;
    /**
     * <code>MONSTER_ADD_S = 2001;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    public static final int MONSTER_ADD_S_VALUE = 2001;
    /**
     * <code>MONSTER_CATCH_C = 2002;</code>
     */
    public static final int MONSTER_CATCH_C_VALUE = 2002;
    /**
     * <code>MONSTER_CATCH_S = 2003;</code>
     */
    public static final int MONSTER_CATCH_S_VALUE = 2003;
    /**
     * <code>MONSTER_BREAK_C = 2004;</code>
     */
    public static final int MONSTER_BREAK_C_VALUE = 2004;
    /**
     * <code>MONSTER_BREAK_S = 2005;</code>
     */
    public static final int MONSTER_BREAK_S_VALUE = 2005;
    /**
     * <code>MONSTER_FEED_C = 2006;</code>
     */
    public static final int MONSTER_FEED_C_VALUE = 2006;
    /**
     * <code>MONSTER_FEED_S = 2007;</code>
     */
    public static final int MONSTER_FEED_S_VALUE = 2007;
    /**
     * <code>MONSTER_SKILL_UP_C = 2008;</code>
     */
    public static final int MONSTER_SKILL_UP_C_VALUE = 2008;
    /**
     * <code>MONSTER_SKILL_UP_S = 2009;</code>
     */
    public static final int MONSTER_SKILL_UP_S_VALUE = 2009;
    /**
     * <code>MONSTER_STAGE_UP_C = 2010;</code>
     */
    public static final int MONSTER_STAGE_UP_C_VALUE = 2010;
    /**
     * <code>MONSTER_STAGE_UP_S = 2011;</code>
     */
    public static final int MONSTER_STAGE_UP_S_VALUE = 2011;
    /**
     * <code>INSTANCE_ASSIST_C = 3001;</code>
     *
     * <pre>
     * 副本
     * </pre>
     */
    public static final int INSTANCE_ASSIST_C_VALUE = 3001;
    /**
     * <code>INSTANCE_ASSIST_S = 3002;</code>
     */
    public static final int INSTANCE_ASSIST_S_VALUE = 3002;
    /**
     * <code>INSTANCE_ENTER_C = 3003;</code>
     */
    public static final int INSTANCE_ENTER_C_VALUE = 3003;
    /**
     * <code>INSTANCE_ENTER_S = 3004;</code>
     */
    public static final int INSTANCE_ENTER_S_VALUE = 3004;
    /**
     * <code>INSTANCE_SETTLE_C = 3005;</code>
     */
    public static final int INSTANCE_SETTLE_C_VALUE = 3005;
    /**
     * <code>INSTANCE_SETTLE_S = 3006;</code>
     */
    public static final int INSTANCE_SETTLE_S_VALUE = 3006;
    /**
     * <code>INSTANCE_OPEN_CARD_C = 3007;</code>
     */
    public static final int INSTANCE_OPEN_CARD_C_VALUE = 3007;
    /**
     * <code>INSTANCE_OPEN_CARD_S = 3008;</code>
     */
    public static final int INSTANCE_OPEN_CARD_S_VALUE = 3008;
    /**
     * <code>INSTANCE_SWEEP_C = 3009;</code>
     */
    public static final int INSTANCE_SWEEP_C_VALUE = 3009;
    /**
     * <code>INSTANCE_SWEEP_S = 3010;</code>
     */
    public static final int INSTANCE_SWEEP_S_VALUE = 3010;
    /**
     * <code>INSTANCE_RESET_COUNT_C = 3011;</code>
     */
    public static final int INSTANCE_RESET_COUNT_C_VALUE = 3011;
    /**
     * <code>INSTANCE_RESET_COUNT_S = 3012;</code>
     */
    public static final int INSTANCE_RESET_COUNT_S_VALUE = 3012;
    /**
     * <code>ITEM_USE_C = 4001;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    public static final int ITEM_USE_C_VALUE = 4001;
    /**
     * <code>ITEM_USE_S = 4002;</code>
     */
    public static final int ITEM_USE_S_VALUE = 4002;
    /**
     * <code>ITEM_SELL_C = 4003;</code>
     */
    public static final int ITEM_SELL_C_VALUE = 4003;
    /**
     * <code>ITEM_SELL_S = 4004;</code>
     */
    public static final int ITEM_SELL_S_VALUE = 4004;
    /**
     * <code>ITEM_BUY_C = 4005;</code>
     */
    public static final int ITEM_BUY_C_VALUE = 4005;
    /**
     * <code>ITEM_BUY_S = 4006;</code>
     */
    public static final int ITEM_BUY_S_VALUE = 4006;
    /**
     * <code>ITEM_COMPOSE_C = 4007;</code>
     */
    public static final int ITEM_COMPOSE_C_VALUE = 4007;
    /**
     * <code>ITEM_COMPOSE_S = 4008;</code>
     */
    public static final int ITEM_COMPOSE_S_VALUE = 4008;
    /**
     * <code>EQUIP_SELL_C = 4101;</code>
     */
    public static final int EQUIP_SELL_C_VALUE = 4101;
    /**
     * <code>EQUIP_SELL_S = 4102;</code>
     */
    public static final int EQUIP_SELL_S_VALUE = 4102;
    /**
     * <code>EQUIP_BUY_C = 4103;</code>
     */
    public static final int EQUIP_BUY_C_VALUE = 4103;
    /**
     * <code>EQUIP_BUY_S = 4104;</code>
     */
    public static final int EQUIP_BUY_S_VALUE = 4104;
    /**
     * <code>EQUIP_COMPOSE_C = 4105;</code>
     */
    public static final int EQUIP_COMPOSE_C_VALUE = 4105;
    /**
     * <code>EQUIP_COMPOSE_S = 4106;</code>
     */
    public static final int EQUIP_COMPOSE_S_VALUE = 4106;
    /**
     * <code>EQUIP_INCREASE_LEVEL_C = 4107;</code>
     */
    public static final int EQUIP_INCREASE_LEVEL_C_VALUE = 4107;
    /**
     * <code>EQUIP_INCREASE_LEVEL_S = 4108;</code>
     */
    public static final int EQUIP_INCREASE_LEVEL_S_VALUE = 4108;
    /**
     * <code>EQUIP_INCREASE_STAGE_C = 4109;</code>
     */
    public static final int EQUIP_INCREASE_STAGE_C_VALUE = 4109;
    /**
     * <code>EQUIP_INCREASE_STAGE_S = 4110;</code>
     */
    public static final int EQUIP_INCREASE_STAGE_S_VALUE = 4110;
    /**
     * <code>EQUIP_PUNCH_C = 4111;</code>
     */
    public static final int EQUIP_PUNCH_C_VALUE = 4111;
    /**
     * <code>EQUIP_PUNCH_S = 4112;</code>
     */
    public static final int EQUIP_PUNCH_S_VALUE = 4112;
    /**
     * <code>EQUIP_GEM_C = 4113;</code>
     */
    public static final int EQUIP_GEM_C_VALUE = 4113;
    /**
     * <code>EQUIP_GEM_S = 4114;</code>
     */
    public static final int EQUIP_GEM_S_VALUE = 4114;
    /**
     * <code>EQUIP_MONSTER_DRESS_C = 4120;</code>
     */
    public static final int EQUIP_MONSTER_DRESS_C_VALUE = 4120;
    /**
     * <code>EQUIP_MONSTER_DRESS_S = 4121;</code>
     */
    public static final int EQUIP_MONSTER_DRESS_S_VALUE = 4121;
    /**
     * <code>EQUIP_MONSTER_UNDRESS_C = 4122;</code>
     */
    public static final int EQUIP_MONSTER_UNDRESS_C_VALUE = 4122;
    /**
     * <code>EQUIP_MONSTER_UNDRESS_S = 4123;</code>
     */
    public static final int EQUIP_MONSTER_UNDRESS_S_VALUE = 4123;
    /**
     * <code>EQUIP_MONSTER_REPLACE_C = 4124;</code>
     */
    public static final int EQUIP_MONSTER_REPLACE_C_VALUE = 4124;
    /**
     * <code>EQUIP_MONSTER_REPLACE_S = 4125;</code>
     */
    public static final int EQUIP_MONSTER_REPLACE_S_VALUE = 4125;
    /**
     * <code>QUEST_SUBMIT_C = 5001;</code>
     *
     * <pre>
     * 任务
     * </pre>
     */
    public static final int QUEST_SUBMIT_C_VALUE = 5001;
    /**
     * <code>QUEST_SUBMIT_S = 5002;</code>
     */
    public static final int QUEST_SUBMIT_S_VALUE = 5002;
    /**
     * <code>QUEST_ACCEPT_S = 5003;</code>
     */
    public static final int QUEST_ACCEPT_S_VALUE = 5003;
    /**
     * <code>QUEST_UPDATE_S = 5004;</code>
     */
    public static final int QUEST_UPDATE_S_VALUE = 5004;
    /**
     * <code>QUEST_REMOVE_S = 5005;</code>
     */
    public static final int QUEST_REMOVE_S_VALUE = 5005;
    /**
     * <code>MAIL_READ_C = 6001;</code>
     *
     * <pre>
     * 邮件
     * </pre>
     */
    public static final int MAIL_READ_C_VALUE = 6001;
    /**
     * <code>MAIL_RECEIVE_C = 6002;</code>
     */
    public static final int MAIL_RECEIVE_C_VALUE = 6002;
    /**
     * <code>MAIL_RECEIVE_S = 6003;</code>
     */
    public static final int MAIL_RECEIVE_S_VALUE = 6003;
    /**
     * <code>MAIL_RECEIVE_ALL_C = 6004;</code>
     */
    public static final int MAIL_RECEIVE_ALL_C_VALUE = 6004;
    /**
     * <code>MAIL_RECEIVE_ALL_S = 6005;</code>
     */
    public static final int MAIL_RECEIVE_ALL_S_VALUE = 6005;
    /**
     * <code>MAIL_NEW_S = 6006;</code>
     */
    public static final int MAIL_NEW_S_VALUE = 6006;
    /**
     * <code>IM_CHAT_SEND_C = 7001;</code>
     *
     * <pre>
     * 即时通讯
     * </pre>
     */
    public static final int IM_CHAT_SEND_C_VALUE = 7001;
    /**
     * <code>IM_PUSH_S = 7002;</code>
     */
    public static final int IM_PUSH_S_VALUE = 7002;
    /**
     * <code>ShopDataInitC = 8001;</code>
     *
     * <pre>
     * 商店
     * </pre>
     */
    public static final int ShopDataInitC_VALUE = 8001;
    /**
     * <code>ShopDataInitS = 8002;</code>
     */
    public static final int ShopDataInitS_VALUE = 8002;
    /**
     * <code>ShopRefreshC = 8003;</code>
     */
    public static final int ShopRefreshC_VALUE = 8003;
    /**
     * <code>ShopRefreshS = 8004;</code>
     */
    public static final int ShopRefreshS_VALUE = 8004;
    /**
     * <code>ShopItemBuyC = 8005;</code>
     */
    public static final int ShopItemBuyC_VALUE = 8005;
    /**
     * <code>ShopItemBuyS = 8006;</code>
     */
    public static final int ShopItemBuyS_VALUE = 8006;
    /**
     * <code>ShopDataSynC = 8007;</code>
     */
    public static final int ShopDataSynC_VALUE = 8007;
    /**
     * <code>ShopDataSynS = 8008;</code>
     */
    public static final int ShopDataSynS_VALUE = 8008;
    /**
     * <code>ShopGold2CoinC = 8009;</code>
     */
    public static final int ShopGold2CoinC_VALUE = 8009;
    /**
     * <code>ShopGold2CoinS = 8010;</code>
     */
    public static final int ShopGold2CoinS_VALUE = 8010;
    /**
     * <code>AllianceCreateC = 9001;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    public static final int AllianceCreateC_VALUE = 9001;
    /**
     * <code>AllianceCreateS = 9002;</code>
     */
    public static final int AllianceCreateS_VALUE = 9002;
    /**
     * <code>SETTING_LANGUAGE_C = 10001;</code>
     *
     * <pre>
     * 系统设置
     * </pre>
     */
    public static final int SETTING_LANGUAGE_C_VALUE = 10001;
    /**
     * <code>SETTING_LANGUAGE_S = 10002;</code>
     */
    public static final int SETTING_LANGUAGE_S_VALUE = 10002;
    /**
     * <code>SETTING_BLOCK_C = 10003;</code>
     */
    public static final int SETTING_BLOCK_C_VALUE = 10003;
    /**
     * <code>SETTING_BLOCK_S = 10004;</code>
     */
    public static final int SETTING_BLOCK_S_VALUE = 10004;


    public final int getNumber() { return value; }

    public static code valueOf(int value) {
      switch (value) {
        case 1000: return LOGIN_C;
        case 1001: return LOGIN_S;
        case 1002: return LOGOUT_C;
        case 1003: return LOGOUT_S;
        case 1004: return KICKOUT_S;
        case 1005: return SYNCINFO_C;
        case 1006: return SYNCINFO_S;
        case 1010: return PLAYER_INFO_SYNC_S;
        case 1011: return STATISTICS_INFO_SYNC_S;
        case 1012: return SETTING_INFO_SYNC_S;
        case 1013: return MONSTER_INFO_SYNC_S;
        case 1014: return ITEM_INFO_SYNC_S;
        case 1015: return EQUIP_INFO_SYNC_S;
        case 1016: return QUEST_INFO_SYNC_S;
        case 1017: return MAIL_INFO_SYNC_S;
        case 1018: return ASSEMBLE_FINISH_S;
        case 1101: return PLAYER_CREATE_C;
        case 1102: return PLAYER_CREATE_S;
        case 1103: return PLAYER_CONSUME_S;
        case 1104: return PLAYER_REWARD_S;
        case 2001: return MONSTER_ADD_S;
        case 2002: return MONSTER_CATCH_C;
        case 2003: return MONSTER_CATCH_S;
        case 2004: return MONSTER_BREAK_C;
        case 2005: return MONSTER_BREAK_S;
        case 2006: return MONSTER_FEED_C;
        case 2007: return MONSTER_FEED_S;
        case 2008: return MONSTER_SKILL_UP_C;
        case 2009: return MONSTER_SKILL_UP_S;
        case 2010: return MONSTER_STAGE_UP_C;
        case 2011: return MONSTER_STAGE_UP_S;
        case 3001: return INSTANCE_ASSIST_C;
        case 3002: return INSTANCE_ASSIST_S;
        case 3003: return INSTANCE_ENTER_C;
        case 3004: return INSTANCE_ENTER_S;
        case 3005: return INSTANCE_SETTLE_C;
        case 3006: return INSTANCE_SETTLE_S;
        case 3007: return INSTANCE_OPEN_CARD_C;
        case 3008: return INSTANCE_OPEN_CARD_S;
        case 3009: return INSTANCE_SWEEP_C;
        case 3010: return INSTANCE_SWEEP_S;
        case 3011: return INSTANCE_RESET_COUNT_C;
        case 3012: return INSTANCE_RESET_COUNT_S;
        case 4001: return ITEM_USE_C;
        case 4002: return ITEM_USE_S;
        case 4003: return ITEM_SELL_C;
        case 4004: return ITEM_SELL_S;
        case 4005: return ITEM_BUY_C;
        case 4006: return ITEM_BUY_S;
        case 4007: return ITEM_COMPOSE_C;
        case 4008: return ITEM_COMPOSE_S;
        case 4101: return EQUIP_SELL_C;
        case 4102: return EQUIP_SELL_S;
        case 4103: return EQUIP_BUY_C;
        case 4104: return EQUIP_BUY_S;
        case 4105: return EQUIP_COMPOSE_C;
        case 4106: return EQUIP_COMPOSE_S;
        case 4107: return EQUIP_INCREASE_LEVEL_C;
        case 4108: return EQUIP_INCREASE_LEVEL_S;
        case 4109: return EQUIP_INCREASE_STAGE_C;
        case 4110: return EQUIP_INCREASE_STAGE_S;
        case 4111: return EQUIP_PUNCH_C;
        case 4112: return EQUIP_PUNCH_S;
        case 4113: return EQUIP_GEM_C;
        case 4114: return EQUIP_GEM_S;
        case 4120: return EQUIP_MONSTER_DRESS_C;
        case 4121: return EQUIP_MONSTER_DRESS_S;
        case 4122: return EQUIP_MONSTER_UNDRESS_C;
        case 4123: return EQUIP_MONSTER_UNDRESS_S;
        case 4124: return EQUIP_MONSTER_REPLACE_C;
        case 4125: return EQUIP_MONSTER_REPLACE_S;
        case 5001: return QUEST_SUBMIT_C;
        case 5002: return QUEST_SUBMIT_S;
        case 5003: return QUEST_ACCEPT_S;
        case 5004: return QUEST_UPDATE_S;
        case 5005: return QUEST_REMOVE_S;
        case 6001: return MAIL_READ_C;
        case 6002: return MAIL_RECEIVE_C;
        case 6003: return MAIL_RECEIVE_S;
        case 6004: return MAIL_RECEIVE_ALL_C;
        case 6005: return MAIL_RECEIVE_ALL_S;
        case 6006: return MAIL_NEW_S;
        case 7001: return IM_CHAT_SEND_C;
        case 7002: return IM_PUSH_S;
        case 8001: return ShopDataInitC;
        case 8002: return ShopDataInitS;
        case 8003: return ShopRefreshC;
        case 8004: return ShopRefreshS;
        case 8005: return ShopItemBuyC;
        case 8006: return ShopItemBuyS;
        case 8007: return ShopDataSynC;
        case 8008: return ShopDataSynS;
        case 8009: return ShopGold2CoinC;
        case 8010: return ShopGold2CoinS;
        case 9001: return AllianceCreateC;
        case 9002: return AllianceCreateS;
        case 10001: return SETTING_LANGUAGE_C;
        case 10002: return SETTING_LANGUAGE_S;
        case 10003: return SETTING_BLOCK_C;
        case 10004: return SETTING_BLOCK_S;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<code>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<code>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<code>() {
            public code findValueByNumber(int number) {
              return code.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.HS.getDescriptor().getEnumTypes().get(2);
    }

    private static final code[] VALUES = values();

    public static code valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private code(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:code)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Protocol/HS.proto*I\n\003sys\022\020\n\014DATA_WRAPP" +
      "ER\020\001\022\020\n\014KEY_EXCHANGE\020\002\022\016\n\nHEART_BEAT\020\003\022\016" +
      "\n\nERROR_CODE\020\004*\032\n\002gm\022\024\n\020GEN_TEST_ACCOUNT" +
      "\020d*\244\021\n\004code\022\014\n\007LOGIN_C\020\350\007\022\014\n\007LOGIN_S\020\351\007\022" +
      "\r\n\010LOGOUT_C\020\352\007\022\r\n\010LOGOUT_S\020\353\007\022\016\n\tKICKOUT" +
      "_S\020\354\007\022\017\n\nSYNCINFO_C\020\355\007\022\017\n\nSYNCINFO_S\020\356\007\022" +
      "\027\n\022PLAYER_INFO_SYNC_S\020\362\007\022\033\n\026STATISTICS_I" +
      "NFO_SYNC_S\020\363\007\022\030\n\023SETTING_INFO_SYNC_S\020\364\007\022" +
      "\030\n\023MONSTER_INFO_SYNC_S\020\365\007\022\025\n\020ITEM_INFO_S" +
      "YNC_S\020\366\007\022\026\n\021EQUIP_INFO_SYNC_S\020\367\007\022\026\n\021QUES",
      "T_INFO_SYNC_S\020\370\007\022\025\n\020MAIL_INFO_SYNC_S\020\371\007\022" +
      "\026\n\021ASSEMBLE_FINISH_S\020\372\007\022\024\n\017PLAYER_CREATE" +
      "_C\020\315\010\022\024\n\017PLAYER_CREATE_S\020\316\010\022\025\n\020PLAYER_CO" +
      "NSUME_S\020\317\010\022\024\n\017PLAYER_REWARD_S\020\320\010\022\022\n\rMONS" +
      "TER_ADD_S\020\321\017\022\024\n\017MONSTER_CATCH_C\020\322\017\022\024\n\017MO" +
      "NSTER_CATCH_S\020\323\017\022\024\n\017MONSTER_BREAK_C\020\324\017\022\024" +
      "\n\017MONSTER_BREAK_S\020\325\017\022\023\n\016MONSTER_FEED_C\020\326" +
      "\017\022\023\n\016MONSTER_FEED_S\020\327\017\022\027\n\022MONSTER_SKILL_" +
      "UP_C\020\330\017\022\027\n\022MONSTER_SKILL_UP_S\020\331\017\022\027\n\022MONS" +
      "TER_STAGE_UP_C\020\332\017\022\027\n\022MONSTER_STAGE_UP_S\020",
      "\333\017\022\026\n\021INSTANCE_ASSIST_C\020\271\027\022\026\n\021INSTANCE_A" +
      "SSIST_S\020\272\027\022\025\n\020INSTANCE_ENTER_C\020\273\027\022\025\n\020INS" +
      "TANCE_ENTER_S\020\274\027\022\026\n\021INSTANCE_SETTLE_C\020\275\027" +
      "\022\026\n\021INSTANCE_SETTLE_S\020\276\027\022\031\n\024INSTANCE_OPE" +
      "N_CARD_C\020\277\027\022\031\n\024INSTANCE_OPEN_CARD_S\020\300\027\022\025" +
      "\n\020INSTANCE_SWEEP_C\020\301\027\022\025\n\020INSTANCE_SWEEP_" +
      "S\020\302\027\022\033\n\026INSTANCE_RESET_COUNT_C\020\303\027\022\033\n\026INS" +
      "TANCE_RESET_COUNT_S\020\304\027\022\017\n\nITEM_USE_C\020\241\037\022" +
      "\017\n\nITEM_USE_S\020\242\037\022\020\n\013ITEM_SELL_C\020\243\037\022\020\n\013IT" +
      "EM_SELL_S\020\244\037\022\017\n\nITEM_BUY_C\020\245\037\022\017\n\nITEM_BU",
      "Y_S\020\246\037\022\023\n\016ITEM_COMPOSE_C\020\247\037\022\023\n\016ITEM_COMP" +
      "OSE_S\020\250\037\022\021\n\014EQUIP_SELL_C\020\205 \022\021\n\014EQUIP_SEL" +
      "L_S\020\206 \022\020\n\013EQUIP_BUY_C\020\207 \022\020\n\013EQUIP_BUY_S\020" +
      "\210 \022\024\n\017EQUIP_COMPOSE_C\020\211 \022\024\n\017EQUIP_COMPOS" +
      "E_S\020\212 \022\033\n\026EQUIP_INCREASE_LEVEL_C\020\213 \022\033\n\026E" +
      "QUIP_INCREASE_LEVEL_S\020\214 \022\033\n\026EQUIP_INCREA" +
      "SE_STAGE_C\020\215 \022\033\n\026EQUIP_INCREASE_STAGE_S\020" +
      "\216 \022\022\n\rEQUIP_PUNCH_C\020\217 \022\022\n\rEQUIP_PUNCH_S\020" +
      "\220 \022\020\n\013EQUIP_GEM_C\020\221 \022\020\n\013EQUIP_GEM_S\020\222 \022\032" +
      "\n\025EQUIP_MONSTER_DRESS_C\020\230 \022\032\n\025EQUIP_MONS",
      "TER_DRESS_S\020\231 \022\034\n\027EQUIP_MONSTER_UNDRESS_" +
      "C\020\232 \022\034\n\027EQUIP_MONSTER_UNDRESS_S\020\233 \022\034\n\027EQ" +
      "UIP_MONSTER_REPLACE_C\020\234 \022\034\n\027EQUIP_MONSTE" +
      "R_REPLACE_S\020\235 \022\023\n\016QUEST_SUBMIT_C\020\211\'\022\023\n\016Q" +
      "UEST_SUBMIT_S\020\212\'\022\023\n\016QUEST_ACCEPT_S\020\213\'\022\023\n" +
      "\016QUEST_UPDATE_S\020\214\'\022\023\n\016QUEST_REMOVE_S\020\215\'\022" +
      "\020\n\013MAIL_READ_C\020\361.\022\023\n\016MAIL_RECEIVE_C\020\362.\022\023" +
      "\n\016MAIL_RECEIVE_S\020\363.\022\027\n\022MAIL_RECEIVE_ALL_" +
      "C\020\364.\022\027\n\022MAIL_RECEIVE_ALL_S\020\365.\022\017\n\nMAIL_NE" +
      "W_S\020\366.\022\023\n\016IM_CHAT_SEND_C\020\3316\022\016\n\tIM_PUSH_S",
      "\020\3326\022\022\n\rShopDataInitC\020\301>\022\022\n\rShopDataInitS" +
      "\020\302>\022\021\n\014ShopRefreshC\020\303>\022\021\n\014ShopRefreshS\020\304" +
      ">\022\021\n\014ShopItemBuyC\020\305>\022\021\n\014ShopItemBuyS\020\306>\022" +
      "\021\n\014ShopDataSynC\020\307>\022\021\n\014ShopDataSynS\020\310>\022\023\n" +
      "\016ShopGold2CoinC\020\311>\022\023\n\016ShopGold2CoinS\020\312>\022" +
      "\024\n\017AllianceCreateC\020\251F\022\024\n\017AllianceCreateS" +
      "\020\252F\022\027\n\022SETTING_LANGUAGE_C\020\221N\022\027\n\022SETTING_" +
      "LANGUAGE_S\020\222N\022\024\n\017SETTING_BLOCK_C\020\223N\022\024\n\017S" +
      "ETTING_BLOCK_S\020\224NB\030\n\026com.hawk.game.proto" +
      "col"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
