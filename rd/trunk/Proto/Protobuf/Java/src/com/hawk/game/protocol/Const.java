// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol/Const.proto

package com.hawk.game.protocol;

public final class Const {
  private Const() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code chatType}
   *
   * <pre>
   * 聊天类型
   * </pre>
   */
  public enum chatType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHAT_WORLD = 1;</code>
     *
     * <pre>
     * 世界聊天
     * </pre>
     */
    CHAT_WORLD(0, 1),
    /**
     * <code>CHAT_BROADCAST = 2;</code>
     *
     * <pre>
     * 聊天广播
     * </pre>
     */
    CHAT_BROADCAST(1, 2),
    /**
     * <code>WORLD_BROADCAST = 3;</code>
     *
     * <pre>
     * 世界广播
     * </pre>
     */
    WORLD_BROADCAST(2, 3),
    ;

    /**
     * <code>CHAT_WORLD = 1;</code>
     *
     * <pre>
     * 世界聊天
     * </pre>
     */
    public static final int CHAT_WORLD_VALUE = 1;
    /**
     * <code>CHAT_BROADCAST = 2;</code>
     *
     * <pre>
     * 聊天广播
     * </pre>
     */
    public static final int CHAT_BROADCAST_VALUE = 2;
    /**
     * <code>WORLD_BROADCAST = 3;</code>
     *
     * <pre>
     * 世界广播
     * </pre>
     */
    public static final int WORLD_BROADCAST_VALUE = 3;


    public final int getNumber() { return value; }

    public static chatType valueOf(int value) {
      switch (value) {
        case 1: return CHAT_WORLD;
        case 2: return CHAT_BROADCAST;
        case 3: return WORLD_BROADCAST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<chatType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<chatType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<chatType>() {
            public chatType findValueByNumber(int number) {
              return chatType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(0);
    }

    private static final chatType[] VALUES = values();

    public static chatType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private chatType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:chatType)
  }

  /**
   * Protobuf enum {@code kickReason}
   *
   * <pre>
   * 被踢下线原因
   * </pre>
   */
  public enum kickReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DUPLICATE_LOGIN = 1;</code>
     */
    DUPLICATE_LOGIN(0, 1),
    /**
     * <code>SERVER_SHUTDOWN = 2;</code>
     */
    SERVER_SHUTDOWN(1, 2),
    /**
     * <code>LOGIN_FORBIDEN = 3;</code>
     */
    LOGIN_FORBIDEN(2, 3),
    /**
     * <code>KICKED_OUT = 4;</code>
     */
    KICKED_OUT(3, 4),
    /**
     * <code>SERVER_RESTART = 5;</code>
     */
    SERVER_RESTART(4, 5),
    /**
     * <code>GM = 6;</code>
     */
    GM(5, 6),
    ;

    /**
     * <code>DUPLICATE_LOGIN = 1;</code>
     */
    public static final int DUPLICATE_LOGIN_VALUE = 1;
    /**
     * <code>SERVER_SHUTDOWN = 2;</code>
     */
    public static final int SERVER_SHUTDOWN_VALUE = 2;
    /**
     * <code>LOGIN_FORBIDEN = 3;</code>
     */
    public static final int LOGIN_FORBIDEN_VALUE = 3;
    /**
     * <code>KICKED_OUT = 4;</code>
     */
    public static final int KICKED_OUT_VALUE = 4;
    /**
     * <code>SERVER_RESTART = 5;</code>
     */
    public static final int SERVER_RESTART_VALUE = 5;
    /**
     * <code>GM = 6;</code>
     */
    public static final int GM_VALUE = 6;


    public final int getNumber() { return value; }

    public static kickReason valueOf(int value) {
      switch (value) {
        case 1: return DUPLICATE_LOGIN;
        case 2: return SERVER_SHUTDOWN;
        case 3: return LOGIN_FORBIDEN;
        case 4: return KICKED_OUT;
        case 5: return SERVER_RESTART;
        case 6: return GM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<kickReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<kickReason>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<kickReason>() {
            public kickReason findValueByNumber(int number) {
              return kickReason.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(1);
    }

    private static final kickReason[] VALUES = values();

    public static kickReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private kickReason(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kickReason)
  }

  /**
   * Protobuf enum {@code RewardReason}
   *
   * <pre>
   * 获得道具/怪物原因
   * </pre>
   */
  public enum RewardReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SYS_PRESENT = 1;</code>
     */
    SYS_PRESENT(0, 1),
    /**
     * <code>NPC = 2;</code>
     */
    NPC(1, 2),
    /**
     * <code>QUEST = 3;</code>
     */
    QUEST(2, 3),
    /**
     * <code>ACITVITY = 4;</code>
     */
    ACITVITY(3, 4),
    /**
     * <code>CATCH = 5;</code>
     */
    CATCH(4, 5),
    ;

    /**
     * <code>SYS_PRESENT = 1;</code>
     */
    public static final int SYS_PRESENT_VALUE = 1;
    /**
     * <code>NPC = 2;</code>
     */
    public static final int NPC_VALUE = 2;
    /**
     * <code>QUEST = 3;</code>
     */
    public static final int QUEST_VALUE = 3;
    /**
     * <code>ACITVITY = 4;</code>
     */
    public static final int ACITVITY_VALUE = 4;
    /**
     * <code>CATCH = 5;</code>
     */
    public static final int CATCH_VALUE = 5;


    public final int getNumber() { return value; }

    public static RewardReason valueOf(int value) {
      switch (value) {
        case 1: return SYS_PRESENT;
        case 2: return NPC;
        case 3: return QUEST;
        case 4: return ACITVITY;
        case 5: return CATCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RewardReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RewardReason>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RewardReason>() {
            public RewardReason findValueByNumber(int number) {
              return RewardReason.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(2);
    }

    private static final RewardReason[] VALUES = values();

    public static RewardReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RewardReason(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RewardReason)
  }

  /**
   * Protobuf enum {@code ClassType}
   */
  public enum ClassType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PLAYER_TYPE = 1;</code>
     *
     * <pre>
     * 角色
     * </pre>
     */
    PLAYER_TYPE(0, 1),
    /**
     * <code>MONSTER_TYPE = 2;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    MONSTER_TYPE(1, 2),
    ;

    /**
     * <code>PLAYER_TYPE = 1;</code>
     *
     * <pre>
     * 角色
     * </pre>
     */
    public static final int PLAYER_TYPE_VALUE = 1;
    /**
     * <code>MONSTER_TYPE = 2;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    public static final int MONSTER_TYPE_VALUE = 2;


    public final int getNumber() { return value; }

    public static ClassType valueOf(int value) {
      switch (value) {
        case 1: return PLAYER_TYPE;
        case 2: return MONSTER_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClassType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ClassType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClassType>() {
            public ClassType findValueByNumber(int number) {
              return ClassType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(3);
    }

    private static final ClassType[] VALUES = values();

    public static ClassType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ClassType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ClassType)
  }

  /**
   * Protobuf enum {@code itemType}
   *
   * <pre>
   * 抽象物品类型定义
   * </pre>
   */
  public enum itemType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE_ITEM = 0;</code>
     *
     * <pre>
     * 空属性
     * </pre>
     */
    NONE_ITEM(0, 0),
    /**
     * <code>PLAYER_ATTR = 1;</code>
     *
     * <pre>
     * 玩家属性
     * </pre>
     */
    PLAYER_ATTR(1, 1),
    /**
     * <code>MONSTER_ATTR = 2;</code>
     *
     * <pre>
     * 怪物属性
     * </pre>
     */
    MONSTER_ATTR(2, 2),
    /**
     * <code>ITEM = 3;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    ITEM(3, 3),
    /**
     * <code>EQUIP = 4;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    EQUIP(4, 4),
    /**
     * <code>SKILL = 5;</code>
     *
     * <pre>
     * 技能
     * </pre>
     */
    SKILL(5, 5),
    /**
     * <code>GROUP = 6;</code>
     *
     * <pre>
     * 奖励组
     * </pre>
     */
    GROUP(6, 6),
    /**
     * <code>MONSTER = 7;</code>
     *
     * <pre>
     * 怪物奖励
     * </pre>
     */
    MONSTER(7, 7),
    ;

    /**
     * <code>NONE_ITEM = 0;</code>
     *
     * <pre>
     * 空属性
     * </pre>
     */
    public static final int NONE_ITEM_VALUE = 0;
    /**
     * <code>PLAYER_ATTR = 1;</code>
     *
     * <pre>
     * 玩家属性
     * </pre>
     */
    public static final int PLAYER_ATTR_VALUE = 1;
    /**
     * <code>MONSTER_ATTR = 2;</code>
     *
     * <pre>
     * 怪物属性
     * </pre>
     */
    public static final int MONSTER_ATTR_VALUE = 2;
    /**
     * <code>ITEM = 3;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    public static final int ITEM_VALUE = 3;
    /**
     * <code>EQUIP = 4;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    public static final int EQUIP_VALUE = 4;
    /**
     * <code>SKILL = 5;</code>
     *
     * <pre>
     * 技能
     * </pre>
     */
    public static final int SKILL_VALUE = 5;
    /**
     * <code>GROUP = 6;</code>
     *
     * <pre>
     * 奖励组
     * </pre>
     */
    public static final int GROUP_VALUE = 6;
    /**
     * <code>MONSTER = 7;</code>
     *
     * <pre>
     * 怪物奖励
     * </pre>
     */
    public static final int MONSTER_VALUE = 7;


    public final int getNumber() { return value; }

    public static itemType valueOf(int value) {
      switch (value) {
        case 0: return NONE_ITEM;
        case 1: return PLAYER_ATTR;
        case 2: return MONSTER_ATTR;
        case 3: return ITEM;
        case 4: return EQUIP;
        case 5: return SKILL;
        case 6: return GROUP;
        case 7: return MONSTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<itemType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<itemType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<itemType>() {
            public itemType findValueByNumber(int number) {
              return itemType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(4);
    }

    private static final itemType[] VALUES = values();

    public static itemType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private itemType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:itemType)
  }

  /**
   * Protobuf enum {@code moneyType}
   *
   * <pre>
   * 普通商店购买价格类型
   * </pre>
   */
  public enum moneyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MONEY_GOLD = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    MONEY_GOLD(0, 1),
    /**
     * <code>MONEY_COIN = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    MONEY_COIN(1, 2),
    /**
     * <code>ALLIANCE_COTRIBUTION = 3;</code>
     *
     * <pre>
     * 公会币(贡献值)
     * </pre>
     */
    ALLIANCE_COTRIBUTION(2, 3),
    /**
     * <code>TOWER_COIN = 4;</code>
     *
     * <pre>
     * 通天塔币
     * </pre>
     */
    TOWER_COIN(3, 4),
    /**
     * <code>ARENA_COIN = 5;</code>
     *
     * <pre>
     * 竞技场币
     * </pre>
     */
    ARENA_COIN(4, 5),
    ;

    /**
     * <code>MONEY_GOLD = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public static final int MONEY_GOLD_VALUE = 1;
    /**
     * <code>MONEY_COIN = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    public static final int MONEY_COIN_VALUE = 2;
    /**
     * <code>ALLIANCE_COTRIBUTION = 3;</code>
     *
     * <pre>
     * 公会币(贡献值)
     * </pre>
     */
    public static final int ALLIANCE_COTRIBUTION_VALUE = 3;
    /**
     * <code>TOWER_COIN = 4;</code>
     *
     * <pre>
     * 通天塔币
     * </pre>
     */
    public static final int TOWER_COIN_VALUE = 4;
    /**
     * <code>ARENA_COIN = 5;</code>
     *
     * <pre>
     * 竞技场币
     * </pre>
     */
    public static final int ARENA_COIN_VALUE = 5;


    public final int getNumber() { return value; }

    public static moneyType valueOf(int value) {
      switch (value) {
        case 1: return MONEY_GOLD;
        case 2: return MONEY_COIN;
        case 3: return ALLIANCE_COTRIBUTION;
        case 4: return TOWER_COIN;
        case 5: return ARENA_COIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<moneyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<moneyType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<moneyType>() {
            public moneyType findValueByNumber(int number) {
              return moneyType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(5);
    }

    private static final moneyType[] VALUES = values();

    public static moneyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private moneyType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:moneyType)
  }

  /**
   * Protobuf enum {@code changeType}
   *
   * <pre>
   * 变换的数值类型
   * </pre>
   */
  public enum changeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHANGE_GOLD = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    CHANGE_GOLD(0, 1),
    /**
     * <code>CHANGE_COIN = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    CHANGE_COIN(1, 2),
    /**
     * <code>CHANGE_PLAYER_EXP = 3;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    CHANGE_PLAYER_EXP(2, 3),
    /**
     * <code>CHANGE_PLAYER_LEVEL = 4;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    CHANGE_PLAYER_LEVEL(3, 4),
    /**
     * <code>CHANGE_MONSTER_EXP = 5;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    CHANGE_MONSTER_EXP(4, 5),
    /**
     * <code>CHANGE_MONSTER_LEVEL = 6;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    CHANGE_MONSTER_LEVEL(5, 6),
    /**
     * <code>CHANGE_FATIGUE = 7;</code>
     *
     * <pre>
     * 疲劳值
     * </pre>
     */
    CHANGE_FATIGUE(6, 7),
    /**
     * <code>CHANGE_FAV = 8;</code>
     *
     * <pre>
     * 好感度
     * </pre>
     */
    CHANGE_FAV(7, 8),
    /**
     * <code>CHANGE_GOLD_BUY = 9;</code>
     *
     * <pre>
     * 充值钻石
     * </pre>
     */
    CHANGE_GOLD_BUY(8, 9),
    /**
     * <code>CHANGE_PLAYER_CONTRIBUTION = 10;</code>
     *
     * <pre>
     * 个人贡献值
     * </pre>
     */
    CHANGE_PLAYER_CONTRIBUTION(9, 10),
    /**
     * <code>CHANGE_TOWER_COIN = 11;</code>
     *
     * <pre>
     * 通天塔币
     * </pre>
     */
    CHANGE_TOWER_COIN(10, 11),
    /**
     * <code>CHANGE_ARENA_COIN = 12;</code>
     *
     * <pre>
     * 竞技场币
     * </pre>
     */
    CHANGE_ARENA_COIN(11, 12),
    ;

    /**
     * <code>CHANGE_GOLD = 1;</code>
     *
     * <pre>
     * 钻石
     * </pre>
     */
    public static final int CHANGE_GOLD_VALUE = 1;
    /**
     * <code>CHANGE_COIN = 2;</code>
     *
     * <pre>
     * 金币
     * </pre>
     */
    public static final int CHANGE_COIN_VALUE = 2;
    /**
     * <code>CHANGE_PLAYER_EXP = 3;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public static final int CHANGE_PLAYER_EXP_VALUE = 3;
    /**
     * <code>CHANGE_PLAYER_LEVEL = 4;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public static final int CHANGE_PLAYER_LEVEL_VALUE = 4;
    /**
     * <code>CHANGE_MONSTER_EXP = 5;</code>
     *
     * <pre>
     * 经验
     * </pre>
     */
    public static final int CHANGE_MONSTER_EXP_VALUE = 5;
    /**
     * <code>CHANGE_MONSTER_LEVEL = 6;</code>
     *
     * <pre>
     * 等级
     * </pre>
     */
    public static final int CHANGE_MONSTER_LEVEL_VALUE = 6;
    /**
     * <code>CHANGE_FATIGUE = 7;</code>
     *
     * <pre>
     * 疲劳值
     * </pre>
     */
    public static final int CHANGE_FATIGUE_VALUE = 7;
    /**
     * <code>CHANGE_FAV = 8;</code>
     *
     * <pre>
     * 好感度
     * </pre>
     */
    public static final int CHANGE_FAV_VALUE = 8;
    /**
     * <code>CHANGE_GOLD_BUY = 9;</code>
     *
     * <pre>
     * 充值钻石
     * </pre>
     */
    public static final int CHANGE_GOLD_BUY_VALUE = 9;
    /**
     * <code>CHANGE_PLAYER_CONTRIBUTION = 10;</code>
     *
     * <pre>
     * 个人贡献值
     * </pre>
     */
    public static final int CHANGE_PLAYER_CONTRIBUTION_VALUE = 10;
    /**
     * <code>CHANGE_TOWER_COIN = 11;</code>
     *
     * <pre>
     * 通天塔币
     * </pre>
     */
    public static final int CHANGE_TOWER_COIN_VALUE = 11;
    /**
     * <code>CHANGE_ARENA_COIN = 12;</code>
     *
     * <pre>
     * 竞技场币
     * </pre>
     */
    public static final int CHANGE_ARENA_COIN_VALUE = 12;


    public final int getNumber() { return value; }

    public static changeType valueOf(int value) {
      switch (value) {
        case 1: return CHANGE_GOLD;
        case 2: return CHANGE_COIN;
        case 3: return CHANGE_PLAYER_EXP;
        case 4: return CHANGE_PLAYER_LEVEL;
        case 5: return CHANGE_MONSTER_EXP;
        case 6: return CHANGE_MONSTER_LEVEL;
        case 7: return CHANGE_FATIGUE;
        case 8: return CHANGE_FAV;
        case 9: return CHANGE_GOLD_BUY;
        case 10: return CHANGE_PLAYER_CONTRIBUTION;
        case 11: return CHANGE_TOWER_COIN;
        case 12: return CHANGE_ARENA_COIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<changeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<changeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<changeType>() {
            public changeType findValueByNumber(int number) {
              return changeType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(6);
    }

    private static final changeType[] VALUES = values();

    public static changeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private changeType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:changeType)
  }

  /**
   * Protobuf enum {@code attr}
   *
   * <pre>
   * 附加属性类型定义
   * </pre>
   */
  public enum attr
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EMPTYATTR = 0;</code>
     *
     * <pre>
     * 空属性
     * </pre>
     */
    EMPTYATTR(0, 0),
    /**
     * <code>STRENGHT = 1;</code>
     *
     * <pre>
     * 力量
     * </pre>
     */
    STRENGHT(1, 1),
    /**
     * <code>INTELLIGENCE = 2;</code>
     *
     * <pre>
     * 智力
     * </pre>
     */
    INTELLIGENCE(2, 2),
    /**
     * <code>SPEED = 3;</code>
     *
     * <pre>
     *速度
     * </pre>
     */
    SPEED(3, 3),
    /**
     * <code>DEFENSE = 4;</code>
     *
     * <pre>
     *防御力
     * </pre>
     */
    DEFENSE(4, 4),
    /**
     * <code>HEALTH = 5;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    HEALTH(5, 5),
    /**
     * <code>DEFENSEWEAKEN = 101;</code>
     *
     * <pre>
     *防御穿透
     * </pre>
     */
    DEFENSEWEAKEN(6, 101),
    /**
     * <code>CRITICAL = 102;</code>
     *
     * <pre>
     *暴击率
     * </pre>
     */
    CRITICAL(7, 102),
    /**
     * <code>CRITICALWEAKEN = 103;</code>
     *
     * <pre>
     *暴击抗性
     * </pre>
     */
    CRITICALWEAKEN(8, 103),
    /**
     * <code>RECOVERY = 104;</code>
     *
     * <pre>
     *生命回复
     * </pre>
     */
    RECOVERY(9, 104),
    /**
     * <code>CRITICALDAMAGE = 105;</code>
     *
     * <pre>
     *暴击伤害加成
     * </pre>
     */
    CRITICALDAMAGE(10, 105),
    /**
     * <code>HITRATE = 106;</code>
     *
     * <pre>
     *命中率
     * </pre>
     */
    HITRATE(11, 106),
    /**
     * <code>CUREINCREASE = 107;</code>
     *
     * <pre>
     *治疗效果加成
     * </pre>
     */
    CUREINCREASE(12, 107),
    /**
     * <code>DAMAGEREDUCE = 108;</code>
     *
     * <pre>
     *伤害减免
     * </pre>
     */
    DAMAGEREDUCE(13, 108),
    /**
     * <code>DAMAGEINCREASE = 109;</code>
     *
     * <pre>
     *伤害加深
     * </pre>
     */
    DAMAGEINCREASE(14, 109),
    ;

    /**
     * <code>EMPTYATTR = 0;</code>
     *
     * <pre>
     * 空属性
     * </pre>
     */
    public static final int EMPTYATTR_VALUE = 0;
    /**
     * <code>STRENGHT = 1;</code>
     *
     * <pre>
     * 力量
     * </pre>
     */
    public static final int STRENGHT_VALUE = 1;
    /**
     * <code>INTELLIGENCE = 2;</code>
     *
     * <pre>
     * 智力
     * </pre>
     */
    public static final int INTELLIGENCE_VALUE = 2;
    /**
     * <code>SPEED = 3;</code>
     *
     * <pre>
     *速度
     * </pre>
     */
    public static final int SPEED_VALUE = 3;
    /**
     * <code>DEFENSE = 4;</code>
     *
     * <pre>
     *防御力
     * </pre>
     */
    public static final int DEFENSE_VALUE = 4;
    /**
     * <code>HEALTH = 5;</code>
     *
     * <pre>
     *体力
     * </pre>
     */
    public static final int HEALTH_VALUE = 5;
    /**
     * <code>DEFENSEWEAKEN = 101;</code>
     *
     * <pre>
     *防御穿透
     * </pre>
     */
    public static final int DEFENSEWEAKEN_VALUE = 101;
    /**
     * <code>CRITICAL = 102;</code>
     *
     * <pre>
     *暴击率
     * </pre>
     */
    public static final int CRITICAL_VALUE = 102;
    /**
     * <code>CRITICALWEAKEN = 103;</code>
     *
     * <pre>
     *暴击抗性
     * </pre>
     */
    public static final int CRITICALWEAKEN_VALUE = 103;
    /**
     * <code>RECOVERY = 104;</code>
     *
     * <pre>
     *生命回复
     * </pre>
     */
    public static final int RECOVERY_VALUE = 104;
    /**
     * <code>CRITICALDAMAGE = 105;</code>
     *
     * <pre>
     *暴击伤害加成
     * </pre>
     */
    public static final int CRITICALDAMAGE_VALUE = 105;
    /**
     * <code>HITRATE = 106;</code>
     *
     * <pre>
     *命中率
     * </pre>
     */
    public static final int HITRATE_VALUE = 106;
    /**
     * <code>CUREINCREASE = 107;</code>
     *
     * <pre>
     *治疗效果加成
     * </pre>
     */
    public static final int CUREINCREASE_VALUE = 107;
    /**
     * <code>DAMAGEREDUCE = 108;</code>
     *
     * <pre>
     *伤害减免
     * </pre>
     */
    public static final int DAMAGEREDUCE_VALUE = 108;
    /**
     * <code>DAMAGEINCREASE = 109;</code>
     *
     * <pre>
     *伤害加深
     * </pre>
     */
    public static final int DAMAGEINCREASE_VALUE = 109;


    public final int getNumber() { return value; }

    public static attr valueOf(int value) {
      switch (value) {
        case 0: return EMPTYATTR;
        case 1: return STRENGHT;
        case 2: return INTELLIGENCE;
        case 3: return SPEED;
        case 4: return DEFENSE;
        case 5: return HEALTH;
        case 101: return DEFENSEWEAKEN;
        case 102: return CRITICAL;
        case 103: return CRITICALWEAKEN;
        case 104: return RECOVERY;
        case 105: return CRITICALDAMAGE;
        case 106: return HITRATE;
        case 107: return CUREINCREASE;
        case 108: return DAMAGEREDUCE;
        case 109: return DAMAGEINCREASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<attr>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<attr>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<attr>() {
            public attr findValueByNumber(int number) {
              return attr.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(7);
    }

    private static final attr[] VALUES = values();

    public static attr valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private attr(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:attr)
  }

  /**
   * Protobuf enum {@code userCondition}
   *
   * <pre>
   * 使用条件
   * </pre>
   */
  public enum userCondition
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BATTLE = 1;</code>
     *
     * <pre>
     * 战斗
     * </pre>
     */
    BATTLE(0, 1),
    /**
     * <code>NON_BATTLE = 2;</code>
     *
     * <pre>
     * 非战斗
     * </pre>
     */
    NON_BATTLE(1, 2),
    ;

    /**
     * <code>BATTLE = 1;</code>
     *
     * <pre>
     * 战斗
     * </pre>
     */
    public static final int BATTLE_VALUE = 1;
    /**
     * <code>NON_BATTLE = 2;</code>
     *
     * <pre>
     * 非战斗
     * </pre>
     */
    public static final int NON_BATTLE_VALUE = 2;


    public final int getNumber() { return value; }

    public static userCondition valueOf(int value) {
      switch (value) {
        case 1: return BATTLE;
        case 2: return NON_BATTLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<userCondition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<userCondition>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<userCondition>() {
            public userCondition findValueByNumber(int number) {
              return userCondition.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(8);
    }

    private static final userCondition[] VALUES = values();

    public static userCondition valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private userCondition(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:userCondition)
  }

  /**
   * Protobuf enum {@code bindType}
   *
   * <pre>
   * 绑定类型
   * </pre>
   */
  public enum bindType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NON_BIND = 1;</code>
     *
     * <pre>
     * 不绑定
     * </pre>
     */
    NON_BIND(0, 1),
    /**
     * <code>USE_BIND = 2;</code>
     *
     * <pre>
     * 使用绑定
     * </pre>
     */
    USE_BIND(1, 2),
    /**
     * <code>TAKE_BIND = 3;</code>
     *
     * <pre>
     * 拾取绑定
     * </pre>
     */
    TAKE_BIND(2, 3),
    ;

    /**
     * <code>NON_BIND = 1;</code>
     *
     * <pre>
     * 不绑定
     * </pre>
     */
    public static final int NON_BIND_VALUE = 1;
    /**
     * <code>USE_BIND = 2;</code>
     *
     * <pre>
     * 使用绑定
     * </pre>
     */
    public static final int USE_BIND_VALUE = 2;
    /**
     * <code>TAKE_BIND = 3;</code>
     *
     * <pre>
     * 拾取绑定
     * </pre>
     */
    public static final int TAKE_BIND_VALUE = 3;


    public final int getNumber() { return value; }

    public static bindType valueOf(int value) {
      switch (value) {
        case 1: return NON_BIND;
        case 2: return USE_BIND;
        case 3: return TAKE_BIND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<bindType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<bindType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<bindType>() {
            public bindType findValueByNumber(int number) {
              return bindType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(9);
    }

    private static final bindType[] VALUES = values();

    public static bindType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private bindType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bindType)
  }

  /**
   * Protobuf enum {@code toolType}
   *
   * <pre>
   * 物品类型定义
   * </pre>
   */
  public enum toolType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMONTOOL = 1;</code>
     *
     * <pre>
     * 通用类型
     * </pre>
     */
    COMMONTOOL(0, 1),
    /**
     * <code>FRAGMENTTOOL = 2;</code>
     *
     * <pre>
     * 碎片
     * </pre>
     */
    FRAGMENTTOOL(1, 2),
    /**
     * <code>GEMTOOL = 3;</code>
     *
     * <pre>
     * 宝石
     * </pre>
     */
    GEMTOOL(2, 3),
    /**
     * <code>BOXTOOL = 4;</code>
     *
     * <pre>
     * 宝箱
     * </pre>
     */
    BOXTOOL(3, 4),
    /**
     * <code>USETOOL = 5;</code>
     *
     * <pre>
     * 消耗类
     * </pre>
     */
    USETOOL(4, 5),
    /**
     * <code>EQUIPTOOL = 7;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    EQUIPTOOL(5, 7),
    ;

    /**
     * <code>COMMONTOOL = 1;</code>
     *
     * <pre>
     * 通用类型
     * </pre>
     */
    public static final int COMMONTOOL_VALUE = 1;
    /**
     * <code>FRAGMENTTOOL = 2;</code>
     *
     * <pre>
     * 碎片
     * </pre>
     */
    public static final int FRAGMENTTOOL_VALUE = 2;
    /**
     * <code>GEMTOOL = 3;</code>
     *
     * <pre>
     * 宝石
     * </pre>
     */
    public static final int GEMTOOL_VALUE = 3;
    /**
     * <code>BOXTOOL = 4;</code>
     *
     * <pre>
     * 宝箱
     * </pre>
     */
    public static final int BOXTOOL_VALUE = 4;
    /**
     * <code>USETOOL = 5;</code>
     *
     * <pre>
     * 消耗类
     * </pre>
     */
    public static final int USETOOL_VALUE = 5;
    /**
     * <code>EQUIPTOOL = 7;</code>
     *
     * <pre>
     * 装备
     * </pre>
     */
    public static final int EQUIPTOOL_VALUE = 7;


    public final int getNumber() { return value; }

    public static toolType valueOf(int value) {
      switch (value) {
        case 1: return COMMONTOOL;
        case 2: return FRAGMENTTOOL;
        case 3: return GEMTOOL;
        case 4: return BOXTOOL;
        case 5: return USETOOL;
        case 7: return EQUIPTOOL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<toolType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<toolType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<toolType>() {
            public toolType findValueByNumber(int number) {
              return toolType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(10);
    }

    private static final toolType[] VALUES = values();

    public static toolType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private toolType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:toolType)
  }

  /**
   * Protobuf enum {@code FragSubType}
   *
   * <pre>
   * 子类型-碎片
   * </pre>
   */
  public enum FragSubType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FRAG_MONSTER = 1;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    FRAG_MONSTER(0, 1),
    /**
     * <code>FRAG_TOOL = 2;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    FRAG_TOOL(1, 2),
    ;

    /**
     * <code>FRAG_MONSTER = 1;</code>
     *
     * <pre>
     * 怪物
     * </pre>
     */
    public static final int FRAG_MONSTER_VALUE = 1;
    /**
     * <code>FRAG_TOOL = 2;</code>
     *
     * <pre>
     * 道具
     * </pre>
     */
    public static final int FRAG_TOOL_VALUE = 2;


    public final int getNumber() { return value; }

    public static FragSubType valueOf(int value) {
      switch (value) {
        case 1: return FRAG_MONSTER;
        case 2: return FRAG_TOOL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FragSubType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FragSubType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FragSubType>() {
            public FragSubType findValueByNumber(int number) {
              return FragSubType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(11);
    }

    private static final FragSubType[] VALUES = values();

    public static FragSubType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private FragSubType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:FragSubType)
  }

  /**
   * Protobuf enum {@code UseToolSubType}
   *
   * <pre>
   * 子类型-消耗品
   * </pre>
   */
  public enum UseToolSubType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USETOOLEXP = 1;</code>
     *
     * <pre>
     * 经验药水
     * </pre>
     */
    USETOOLEXP(0, 1),
    /**
     * <code>USETOOLDOUBLEEXP = 2;</code>
     *
     * <pre>
     * 双倍药水
     * </pre>
     */
    USETOOLDOUBLEEXP(1, 2),
    /**
     * <code>USETOOLTRIPLEEXP = 3;</code>
     *
     * <pre>
     * 三倍药水
     * </pre>
     */
    USETOOLTRIPLEEXP(2, 3),
    /**
     * <code>USETOOLFATIGUE = 4;</code>
     *
     * <pre>
     * 疲劳值
     * </pre>
     */
    USETOOLFATIGUE(3, 4),
    /**
     * <code>RAIDTICKET = 5;</code>
     *
     * <pre>
     * 扫荡券
     * </pre>
     */
    RAIDTICKET(4, 5),
    ;

    /**
     * <code>USETOOLEXP = 1;</code>
     *
     * <pre>
     * 经验药水
     * </pre>
     */
    public static final int USETOOLEXP_VALUE = 1;
    /**
     * <code>USETOOLDOUBLEEXP = 2;</code>
     *
     * <pre>
     * 双倍药水
     * </pre>
     */
    public static final int USETOOLDOUBLEEXP_VALUE = 2;
    /**
     * <code>USETOOLTRIPLEEXP = 3;</code>
     *
     * <pre>
     * 三倍药水
     * </pre>
     */
    public static final int USETOOLTRIPLEEXP_VALUE = 3;
    /**
     * <code>USETOOLFATIGUE = 4;</code>
     *
     * <pre>
     * 疲劳值
     * </pre>
     */
    public static final int USETOOLFATIGUE_VALUE = 4;
    /**
     * <code>RAIDTICKET = 5;</code>
     *
     * <pre>
     * 扫荡券
     * </pre>
     */
    public static final int RAIDTICKET_VALUE = 5;


    public final int getNumber() { return value; }

    public static UseToolSubType valueOf(int value) {
      switch (value) {
        case 1: return USETOOLEXP;
        case 2: return USETOOLDOUBLEEXP;
        case 3: return USETOOLTRIPLEEXP;
        case 4: return USETOOLFATIGUE;
        case 5: return RAIDTICKET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UseToolSubType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<UseToolSubType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UseToolSubType>() {
            public UseToolSubType findValueByNumber(int number) {
              return UseToolSubType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(12);
    }

    private static final UseToolSubType[] VALUES = values();

    public static UseToolSubType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private UseToolSubType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:UseToolSubType)
  }

  /**
   * Protobuf enum {@code equipPart}
   *
   * <pre>
   * 装备部位定义
   * </pre>
   */
  public enum equipPart
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HELMET = 1;</code>
     *
     * <pre>
     * 头盔
     * </pre>
     */
    HELMET(0, 1),
    /**
     * <code>RING = 2;</code>
     *
     * <pre>
     * 戒子
     * </pre>
     */
    RING(1, 2),
    /**
     * <code>BELT = 3;</code>
     *
     * <pre>
     * 腰带
     * </pre>
     */
    BELT(2, 3),
    /**
     * <code>CUIRASS = 4;</code>
     *
     * <pre>
     * 胸甲
     * </pre>
     */
    CUIRASS(3, 4),
    /**
     * <code>WEAPON1 = 5;</code>
     *
     * <pre>
     * 主手武器
     * </pre>
     */
    WEAPON1(4, 5),
    /**
     * <code>WEAPON2 = 6;</code>
     *
     * <pre>
     * 副手武器
     * </pre>
     */
    WEAPON2(5, 6),
    /**
     * <code>LEGGUARD = 7;</code>
     *
     * <pre>
     * 护腿
     * </pre>
     */
    LEGGUARD(6, 7),
    /**
     * <code>SHOES = 8;</code>
     *
     * <pre>
     * 鞋子
     * </pre>
     */
    SHOES(7, 8),
    /**
     * <code>GLOVE = 9;</code>
     *
     * <pre>
     * 手套
     * </pre>
     */
    GLOVE(8, 9),
    /**
     * <code>NECKLACE = 10;</code>
     *
     * <pre>
     * 项链
     * </pre>
     */
    NECKLACE(9, 10),
    ;

    /**
     * <code>HELMET = 1;</code>
     *
     * <pre>
     * 头盔
     * </pre>
     */
    public static final int HELMET_VALUE = 1;
    /**
     * <code>RING = 2;</code>
     *
     * <pre>
     * 戒子
     * </pre>
     */
    public static final int RING_VALUE = 2;
    /**
     * <code>BELT = 3;</code>
     *
     * <pre>
     * 腰带
     * </pre>
     */
    public static final int BELT_VALUE = 3;
    /**
     * <code>CUIRASS = 4;</code>
     *
     * <pre>
     * 胸甲
     * </pre>
     */
    public static final int CUIRASS_VALUE = 4;
    /**
     * <code>WEAPON1 = 5;</code>
     *
     * <pre>
     * 主手武器
     * </pre>
     */
    public static final int WEAPON1_VALUE = 5;
    /**
     * <code>WEAPON2 = 6;</code>
     *
     * <pre>
     * 副手武器
     * </pre>
     */
    public static final int WEAPON2_VALUE = 6;
    /**
     * <code>LEGGUARD = 7;</code>
     *
     * <pre>
     * 护腿
     * </pre>
     */
    public static final int LEGGUARD_VALUE = 7;
    /**
     * <code>SHOES = 8;</code>
     *
     * <pre>
     * 鞋子
     * </pre>
     */
    public static final int SHOES_VALUE = 8;
    /**
     * <code>GLOVE = 9;</code>
     *
     * <pre>
     * 手套
     * </pre>
     */
    public static final int GLOVE_VALUE = 9;
    /**
     * <code>NECKLACE = 10;</code>
     *
     * <pre>
     * 项链
     * </pre>
     */
    public static final int NECKLACE_VALUE = 10;


    public final int getNumber() { return value; }

    public static equipPart valueOf(int value) {
      switch (value) {
        case 1: return HELMET;
        case 2: return RING;
        case 3: return BELT;
        case 4: return CUIRASS;
        case 5: return WEAPON1;
        case 6: return WEAPON2;
        case 7: return LEGGUARD;
        case 8: return SHOES;
        case 9: return GLOVE;
        case 10: return NECKLACE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<equipPart>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<equipPart>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<equipPart>() {
            public equipPart findValueByNumber(int number) {
              return equipPart.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(13);
    }

    private static final equipPart[] VALUES = values();

    public static equipPart valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private equipPart(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:equipPart)
  }

  /**
   * Protobuf enum {@code equipQuality}
   *
   * <pre>
   * 装备品质
   * </pre>
   */
  public enum equipQuality
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WHITE = 1;</code>
     *
     * <pre>
     * 白
     * </pre>
     */
    WHITE(0, 1),
    /**
     * <code>GREEN = 2;</code>
     *
     * <pre>
     * 绿
     * </pre>
     */
    GREEN(1, 2),
    /**
     * <code>BLUE = 3;</code>
     *
     * <pre>
     * 蓝
     * </pre>
     */
    BLUE(2, 3),
    /**
     * <code>PURPLE = 4;</code>
     *
     * <pre>
     * 紫
     * </pre>
     */
    PURPLE(3, 4),
    /**
     * <code>ORANGE = 5;</code>
     *
     * <pre>
     * 橙
     * </pre>
     */
    ORANGE(4, 5),
    /**
     * <code>RED = 6;</code>
     *
     * <pre>
     * 红
     * </pre>
     */
    RED(5, 6),
    ;

    /**
     * <code>WHITE = 1;</code>
     *
     * <pre>
     * 白
     * </pre>
     */
    public static final int WHITE_VALUE = 1;
    /**
     * <code>GREEN = 2;</code>
     *
     * <pre>
     * 绿
     * </pre>
     */
    public static final int GREEN_VALUE = 2;
    /**
     * <code>BLUE = 3;</code>
     *
     * <pre>
     * 蓝
     * </pre>
     */
    public static final int BLUE_VALUE = 3;
    /**
     * <code>PURPLE = 4;</code>
     *
     * <pre>
     * 紫
     * </pre>
     */
    public static final int PURPLE_VALUE = 4;
    /**
     * <code>ORANGE = 5;</code>
     *
     * <pre>
     * 橙
     * </pre>
     */
    public static final int ORANGE_VALUE = 5;
    /**
     * <code>RED = 6;</code>
     *
     * <pre>
     * 红
     * </pre>
     */
    public static final int RED_VALUE = 6;


    public final int getNumber() { return value; }

    public static equipQuality valueOf(int value) {
      switch (value) {
        case 1: return WHITE;
        case 2: return GREEN;
        case 3: return BLUE;
        case 4: return PURPLE;
        case 5: return ORANGE;
        case 6: return RED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<equipQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<equipQuality>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<equipQuality>() {
            public equipQuality findValueByNumber(int number) {
              return equipQuality.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(14);
    }

    private static final equipQuality[] VALUES = values();

    public static equipQuality valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private equipQuality(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:equipQuality)
  }

  /**
   * Protobuf enum {@code shopType}
   *
   * <pre>
   * 商店类型
   * </pre>
   */
  public enum shopType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NORMALSHOP = 1;</code>
     */
    NORMALSHOP(0, 1),
    /**
     * <code>TOWERSHOP = 2;</code>
     */
    TOWERSHOP(1, 2),
    /**
     * <code>ALLIANCESHOP = 3;</code>
     */
    ALLIANCESHOP(2, 3),
    ;

    /**
     * <code>NORMALSHOP = 1;</code>
     */
    public static final int NORMALSHOP_VALUE = 1;
    /**
     * <code>TOWERSHOP = 2;</code>
     */
    public static final int TOWERSHOP_VALUE = 2;
    /**
     * <code>ALLIANCESHOP = 3;</code>
     */
    public static final int ALLIANCESHOP_VALUE = 3;


    public final int getNumber() { return value; }

    public static shopType valueOf(int value) {
      switch (value) {
        case 1: return NORMALSHOP;
        case 2: return TOWERSHOP;
        case 3: return ALLIANCESHOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<shopType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<shopType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<shopType>() {
            public shopType findValueByNumber(int number) {
              return shopType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(15);
    }

    private static final shopType[] VALUES = values();

    public static shopType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private shopType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shopType)
  }

  /**
   * Protobuf enum {@code mailState}
   *
   * <pre>
   * 邮件状态
   * </pre>
   */
  public enum mailState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNREAD = 1;</code>
     *
     * <pre>
     * 未读
     * </pre>
     */
    UNREAD(0, 1),
    /**
     * <code>READ = 2;</code>
     *
     * <pre>
     * 已读
     * </pre>
     */
    READ(1, 2),
    /**
     * <code>RECEIVE = 3;</code>
     *
     * <pre>
     * 已领取奖励
     * </pre>
     */
    RECEIVE(2, 3),
    /**
     * <code>OVERFLOW = 4;</code>
     *
     * <pre>
     * 已溢出删除
     * </pre>
     */
    OVERFLOW(3, 4),
    /**
     * <code>DELETE = 5;</code>
     *
     * <pre>
     * 已删除
     * </pre>
     */
    DELETE(4, 5),
    ;

    /**
     * <code>UNREAD = 1;</code>
     *
     * <pre>
     * 未读
     * </pre>
     */
    public static final int UNREAD_VALUE = 1;
    /**
     * <code>READ = 2;</code>
     *
     * <pre>
     * 已读
     * </pre>
     */
    public static final int READ_VALUE = 2;
    /**
     * <code>RECEIVE = 3;</code>
     *
     * <pre>
     * 已领取奖励
     * </pre>
     */
    public static final int RECEIVE_VALUE = 3;
    /**
     * <code>OVERFLOW = 4;</code>
     *
     * <pre>
     * 已溢出删除
     * </pre>
     */
    public static final int OVERFLOW_VALUE = 4;
    /**
     * <code>DELETE = 5;</code>
     *
     * <pre>
     * 已删除
     * </pre>
     */
    public static final int DELETE_VALUE = 5;


    public final int getNumber() { return value; }

    public static mailState valueOf(int value) {
      switch (value) {
        case 1: return UNREAD;
        case 2: return READ;
        case 3: return RECEIVE;
        case 4: return OVERFLOW;
        case 5: return DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<mailState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<mailState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<mailState>() {
            public mailState findValueByNumber(int number) {
              return mailState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(16);
    }

    private static final mailState[] VALUES = values();

    public static mailState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private mailState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mailState)
  }

  /**
   * Protobuf enum {@code ImType}
   *
   * <pre>
   * IM类型
   * </pre>
   */
  public enum ImType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHAT = 1;</code>
     *
     * <pre>
     * 聊天
     * </pre>
     */
    CHAT(0, 1),
    /**
     * <code>LANTERN = 2;</code>
     *
     * <pre>
     * 走马灯
     * </pre>
     */
    LANTERN(1, 2),
    /**
     * <code>PROMPT = 3;</code>
     *
     * <pre>
     * 系统提示
     * </pre>
     */
    PROMPT(2, 3),
    /**
     * <code>NOTICE = 4;</code>
     *
     * <pre>
     * 系统公告
     * </pre>
     */
    NOTICE(3, 4),
    ;

    /**
     * <code>CHAT = 1;</code>
     *
     * <pre>
     * 聊天
     * </pre>
     */
    public static final int CHAT_VALUE = 1;
    /**
     * <code>LANTERN = 2;</code>
     *
     * <pre>
     * 走马灯
     * </pre>
     */
    public static final int LANTERN_VALUE = 2;
    /**
     * <code>PROMPT = 3;</code>
     *
     * <pre>
     * 系统提示
     * </pre>
     */
    public static final int PROMPT_VALUE = 3;
    /**
     * <code>NOTICE = 4;</code>
     *
     * <pre>
     * 系统公告
     * </pre>
     */
    public static final int NOTICE_VALUE = 4;


    public final int getNumber() { return value; }

    public static ImType valueOf(int value) {
      switch (value) {
        case 1: return CHAT;
        case 2: return LANTERN;
        case 3: return PROMPT;
        case 4: return NOTICE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ImType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImType>() {
            public ImType findValueByNumber(int number) {
              return ImType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(17);
    }

    private static final ImType[] VALUES = values();

    public static ImType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ImType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ImType)
  }

  /**
   * Protobuf enum {@code ImChannel}
   *
   * <pre>
   * IM频道
   * </pre>
   */
  public enum ImChannel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PERSON = 1;</code>
     *
     * <pre>
     * 私人
     * </pre>
     */
    PERSON(0, 1),
    /**
     * <code>WORLD = 2;</code>
     *
     * <pre>
     * 公共
     * </pre>
     */
    WORLD(1, 2),
    /**
     * <code>GUILD = 3;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    GUILD(2, 3),
    ;

    /**
     * <code>PERSON = 1;</code>
     *
     * <pre>
     * 私人
     * </pre>
     */
    public static final int PERSON_VALUE = 1;
    /**
     * <code>WORLD = 2;</code>
     *
     * <pre>
     * 公共
     * </pre>
     */
    public static final int WORLD_VALUE = 2;
    /**
     * <code>GUILD = 3;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    public static final int GUILD_VALUE = 3;


    public final int getNumber() { return value; }

    public static ImChannel valueOf(int value) {
      switch (value) {
        case 1: return PERSON;
        case 2: return WORLD;
        case 3: return GUILD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImChannel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ImChannel>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImChannel>() {
            public ImChannel findValueByNumber(int number) {
              return ImChannel.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(18);
    }

    private static final ImChannel[] VALUES = values();

    public static ImChannel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ImChannel(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ImChannel)
  }

  /**
   * Protobuf enum {@code ChapterBoxState}
   *
   * <pre>
   * 章节宝箱状态
   * </pre>
   */
  public enum ChapterBoxState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = -1;</code>
     *
     * <pre>
     * 不能领取
     * </pre>
     */
    INVALID(0, -1),
    /**
     * <code>VALID = 0;</code>
     *
     * <pre>
     * 可领取
     * </pre>
     */
    VALID(1, 0),
    /**
     * <code>OPEN = 1;</code>
     *
     * <pre>
     * 已领取
     * </pre>
     */
    OPEN(2, 1),
    ;

    /**
     * <code>INVALID = -1;</code>
     *
     * <pre>
     * 不能领取
     * </pre>
     */
    public static final int INVALID_VALUE = -1;
    /**
     * <code>VALID = 0;</code>
     *
     * <pre>
     * 可领取
     * </pre>
     */
    public static final int VALID_VALUE = 0;
    /**
     * <code>OPEN = 1;</code>
     *
     * <pre>
     * 已领取
     * </pre>
     */
    public static final int OPEN_VALUE = 1;


    public final int getNumber() { return value; }

    public static ChapterBoxState valueOf(int value) {
      switch (value) {
        case -1: return INVALID;
        case 0: return VALID;
        case 1: return OPEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChapterBoxState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChapterBoxState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChapterBoxState>() {
            public ChapterBoxState findValueByNumber(int number) {
              return ChapterBoxState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(19);
    }

    private static final ChapterBoxState[] VALUES = values();

    public static ChapterBoxState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChapterBoxState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ChapterBoxState)
  }

  /**
   * Protobuf enum {@code InstanceType}
   *
   * <pre>
   * 副本类型
   * </pre>
   */
  public enum InstanceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INSTANCE_STORY = 1;</code>
     *
     * <pre>
     * 故事
     * </pre>
     */
    INSTANCE_STORY(0, 1),
    /**
     * <code>INSTANCE_HOLE = 2;</code>
     *
     * <pre>
     * 洞
     * </pre>
     */
    INSTANCE_HOLE(1, 2),
    /**
     * <code>INSTANCE_TOWER = 3;</code>
     *
     * <pre>
     * 塔
     * </pre>
     */
    INSTANCE_TOWER(2, 3),
    /**
     * <code>INSTANCE_GUILD = 4;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    INSTANCE_GUILD(3, 4),
    ;

    /**
     * <code>INSTANCE_STORY = 1;</code>
     *
     * <pre>
     * 故事
     * </pre>
     */
    public static final int INSTANCE_STORY_VALUE = 1;
    /**
     * <code>INSTANCE_HOLE = 2;</code>
     *
     * <pre>
     * 洞
     * </pre>
     */
    public static final int INSTANCE_HOLE_VALUE = 2;
    /**
     * <code>INSTANCE_TOWER = 3;</code>
     *
     * <pre>
     * 塔
     * </pre>
     */
    public static final int INSTANCE_TOWER_VALUE = 3;
    /**
     * <code>INSTANCE_GUILD = 4;</code>
     *
     * <pre>
     * 公会
     * </pre>
     */
    public static final int INSTANCE_GUILD_VALUE = 4;


    public final int getNumber() { return value; }

    public static InstanceType valueOf(int value) {
      switch (value) {
        case 1: return INSTANCE_STORY;
        case 2: return INSTANCE_HOLE;
        case 3: return INSTANCE_TOWER;
        case 4: return INSTANCE_GUILD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InstanceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<InstanceType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InstanceType>() {
            public InstanceType findValueByNumber(int number) {
              return InstanceType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(20);
    }

    private static final InstanceType[] VALUES = values();

    public static InstanceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private InstanceType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:InstanceType)
  }

  /**
   * Protobuf enum {@code SpellType}
   *
   * <pre>
   * 技能类型
   * </pre>
   */
  public enum SpellType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Spell_Type_PhyAttack = 0;</code>
     */
    Spell_Type_PhyAttack(0, 0),
    /**
     * <code>Spell_Type_MgicAttack = 1;</code>
     */
    Spell_Type_MgicAttack(1, 1),
    /**
     * <code>Spell_Type_Cure = 2;</code>
     */
    Spell_Type_Cure(2, 2),
    /**
     * <code>Spell_Type_Defense = 3;</code>
     */
    Spell_Type_Defense(3, 3),
    /**
     * <code>Spell_Type_Passive = 4;</code>
     */
    Spell_Type_Passive(4, 4),
    /**
     * <code>Spell_Type_Beneficial = 5;</code>
     */
    Spell_Type_Beneficial(5, 5),
    /**
     * <code>Spell_Type_Negative = 6;</code>
     */
    Spell_Type_Negative(6, 6),
    /**
     * <code>Spell_Type_Lazy = 7;</code>
     */
    Spell_Type_Lazy(7, 7),
    /**
     * <code>Spell_Type_PhyDaZhao = 8;</code>
     */
    Spell_Type_PhyDaZhao(8, 8),
    /**
     * <code>Spell_Type_MagicDazhao = 9;</code>
     */
    Spell_Type_MagicDazhao(9, 9),
    /**
     * <code>Spell_Type_PrepareDazhao = 10;</code>
     */
    Spell_Type_PrepareDazhao(10, 10),
    /**
     * <code>Spell_Type_Dot = 11;</code>
     */
    Spell_Type_Dot(11, 11),
    /**
     * <code>Spell_Type_Hot = 12;</code>
     */
    Spell_Type_Hot(12, 12),
    /**
     * <code>Num_Spell_Type = 13;</code>
     */
    Num_Spell_Type(13, 13),
    ;

    /**
     * <code>Spell_Type_PhyAttack = 0;</code>
     */
    public static final int Spell_Type_PhyAttack_VALUE = 0;
    /**
     * <code>Spell_Type_MgicAttack = 1;</code>
     */
    public static final int Spell_Type_MgicAttack_VALUE = 1;
    /**
     * <code>Spell_Type_Cure = 2;</code>
     */
    public static final int Spell_Type_Cure_VALUE = 2;
    /**
     * <code>Spell_Type_Defense = 3;</code>
     */
    public static final int Spell_Type_Defense_VALUE = 3;
    /**
     * <code>Spell_Type_Passive = 4;</code>
     */
    public static final int Spell_Type_Passive_VALUE = 4;
    /**
     * <code>Spell_Type_Beneficial = 5;</code>
     */
    public static final int Spell_Type_Beneficial_VALUE = 5;
    /**
     * <code>Spell_Type_Negative = 6;</code>
     */
    public static final int Spell_Type_Negative_VALUE = 6;
    /**
     * <code>Spell_Type_Lazy = 7;</code>
     */
    public static final int Spell_Type_Lazy_VALUE = 7;
    /**
     * <code>Spell_Type_PhyDaZhao = 8;</code>
     */
    public static final int Spell_Type_PhyDaZhao_VALUE = 8;
    /**
     * <code>Spell_Type_MagicDazhao = 9;</code>
     */
    public static final int Spell_Type_MagicDazhao_VALUE = 9;
    /**
     * <code>Spell_Type_PrepareDazhao = 10;</code>
     */
    public static final int Spell_Type_PrepareDazhao_VALUE = 10;
    /**
     * <code>Spell_Type_Dot = 11;</code>
     */
    public static final int Spell_Type_Dot_VALUE = 11;
    /**
     * <code>Spell_Type_Hot = 12;</code>
     */
    public static final int Spell_Type_Hot_VALUE = 12;
    /**
     * <code>Num_Spell_Type = 13;</code>
     */
    public static final int Num_Spell_Type_VALUE = 13;


    public final int getNumber() { return value; }

    public static SpellType valueOf(int value) {
      switch (value) {
        case 0: return Spell_Type_PhyAttack;
        case 1: return Spell_Type_MgicAttack;
        case 2: return Spell_Type_Cure;
        case 3: return Spell_Type_Defense;
        case 4: return Spell_Type_Passive;
        case 5: return Spell_Type_Beneficial;
        case 6: return Spell_Type_Negative;
        case 7: return Spell_Type_Lazy;
        case 8: return Spell_Type_PhyDaZhao;
        case 9: return Spell_Type_MagicDazhao;
        case 10: return Spell_Type_PrepareDazhao;
        case 11: return Spell_Type_Dot;
        case 12: return Spell_Type_Hot;
        case 13: return Num_Spell_Type;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SpellType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SpellType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpellType>() {
            public SpellType findValueByNumber(int number) {
              return SpellType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(21);
    }

    private static final SpellType[] VALUES = values();

    public static SpellType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SpellType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SpellType)
  }

  /**
   * Protobuf enum {@code MonsterState}
   *
   * <pre>
   * 宠物锁定状态
   * </pre>
   */
  public enum MonsterState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOCKED = 1;</code>
     */
    LOCKED(0, 1),
    /**
     * <code>IN_ALLIANCE_BASE = 2;</code>
     */
    IN_ALLIANCE_BASE(1, 2),
    /**
     * <code>IN_ADVENTURE = 4;</code>
     */
    IN_ADVENTURE(2, 4),
    ;

    /**
     * <code>LOCKED = 1;</code>
     */
    public static final int LOCKED_VALUE = 1;
    /**
     * <code>IN_ALLIANCE_BASE = 2;</code>
     */
    public static final int IN_ALLIANCE_BASE_VALUE = 2;
    /**
     * <code>IN_ADVENTURE = 4;</code>
     */
    public static final int IN_ADVENTURE_VALUE = 4;


    public final int getNumber() { return value; }

    public static MonsterState valueOf(int value) {
      switch (value) {
        case 1: return LOCKED;
        case 2: return IN_ALLIANCE_BASE;
        case 4: return IN_ADVENTURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MonsterState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MonsterState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MonsterState>() {
            public MonsterState findValueByNumber(int number) {
              return MonsterState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(22);
    }

    private static final MonsterState[] VALUES = values();

    public static MonsterState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MonsterState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MonsterState)
  }

  /**
   * Protobuf enum {@code SummonType}
   */
  public enum SummonType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUMMON_COIN = 1;</code>
     */
    SUMMON_COIN(0, 1),
    /**
     * <code>SUMMON_DIAMOND = 2;</code>
     */
    SUMMON_DIAMOND(1, 2),
    /**
     * <code>SUMMON_COIN_FREE = 3;</code>
     */
    SUMMON_COIN_FREE(2, 3),
    /**
     * <code>SUMMON_DIAMOND_FREE = 4;</code>
     */
    SUMMON_DIAMOND_FREE(3, 4),
    ;

    /**
     * <code>SUMMON_COIN = 1;</code>
     */
    public static final int SUMMON_COIN_VALUE = 1;
    /**
     * <code>SUMMON_DIAMOND = 2;</code>
     */
    public static final int SUMMON_DIAMOND_VALUE = 2;
    /**
     * <code>SUMMON_COIN_FREE = 3;</code>
     */
    public static final int SUMMON_COIN_FREE_VALUE = 3;
    /**
     * <code>SUMMON_DIAMOND_FREE = 4;</code>
     */
    public static final int SUMMON_DIAMOND_FREE_VALUE = 4;


    public final int getNumber() { return value; }

    public static SummonType valueOf(int value) {
      switch (value) {
        case 1: return SUMMON_COIN;
        case 2: return SUMMON_DIAMOND;
        case 3: return SUMMON_COIN_FREE;
        case 4: return SUMMON_DIAMOND_FREE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SummonType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SummonType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SummonType>() {
            public SummonType findValueByNumber(int number) {
              return SummonType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hawk.game.protocol.Const.getDescriptor().getEnumTypes().get(23);
    }

    private static final SummonType[] VALUES = values();

    public static SummonType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SummonType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SummonType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024Protocol/Const.proto*C\n\010chatType\022\016\n\nCH" +
      "AT_WORLD\020\001\022\022\n\016CHAT_BROADCAST\020\002\022\023\n\017WORLD_" +
      "BROADCAST\020\003*v\n\nkickReason\022\023\n\017DUPLICATE_L" +
      "OGIN\020\001\022\023\n\017SERVER_SHUTDOWN\020\002\022\022\n\016LOGIN_FOR" +
      "BIDEN\020\003\022\016\n\nKICKED_OUT\020\004\022\022\n\016SERVER_RESTAR" +
      "T\020\005\022\006\n\002GM\020\006*L\n\014RewardReason\022\017\n\013SYS_PRESE" +
      "NT\020\001\022\007\n\003NPC\020\002\022\t\n\005QUEST\020\003\022\014\n\010ACITVITY\020\004\022\t" +
      "\n\005CATCH\020\005*.\n\tClassType\022\017\n\013PLAYER_TYPE\020\001\022" +
      "\020\n\014MONSTER_TYPE\020\002*t\n\010itemType\022\r\n\tNONE_IT" +
      "EM\020\000\022\017\n\013PLAYER_ATTR\020\001\022\020\n\014MONSTER_ATTR\020\002\022",
      "\010\n\004ITEM\020\003\022\t\n\005EQUIP\020\004\022\t\n\005SKILL\020\005\022\t\n\005GROUP" +
      "\020\006\022\013\n\007MONSTER\020\007*e\n\tmoneyType\022\016\n\nMONEY_GO" +
      "LD\020\001\022\016\n\nMONEY_COIN\020\002\022\030\n\024ALLIANCE_COTRIBU" +
      "TION\020\003\022\016\n\nTOWER_COIN\020\004\022\016\n\nARENA_COIN\020\005*\227" +
      "\002\n\nchangeType\022\017\n\013CHANGE_GOLD\020\001\022\017\n\013CHANGE" +
      "_COIN\020\002\022\025\n\021CHANGE_PLAYER_EXP\020\003\022\027\n\023CHANGE" +
      "_PLAYER_LEVEL\020\004\022\026\n\022CHANGE_MONSTER_EXP\020\005\022" +
      "\030\n\024CHANGE_MONSTER_LEVEL\020\006\022\022\n\016CHANGE_FATI" +
      "GUE\020\007\022\016\n\nCHANGE_FAV\020\010\022\023\n\017CHANGE_GOLD_BUY" +
      "\020\t\022\036\n\032CHANGE_PLAYER_CONTRIBUTION\020\n\022\025\n\021CH",
      "ANGE_TOWER_COIN\020\013\022\025\n\021CHANGE_ARENA_COIN\020\014" +
      "*\365\001\n\004attr\022\r\n\tEMPTYATTR\020\000\022\014\n\010STRENGHT\020\001\022\020" +
      "\n\014INTELLIGENCE\020\002\022\t\n\005SPEED\020\003\022\013\n\007DEFENSE\020\004" +
      "\022\n\n\006HEALTH\020\005\022\021\n\rDEFENSEWEAKEN\020e\022\014\n\010CRITI" +
      "CAL\020f\022\022\n\016CRITICALWEAKEN\020g\022\014\n\010RECOVERY\020h\022" +
      "\022\n\016CRITICALDAMAGE\020i\022\013\n\007HITRATE\020j\022\020\n\014CURE" +
      "INCREASE\020k\022\020\n\014DAMAGEREDUCE\020l\022\022\n\016DAMAGEIN" +
      "CREASE\020m*+\n\ruserCondition\022\n\n\006BATTLE\020\001\022\016\n" +
      "\nNON_BATTLE\020\002*5\n\010bindType\022\014\n\010NON_BIND\020\001\022" +
      "\014\n\010USE_BIND\020\002\022\r\n\tTAKE_BIND\020\003*b\n\010toolType",
      "\022\016\n\nCOMMONTOOL\020\001\022\020\n\014FRAGMENTTOOL\020\002\022\013\n\007GE" +
      "MTOOL\020\003\022\013\n\007BOXTOOL\020\004\022\013\n\007USETOOL\020\005\022\r\n\tEQU" +
      "IPTOOL\020\007*.\n\013FragSubType\022\020\n\014FRAG_MONSTER\020" +
      "\001\022\r\n\tFRAG_TOOL\020\002*p\n\016UseToolSubType\022\016\n\nUS" +
      "ETOOLEXP\020\001\022\024\n\020USETOOLDOUBLEEXP\020\002\022\024\n\020USET" +
      "OOLTRIPLEEXP\020\003\022\022\n\016USETOOLFATIGUE\020\004\022\016\n\nRA" +
      "IDTICKET\020\005*\204\001\n\tequipPart\022\n\n\006HELMET\020\001\022\010\n\004" +
      "RING\020\002\022\010\n\004BELT\020\003\022\013\n\007CUIRASS\020\004\022\013\n\007WEAPON1" +
      "\020\005\022\013\n\007WEAPON2\020\006\022\014\n\010LEGGUARD\020\007\022\t\n\005SHOES\020\010" +
      "\022\t\n\005GLOVE\020\t\022\014\n\010NECKLACE\020\n*O\n\014equipQualit",
      "y\022\t\n\005WHITE\020\001\022\t\n\005GREEN\020\002\022\010\n\004BLUE\020\003\022\n\n\006PUR" +
      "PLE\020\004\022\n\n\006ORANGE\020\005\022\007\n\003RED\020\006*;\n\010shopType\022\016" +
      "\n\nNORMALSHOP\020\001\022\r\n\tTOWERSHOP\020\002\022\020\n\014ALLIANC" +
      "ESHOP\020\003*H\n\tmailState\022\n\n\006UNREAD\020\001\022\010\n\004READ" +
      "\020\002\022\013\n\007RECEIVE\020\003\022\014\n\010OVERFLOW\020\004\022\n\n\006DELETE\020" +
      "\005*7\n\006ImType\022\010\n\004CHAT\020\001\022\013\n\007LANTERN\020\002\022\n\n\006PR" +
      "OMPT\020\003\022\n\n\006NOTICE\020\004*-\n\tImChannel\022\n\n\006PERSO" +
      "N\020\001\022\t\n\005WORLD\020\002\022\t\n\005GUILD\020\003*<\n\017ChapterBoxS" +
      "tate\022\024\n\007INVALID\020\377\377\377\377\377\377\377\377\377\001\022\t\n\005VALID\020\000\022\010\n" +
      "\004OPEN\020\001*]\n\014InstanceType\022\022\n\016INSTANCE_STOR",
      "Y\020\001\022\021\n\rINSTANCE_HOLE\020\002\022\022\n\016INSTANCE_TOWER" +
      "\020\003\022\022\n\016INSTANCE_GUILD\020\004*\336\002\n\tSpellType\022\030\n\024" +
      "Spell_Type_PhyAttack\020\000\022\031\n\025Spell_Type_Mgi" +
      "cAttack\020\001\022\023\n\017Spell_Type_Cure\020\002\022\026\n\022Spell_" +
      "Type_Defense\020\003\022\026\n\022Spell_Type_Passive\020\004\022\031" +
      "\n\025Spell_Type_Beneficial\020\005\022\027\n\023Spell_Type_" +
      "Negative\020\006\022\023\n\017Spell_Type_Lazy\020\007\022\030\n\024Spell" +
      "_Type_PhyDaZhao\020\010\022\032\n\026Spell_Type_MagicDaz" +
      "hao\020\t\022\034\n\030Spell_Type_PrepareDazhao\020\n\022\022\n\016S" +
      "pell_Type_Dot\020\013\022\022\n\016Spell_Type_Hot\020\014\022\022\n\016N",
      "um_Spell_Type\020\r*B\n\014MonsterState\022\n\n\006LOCKE" +
      "D\020\001\022\024\n\020IN_ALLIANCE_BASE\020\002\022\020\n\014IN_ADVENTUR" +
      "E\020\004*`\n\nSummonType\022\017\n\013SUMMON_COIN\020\001\022\022\n\016SU" +
      "MMON_DIAMOND\020\002\022\024\n\020SUMMON_COIN_FREE\020\003\022\027\n\023" +
      "SUMMON_DIAMOND_FREE\020\004B\030\n\026com.hawk.game.p" +
      "rotocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
