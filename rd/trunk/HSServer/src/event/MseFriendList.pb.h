// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MseFriendList.proto

#ifndef PROTOBUF_MseFriendList_2eproto__INCLUDED
#define PROTOBUF_MseFriendList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MseFriendList_2eproto();
void protobuf_AssignDesc_MseFriendList_2eproto();
void protobuf_ShutdownFile_MseFriendList_2eproto();

class MseFriendList;

// ===================================================================

class MseFriendList : public ::google::protobuf::Message {
 public:
  MseFriendList();
  virtual ~MseFriendList();

  MseFriendList(const MseFriendList& from);

  inline MseFriendList& operator=(const MseFriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MseFriendList& default_instance();

  void Swap(MseFriendList* other);

  // implements Message ----------------------------------------------

  inline MseFriendList* New() const { return New(NULL); }

  MseFriendList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MseFriendList& from);
  void MergeFrom(const MseFriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MseFriendList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string JsonResult = 4;
  bool has_jsonresult() const;
  void clear_jsonresult();
  static const int kJsonResultFieldNumber = 4;
  const ::std::string& jsonresult() const;
  void set_jsonresult(const ::std::string& value);
  void set_jsonresult(const char* value);
  void set_jsonresult(const char* value, size_t size);
  ::std::string* mutable_jsonresult();
  ::std::string* release_jsonresult();
  void set_allocated_jsonresult(::std::string* jsonresult);

  // optional int32 err = 5;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 5;
  ::google::protobuf::int32 err() const;
  void set_err(::google::protobuf::int32 value);

  // optional string dbm = 6;
  bool has_dbm() const;
  void clear_dbm();
  static const int kDbmFieldNumber = 6;
  const ::std::string& dbm() const;
  void set_dbm(const ::std::string& value);
  void set_dbm(const char* value);
  void set_dbm(const char* value, size_t size);
  ::std::string* mutable_dbm();
  ::std::string* release_dbm();
  void set_allocated_dbm(::std::string* dbm);

  // @@protoc_insertion_point(class_scope:MseFriendList)
 private:
  inline void set_has_jsonresult();
  inline void clear_has_jsonresult();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_dbm();
  inline void clear_has_dbm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr jsonresult_;
  ::google::protobuf::internal::ArenaStringPtr dbm_;
  ::google::protobuf::int32 err_;
  friend void  protobuf_AddDesc_MseFriendList_2eproto();
  friend void protobuf_AssignDesc_MseFriendList_2eproto();
  friend void protobuf_ShutdownFile_MseFriendList_2eproto();

  void InitAsDefaultInstance();
  static MseFriendList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MseFriendList

// optional string JsonResult = 4;
inline bool MseFriendList::has_jsonresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MseFriendList::set_has_jsonresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MseFriendList::clear_has_jsonresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MseFriendList::clear_jsonresult() {
  jsonresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jsonresult();
}
inline const ::std::string& MseFriendList::jsonresult() const {
  // @@protoc_insertion_point(field_get:MseFriendList.JsonResult)
  return jsonresult_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFriendList::set_jsonresult(const ::std::string& value) {
  set_has_jsonresult();
  jsonresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseFriendList.JsonResult)
}
inline void MseFriendList::set_jsonresult(const char* value) {
  set_has_jsonresult();
  jsonresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseFriendList.JsonResult)
}
inline void MseFriendList::set_jsonresult(const char* value, size_t size) {
  set_has_jsonresult();
  jsonresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseFriendList.JsonResult)
}
inline ::std::string* MseFriendList::mutable_jsonresult() {
  set_has_jsonresult();
  // @@protoc_insertion_point(field_mutable:MseFriendList.JsonResult)
  return jsonresult_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MseFriendList::release_jsonresult() {
  clear_has_jsonresult();
  return jsonresult_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFriendList::set_allocated_jsonresult(::std::string* jsonresult) {
  if (jsonresult != NULL) {
    set_has_jsonresult();
  } else {
    clear_has_jsonresult();
  }
  jsonresult_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsonresult);
  // @@protoc_insertion_point(field_set_allocated:MseFriendList.JsonResult)
}

// optional int32 err = 5;
inline bool MseFriendList::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MseFriendList::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MseFriendList::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MseFriendList::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 MseFriendList::err() const {
  // @@protoc_insertion_point(field_get:MseFriendList.err)
  return err_;
}
inline void MseFriendList::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MseFriendList.err)
}

// optional string dbm = 6;
inline bool MseFriendList::has_dbm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MseFriendList::set_has_dbm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MseFriendList::clear_has_dbm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MseFriendList::clear_dbm() {
  dbm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dbm();
}
inline const ::std::string& MseFriendList::dbm() const {
  // @@protoc_insertion_point(field_get:MseFriendList.dbm)
  return dbm_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFriendList::set_dbm(const ::std::string& value) {
  set_has_dbm();
  dbm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseFriendList.dbm)
}
inline void MseFriendList::set_dbm(const char* value) {
  set_has_dbm();
  dbm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseFriendList.dbm)
}
inline void MseFriendList::set_dbm(const char* value, size_t size) {
  set_has_dbm();
  dbm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseFriendList.dbm)
}
inline ::std::string* MseFriendList::mutable_dbm() {
  set_has_dbm();
  // @@protoc_insertion_point(field_mutable:MseFriendList.dbm)
  return dbm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MseFriendList::release_dbm() {
  clear_has_dbm();
  return dbm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFriendList::set_allocated_dbm(::std::string* dbm) {
  if (dbm != NULL) {
    set_has_dbm();
  } else {
    clear_has_dbm();
  }
  dbm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbm);
  // @@protoc_insertion_point(field_set_allocated:MseFriendList.dbm)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MseFriendList_2eproto__INCLUDED
