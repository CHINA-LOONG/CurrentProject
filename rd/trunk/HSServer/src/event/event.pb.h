// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#ifndef PROTOBUF_event_2eproto__INCLUDED
#define PROTOBUF_event_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MceActionInfo.pb.h"
#include "MceGatewayFunction.pb.h"
#include "MceHeartbeat.pb.h"
#include "MseActionInfo.pb.h"
#include "MseAuthState.pb.h"
#include "MseFriendList.pb.h"
#include "MseFuncSwich.pb.h"
#include "MseGatewayFunction.pb.h"
#include "MseRank.pb.h"
#include "FriendInfoLite.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_event_2eproto();
void protobuf_AssignDesc_event_2eproto();
void protobuf_ShutdownFile_event_2eproto();

class CenterLogicValue;
class UserLogin_Req;
class UserLogin_Rsp;
class WG_UserLeave;
class WorkingStatus_Req;
class UserAuth_Req;
class UserAuth_Rsp;
class SendRemoteUser_Req;
class HallEnterRoom;
class BeLottery;
class BeUpdateWinInfo;
class BeUpdateExp;
class BeUpdateTool;
class DpNormalResult;
class GWG_FriendRequest;
class ForwardInfo;
class WebFreeGift;
class WebAskFor;
class WebGiveFor;
class WebInvite;
class Invite;
class FriendRecallMsg;
class MultiLevelFriendPoint;
class TalentShow;
class TalentShowList;
class FriendSendGift;
class FortuneSteal;
class ChiefVote;
class LotteryTimer;
class BeUpdateBattleCnt;
class Admin_AddExp_Req;
class Admin_AddExp_Rsp;
class Admin_AddGold_Req;
class Admin_AddGold_Rsp;
class Admin_Clear_Req;
class Admin_Clear_Rsp;
class Admin_SetVal_Req;
class Admin_SetVal_Rsp;
class Admin_SetLevel_Req;
class Admin_SetLevel_Rsp;
class Admin_AddProp_Req;
class Admin_AddProp_Rsp;
class Admin_SetEquip_Req;
class Admin_SetEquip_Rsp;
class Admin_UserInfo_Req;
class Admin_UserInfo_Rsp;
class Admin_AddGuest_Req;
class Admin_AddGuest_Rsp;
class Admin_SetPublicPraise_Req;
class Admin_SetPublicPraise_Rsp;
class Admin_DelGoods_Req;
class Admin_DelGoods_Rsp;
class Admin_AddGoods_Req;
class Admin_AddGoods_Rsp;
class Admin_Common_Req;
class Admin_Common_Rsp;
class Admin_DelProp_Req;
class Admin_DelProp_Rsp;
class Admin_RunTask_Req;
class Admin_RunTask_Rsp;
class Admin_BroadCast_Req;
class Admin_BroadCast_Rsp;
class FluentPriceItem;
class Admin_FluentPrice_Req;
class Admin_FluentPrice_Rsp;
class Admin_StatisticsOnLinePeople_Req;
class Admin_StatisticsOnLinePeople_Rsp;
class Admin_KickPlayer_Req;
class Admin_KickPlayer_Rsp;
class Admin_STR_Req;
class Admin_STR_Rsp;
class WebUnlock;
class WebAddEmployee;
class WebBuyDetail;
class WebBuy;
class WebBuy3;
class WebLengthenIndateDetail;
class WebLengthenIndate;
class WebCheckBandCoin;
class WebBuyCfm;
class Admin_BanChat_Req;
class Admin_BanChat_Rsp;
class Admin_BanLogin_Req;
class Admin_BanLogin_Rsp;
class Admin_AddPoint_Req;
class Admin_AddPoint_Rsp;
class Admin_AddIndate_Req;
class Admin_AddIndate_Rsp;
class Admin_FreshUser_Req;
class Admin_FreshUser_Rsp;
class Admin_AddMedal_Req;
class Admin_AddMedal_Rsp;
class Admin_Reload_Req;
class Admin_Reload_Rsp;
class UpdateGuestNumber;
class QQUnionCheckKey;
class QQUnionCheckOpenId;
class QQUnionAddItem;
class Wap_Str_Request;
class Wap_Str_Response;
class HttpRequestV3;
class SimpleMarkUser;
class InviteFriendLvlSucc;
class Event;

// ===================================================================

class CenterLogicValue : public ::google::protobuf::Message {
 public:
  CenterLogicValue();
  virtual ~CenterLogicValue();

  CenterLogicValue(const CenterLogicValue& from);

  inline CenterLogicValue& operator=(const CenterLogicValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterLogicValue& default_instance();

  void Swap(CenterLogicValue* other);

  // implements Message ----------------------------------------------

  inline CenterLogicValue* New() const { return New(NULL); }

  CenterLogicValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterLogicValue& from);
  void MergeFrom(const CenterLogicValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CenterLogicValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional int32 oper = 3;
  bool has_oper() const;
  void clear_oper();
  static const int kOperFieldNumber = 3;
  ::google::protobuf::int32 oper() const;
  void set_oper(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CenterLogicValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_oper();
  inline void clear_has_oper();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 oper_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static CenterLogicValue* default_instance_;
};
// -------------------------------------------------------------------

class UserLogin_Req : public ::google::protobuf::Message {
 public:
  UserLogin_Req();
  virtual ~UserLogin_Req();

  UserLogin_Req(const UserLogin_Req& from);

  inline UserLogin_Req& operator=(const UserLogin_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLogin_Req& default_instance();

  void Swap(UserLogin_Req* other);

  // implements Message ----------------------------------------------

  inline UserLogin_Req* New() const { return New(NULL); }

  UserLogin_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLogin_Req& from);
  void MergeFrom(const UserLogin_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserLogin_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 siteid = 1;
  bool has_siteid() const;
  void clear_siteid();
  static const int kSiteidFieldNumber = 1;
  ::google::protobuf::int32 siteid() const;
  void set_siteid(::google::protobuf::int32 value);

  // required string platform_id = 2;
  bool has_platform_id() const;
  void clear_platform_id();
  static const int kPlatformIdFieldNumber = 2;
  const ::std::string& platform_id() const;
  void set_platform_id(const ::std::string& value);
  void set_platform_id(const char* value);
  void set_platform_id(const char* value, size_t size);
  ::std::string* mutable_platform_id();
  ::std::string* release_platform_id();
  void set_allocated_platform_id(::std::string* platform_id);

  // required string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string profile_link = 4;
  bool has_profile_link() const;
  void clear_profile_link();
  static const int kProfileLinkFieldNumber = 4;
  const ::std::string& profile_link() const;
  void set_profile_link(const ::std::string& value);
  void set_profile_link(const char* value);
  void set_profile_link(const char* value, size_t size);
  ::std::string* mutable_profile_link();
  ::std::string* release_profile_link();
  void set_allocated_profile_link(::std::string* profile_link);

  // required int32 gender = 5;
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 5;
  ::google::protobuf::int32 gender() const;
  void set_gender(::google::protobuf::int32 value);

  // required bool is_yellow_dmd = 6;
  bool has_is_yellow_dmd() const;
  void clear_is_yellow_dmd();
  static const int kIsYellowDmdFieldNumber = 6;
  bool is_yellow_dmd() const;
  void set_is_yellow_dmd(bool value);

  // required bool is_yellow_dmd_year = 7;
  bool has_is_yellow_dmd_year() const;
  void clear_is_yellow_dmd_year();
  static const int kIsYellowDmdYearFieldNumber = 7;
  bool is_yellow_dmd_year() const;
  void set_is_yellow_dmd_year(bool value);

  // required int32 yellow_dmd_lv = 8;
  bool has_yellow_dmd_lv() const;
  void clear_yellow_dmd_lv();
  static const int kYellowDmdLvFieldNumber = 8;
  ::google::protobuf::int32 yellow_dmd_lv() const;
  void set_yellow_dmd_lv(::google::protobuf::int32 value);

  // repeated string friends_platid = 9;
  int friends_platid_size() const;
  void clear_friends_platid();
  static const int kFriendsPlatidFieldNumber = 9;
  const ::std::string& friends_platid(int index) const;
  ::std::string* mutable_friends_platid(int index);
  void set_friends_platid(int index, const ::std::string& value);
  void set_friends_platid(int index, const char* value);
  void set_friends_platid(int index, const char* value, size_t size);
  ::std::string* add_friends_platid();
  void add_friends_platid(const ::std::string& value);
  void add_friends_platid(const char* value);
  void add_friends_platid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& friends_platid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_friends_platid();

  // required int32 webfd = 10;
  bool has_webfd() const;
  void clear_webfd();
  static const int kWebfdFieldNumber = 10;
  ::google::protobuf::int32 webfd() const;
  void set_webfd(::google::protobuf::int32 value);

  // required int32 sid = 11;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 11;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // optional string open_key = 12;
  bool has_open_key() const;
  void clear_open_key();
  static const int kOpenKeyFieldNumber = 12;
  const ::std::string& open_key() const;
  void set_open_key(const ::std::string& value);
  void set_open_key(const char* value);
  void set_open_key(const char* value, size_t size);
  ::std::string* mutable_open_key();
  ::std::string* release_open_key();
  void set_allocated_open_key(::std::string* open_key);

  // optional int32 register_type = 13;
  bool has_register_type() const;
  void clear_register_type();
  static const int kRegisterTypeFieldNumber = 13;
  ::google::protobuf::int32 register_type() const;
  void set_register_type(::google::protobuf::int32 value);

  // optional string action_from = 14;
  bool has_action_from() const;
  void clear_action_from();
  static const int kActionFromFieldNumber = 14;
  const ::std::string& action_from() const;
  void set_action_from(const ::std::string& value);
  void set_action_from(const char* value);
  void set_action_from(const char* value, size_t size);
  ::std::string* mutable_action_from();
  ::std::string* release_action_from();
  void set_allocated_action_from(::std::string* action_from);

  // optional string device_from = 15;
  bool has_device_from() const;
  void clear_device_from();
  static const int kDeviceFromFieldNumber = 15;
  const ::std::string& device_from() const;
  void set_device_from(const ::std::string& value);
  void set_device_from(const char* value);
  void set_device_from(const char* value, size_t size);
  ::std::string* mutable_device_from();
  ::std::string* release_device_from();
  void set_allocated_device_from(::std::string* device_from);

  // @@protoc_insertion_point(class_scope:UserLogin_Req)
 private:
  inline void set_has_siteid();
  inline void clear_has_siteid();
  inline void set_has_platform_id();
  inline void clear_has_platform_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_profile_link();
  inline void clear_has_profile_link();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_is_yellow_dmd();
  inline void clear_has_is_yellow_dmd();
  inline void set_has_is_yellow_dmd_year();
  inline void clear_has_is_yellow_dmd_year();
  inline void set_has_yellow_dmd_lv();
  inline void clear_has_yellow_dmd_lv();
  inline void set_has_webfd();
  inline void clear_has_webfd();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_open_key();
  inline void clear_has_open_key();
  inline void set_has_register_type();
  inline void clear_has_register_type();
  inline void set_has_action_from();
  inline void clear_has_action_from();
  inline void set_has_device_from();
  inline void clear_has_device_from();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 siteid_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::internal::ArenaStringPtr profile_link_;
  bool is_yellow_dmd_;
  bool is_yellow_dmd_year_;
  ::google::protobuf::int32 yellow_dmd_lv_;
  ::google::protobuf::RepeatedPtrField< ::std::string> friends_platid_;
  ::google::protobuf::int32 webfd_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::internal::ArenaStringPtr open_key_;
  ::google::protobuf::internal::ArenaStringPtr action_from_;
  ::google::protobuf::internal::ArenaStringPtr device_from_;
  ::google::protobuf::int32 register_type_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static UserLogin_Req* default_instance_;
};
// -------------------------------------------------------------------

class UserLogin_Rsp : public ::google::protobuf::Message {
 public:
  UserLogin_Rsp();
  virtual ~UserLogin_Rsp();

  UserLogin_Rsp(const UserLogin_Rsp& from);

  inline UserLogin_Rsp& operator=(const UserLogin_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLogin_Rsp& default_instance();

  void Swap(UserLogin_Rsp* other);

  // implements Message ----------------------------------------------

  inline UserLogin_Rsp* New() const { return New(NULL); }

  UserLogin_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLogin_Rsp& from);
  void MergeFrom(const UserLogin_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserLogin_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required string secret = 2;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // required string server = 3;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 3;
  const ::std::string& server() const;
  void set_server(const ::std::string& value);
  void set_server(const char* value);
  void set_server(const char* value, size_t size);
  ::std::string* mutable_server();
  ::std::string* release_server();
  void set_allocated_server(::std::string* server);

  // required int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // required int32 webfd = 5;
  bool has_webfd() const;
  void clear_webfd();
  static const int kWebfdFieldNumber = 5;
  ::google::protobuf::int32 webfd() const;
  void set_webfd(::google::protobuf::int32 value);

  // required int32 sid = 6;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 6;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // optional string argv = 7;
  bool has_argv() const;
  void clear_argv();
  static const int kArgvFieldNumber = 7;
  const ::std::string& argv() const;
  void set_argv(const ::std::string& value);
  void set_argv(const char* value);
  void set_argv(const char* value, size_t size);
  ::std::string* mutable_argv();
  ::std::string* release_argv();
  void set_allocated_argv(::std::string* argv);

  // @@protoc_insertion_point(class_scope:UserLogin_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_secret();
  inline void clear_has_secret();
  inline void set_has_server();
  inline void clear_has_server();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_webfd();
  inline void clear_has_webfd();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_argv();
  inline void clear_has_argv();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::google::protobuf::internal::ArenaStringPtr server_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 webfd_;
  ::google::protobuf::internal::ArenaStringPtr argv_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static UserLogin_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class WG_UserLeave : public ::google::protobuf::Message {
 public:
  WG_UserLeave();
  virtual ~WG_UserLeave();

  WG_UserLeave(const WG_UserLeave& from);

  inline WG_UserLeave& operator=(const WG_UserLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WG_UserLeave& default_instance();

  void Swap(WG_UserLeave* other);

  // implements Message ----------------------------------------------

  inline WG_UserLeave* New() const { return New(NULL); }

  WG_UserLeave* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WG_UserLeave& from);
  void MergeFrom(const WG_UserLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WG_UserLeave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fd = 1;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 1;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WG_UserLeave)
 private:
  inline void set_has_fd();
  inline void clear_has_fd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 fd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WG_UserLeave* default_instance_;
};
// -------------------------------------------------------------------

class WorkingStatus_Req : public ::google::protobuf::Message {
 public:
  WorkingStatus_Req();
  virtual ~WorkingStatus_Req();

  WorkingStatus_Req(const WorkingStatus_Req& from);

  inline WorkingStatus_Req& operator=(const WorkingStatus_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkingStatus_Req& default_instance();

  void Swap(WorkingStatus_Req* other);

  // implements Message ----------------------------------------------

  inline WorkingStatus_Req* New() const { return New(NULL); }

  WorkingStatus_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkingStatus_Req& from);
  void MergeFrom(const WorkingStatus_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkingStatus_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required bool finish = 2;
  bool has_finish() const;
  void clear_finish();
  static const int kFinishFieldNumber = 2;
  bool finish() const;
  void set_finish(bool value);

  // @@protoc_insertion_point(class_scope:WorkingStatus_Req)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_finish();
  inline void clear_has_finish();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gid_;
  bool finish_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WorkingStatus_Req* default_instance_;
};
// -------------------------------------------------------------------

class UserAuth_Req : public ::google::protobuf::Message {
 public:
  UserAuth_Req();
  virtual ~UserAuth_Req();

  UserAuth_Req(const UserAuth_Req& from);

  inline UserAuth_Req& operator=(const UserAuth_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAuth_Req& default_instance();

  void Swap(UserAuth_Req* other);

  // implements Message ----------------------------------------------

  inline UserAuth_Req* New() const { return New(NULL); }

  UserAuth_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAuth_Req& from);
  void MergeFrom(const UserAuth_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserAuth_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int64 secret = 2;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  ::google::protobuf::int64 secret() const;
  void set_secret(::google::protobuf::int64 value);

  // required int32 sockfd = 3;
  bool has_sockfd() const;
  void clear_sockfd();
  static const int kSockfdFieldNumber = 3;
  ::google::protobuf::int32 sockfd() const;
  void set_sockfd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserAuth_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_secret();
  inline void clear_has_secret();
  inline void set_has_sockfd();
  inline void clear_has_sockfd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 secret_;
  ::google::protobuf::int32 sockfd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static UserAuth_Req* default_instance_;
};
// -------------------------------------------------------------------

class UserAuth_Rsp : public ::google::protobuf::Message {
 public:
  UserAuth_Rsp();
  virtual ~UserAuth_Rsp();

  UserAuth_Rsp(const UserAuth_Rsp& from);

  inline UserAuth_Rsp& operator=(const UserAuth_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAuth_Rsp& default_instance();

  void Swap(UserAuth_Rsp* other);

  // implements Message ----------------------------------------------

  inline UserAuth_Rsp* New() const { return New(NULL); }

  UserAuth_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAuth_Rsp& from);
  void MergeFrom(const UserAuth_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserAuth_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool pass = 1;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 1;
  bool pass() const;
  void set_pass(bool value);

  // @@protoc_insertion_point(class_scope:UserAuth_Rsp)
 private:
  inline void set_has_pass();
  inline void clear_has_pass();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool pass_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static UserAuth_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class SendRemoteUser_Req : public ::google::protobuf::Message {
 public:
  SendRemoteUser_Req();
  virtual ~SendRemoteUser_Req();

  SendRemoteUser_Req(const SendRemoteUser_Req& from);

  inline SendRemoteUser_Req& operator=(const SendRemoteUser_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendRemoteUser_Req& default_instance();

  void Swap(SendRemoteUser_Req* other);

  // implements Message ----------------------------------------------

  inline SendRemoteUser_Req* New() const { return New(NULL); }

  SendRemoteUser_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendRemoteUser_Req& from);
  void MergeFrom(const SendRemoteUser_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendRemoteUser_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // required string text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:SendRemoteUser_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_text();
  inline void clear_has_text();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 cmd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static SendRemoteUser_Req* default_instance_;
};
// -------------------------------------------------------------------

class HallEnterRoom : public ::google::protobuf::Message {
 public:
  HallEnterRoom();
  virtual ~HallEnterRoom();

  HallEnterRoom(const HallEnterRoom& from);

  inline HallEnterRoom& operator=(const HallEnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallEnterRoom& default_instance();

  void Swap(HallEnterRoom* other);

  // implements Message ----------------------------------------------

  inline HallEnterRoom* New() const { return New(NULL); }

  HallEnterRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HallEnterRoom& from);
  void MergeFrom(const HallEnterRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HallEnterRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HallEnterRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static HallEnterRoom* default_instance_;
};
// -------------------------------------------------------------------

class BeLottery : public ::google::protobuf::Message {
 public:
  BeLottery();
  virtual ~BeLottery();

  BeLottery(const BeLottery& from);

  inline BeLottery& operator=(const BeLottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeLottery& default_instance();

  void Swap(BeLottery* other);

  // implements Message ----------------------------------------------

  inline BeLottery* New() const { return New(NULL); }

  BeLottery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeLottery& from);
  void MergeFrom(const BeLottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeLottery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lottery = 1;
  bool has_lottery() const;
  void clear_lottery();
  static const int kLotteryFieldNumber = 1;
  ::google::protobuf::int32 lottery() const;
  void set_lottery(::google::protobuf::int32 value);

  // required int32 sign = 2;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 2;
  ::google::protobuf::int32 sign() const;
  void set_sign(::google::protobuf::int32 value);

  // required int32 lotteryLevel = 3;
  bool has_lotterylevel() const;
  void clear_lotterylevel();
  static const int kLotteryLevelFieldNumber = 3;
  ::google::protobuf::int32 lotterylevel() const;
  void set_lotterylevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BeLottery)
 private:
  inline void set_has_lottery();
  inline void clear_has_lottery();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_lotterylevel();
  inline void clear_has_lotterylevel();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 lottery_;
  ::google::protobuf::int32 sign_;
  ::google::protobuf::int32 lotterylevel_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static BeLottery* default_instance_;
};
// -------------------------------------------------------------------

class BeUpdateWinInfo : public ::google::protobuf::Message {
 public:
  BeUpdateWinInfo();
  virtual ~BeUpdateWinInfo();

  BeUpdateWinInfo(const BeUpdateWinInfo& from);

  inline BeUpdateWinInfo& operator=(const BeUpdateWinInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeUpdateWinInfo& default_instance();

  void Swap(BeUpdateWinInfo* other);

  // implements Message ----------------------------------------------

  inline BeUpdateWinInfo* New() const { return New(NULL); }

  BeUpdateWinInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeUpdateWinInfo& from);
  void MergeFrom(const BeUpdateWinInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeUpdateWinInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  bool wins() const;
  void set_wins(bool value);

  // required int32 killCount = 2;
  bool has_killcount() const;
  void clear_killcount();
  static const int kKillCountFieldNumber = 2;
  ::google::protobuf::int32 killcount() const;
  void set_killcount(::google::protobuf::int32 value);

  // optional uint32 battleMode = 3;
  bool has_battlemode() const;
  void clear_battlemode();
  static const int kBattleModeFieldNumber = 3;
  ::google::protobuf::uint32 battlemode() const;
  void set_battlemode(::google::protobuf::uint32 value);

  // optional uint32 roomType = 4;
  bool has_roomtype() const;
  void clear_roomtype();
  static const int kRoomTypeFieldNumber = 4;
  ::google::protobuf::uint32 roomtype() const;
  void set_roomtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BeUpdateWinInfo)
 private:
  inline void set_has_wins();
  inline void clear_has_wins();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_battlemode();
  inline void clear_has_battlemode();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool wins_;
  ::google::protobuf::int32 killcount_;
  ::google::protobuf::uint32 battlemode_;
  ::google::protobuf::uint32 roomtype_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static BeUpdateWinInfo* default_instance_;
};
// -------------------------------------------------------------------

class BeUpdateExp : public ::google::protobuf::Message {
 public:
  BeUpdateExp();
  virtual ~BeUpdateExp();

  BeUpdateExp(const BeUpdateExp& from);

  inline BeUpdateExp& operator=(const BeUpdateExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeUpdateExp& default_instance();

  void Swap(BeUpdateExp* other);

  // implements Message ----------------------------------------------

  inline BeUpdateExp* New() const { return New(NULL); }

  BeUpdateExp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeUpdateExp& from);
  void MergeFrom(const BeUpdateExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeUpdateExp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 expDeta = 1;
  bool has_expdeta() const;
  void clear_expdeta();
  static const int kExpDetaFieldNumber = 1;
  ::google::protobuf::int32 expdeta() const;
  void set_expdeta(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BeUpdateExp)
 private:
  inline void set_has_expdeta();
  inline void clear_has_expdeta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 expdeta_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static BeUpdateExp* default_instance_;
};
// -------------------------------------------------------------------

class BeUpdateTool : public ::google::protobuf::Message {
 public:
  BeUpdateTool();
  virtual ~BeUpdateTool();

  BeUpdateTool(const BeUpdateTool& from);

  inline BeUpdateTool& operator=(const BeUpdateTool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeUpdateTool& default_instance();

  void Swap(BeUpdateTool* other);

  // implements Message ----------------------------------------------

  inline BeUpdateTool* New() const { return New(NULL); }

  BeUpdateTool* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeUpdateTool& from);
  void MergeFrom(const BeUpdateTool& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeUpdateTool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // required int32 tool = 2;
  bool has_tool() const;
  void clear_tool();
  static const int kToolFieldNumber = 2;
  ::google::protobuf::int32 tool() const;
  void set_tool(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BeUpdateTool)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_tool();
  inline void clear_has_tool();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 tool_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static BeUpdateTool* default_instance_;
};
// -------------------------------------------------------------------

class DpNormalResult : public ::google::protobuf::Message {
 public:
  DpNormalResult();
  virtual ~DpNormalResult();

  DpNormalResult(const DpNormalResult& from);

  inline DpNormalResult& operator=(const DpNormalResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DpNormalResult& default_instance();

  void Swap(DpNormalResult* other);

  // implements Message ----------------------------------------------

  inline DpNormalResult* New() const { return New(NULL); }

  DpNormalResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DpNormalResult& from);
  void MergeFrom(const DpNormalResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DpNormalResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DpNormalResult)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static DpNormalResult* default_instance_;
};
// -------------------------------------------------------------------

class GWG_FriendRequest : public ::google::protobuf::Message {
 public:
  GWG_FriendRequest();
  virtual ~GWG_FriendRequest();

  GWG_FriendRequest(const GWG_FriendRequest& from);

  inline GWG_FriendRequest& operator=(const GWG_FriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GWG_FriendRequest& default_instance();

  void Swap(GWG_FriendRequest* other);

  // implements Message ----------------------------------------------

  inline GWG_FriendRequest* New() const { return New(NULL); }

  GWG_FriendRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GWG_FriendRequest& from);
  void MergeFrom(const GWG_FriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GWG_FriendRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 tuid = 1 [default = -1];
  bool has_tuid() const;
  void clear_tuid();
  static const int kTuidFieldNumber = 1;
  ::google::protobuf::int64 tuid() const;
  void set_tuid(::google::protobuf::int64 value);

  // optional bool ret = 2 [default = false];
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  bool ret() const;
  void set_ret(bool value);

  // optional .FriendInfoLite info = 3;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::FriendInfoLite& info() const;
  ::FriendInfoLite* mutable_info();
  ::FriendInfoLite* release_info();
  void set_allocated_info(::FriendInfoLite* info);

  // optional int32 plat_type = 4 [default = 0];
  bool has_plat_type() const;
  void clear_plat_type();
  static const int kPlatTypeFieldNumber = 4;
  ::google::protobuf::int32 plat_type() const;
  void set_plat_type(::google::protobuf::int32 value);

  // optional string platid = 5 [default = ""];
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 5;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  void set_platid(const char* value);
  void set_platid(const char* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);

  // optional bool is_plat_friend = 6 [default = true];
  bool has_is_plat_friend() const;
  void clear_is_plat_friend();
  static const int kIsPlatFriendFieldNumber = 6;
  bool is_plat_friend() const;
  void set_is_plat_friend(bool value);

  // optional string action_id = 7 [default = ""];
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 7;
  const ::std::string& action_id() const;
  void set_action_id(const ::std::string& value);
  void set_action_id(const char* value);
  void set_action_id(const char* value, size_t size);
  ::std::string* mutable_action_id();
  ::std::string* release_action_id();
  void set_allocated_action_id(::std::string* action_id);

  // @@protoc_insertion_point(class_scope:GWG_FriendRequest)
 private:
  inline void set_has_tuid();
  inline void clear_has_tuid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_plat_type();
  inline void clear_has_plat_type();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_is_plat_friend();
  inline void clear_has_is_plat_friend();
  inline void set_has_action_id();
  inline void clear_has_action_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 tuid_;
  ::FriendInfoLite* info_;
  ::google::protobuf::int32 plat_type_;
  bool ret_;
  bool is_plat_friend_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr action_id_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static GWG_FriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class ForwardInfo : public ::google::protobuf::Message {
 public:
  ForwardInfo();
  virtual ~ForwardInfo();

  ForwardInfo(const ForwardInfo& from);

  inline ForwardInfo& operator=(const ForwardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardInfo& default_instance();

  void Swap(ForwardInfo* other);

  // implements Message ----------------------------------------------

  inline ForwardInfo* New() const { return New(NULL); }

  ForwardInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardInfo& from);
  void MergeFrom(const ForwardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ForwardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1 [default = -1];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional string platid = 2 [default = "0"];
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 2;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  void set_platid(const char* value);
  void set_platid(const char* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);

  // optional int32 ActionSenderPlatType = 3 [default = 0];
  bool has_actionsenderplattype() const;
  void clear_actionsenderplattype();
  static const int kActionSenderPlatTypeFieldNumber = 3;
  ::google::protobuf::int32 actionsenderplattype() const;
  void set_actionsenderplattype(::google::protobuf::int32 value);

  // optional string sendername = 4 [default = ""];
  bool has_sendername() const;
  void clear_sendername();
  static const int kSendernameFieldNumber = 4;
  const ::std::string& sendername() const;
  void set_sendername(const ::std::string& value);
  void set_sendername(const char* value);
  void set_sendername(const char* value, size_t size);
  ::std::string* mutable_sendername();
  ::std::string* release_sendername();
  void set_allocated_sendername(::std::string* sendername);

  // optional string senderurl = 5 [default = ""];
  bool has_senderurl() const;
  void clear_senderurl();
  static const int kSenderurlFieldNumber = 5;
  const ::std::string& senderurl() const;
  void set_senderurl(const ::std::string& value);
  void set_senderurl(const char* value);
  void set_senderurl(const char* value, size_t size);
  ::std::string* mutable_senderurl();
  ::std::string* release_senderurl();
  void set_allocated_senderurl(::std::string* senderurl);

  // @@protoc_insertion_point(class_scope:ForwardInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_actionsenderplattype();
  inline void clear_has_actionsenderplattype();
  inline void set_has_sendername();
  inline void clear_has_sendername();
  inline void set_has_senderurl();
  inline void clear_has_senderurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  static ::std::string* _default_platid_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr sendername_;
  ::google::protobuf::internal::ArenaStringPtr senderurl_;
  ::google::protobuf::int32 actionsenderplattype_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static ForwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class WebFreeGift : public ::google::protobuf::Message {
 public:
  WebFreeGift();
  virtual ~WebFreeGift();

  WebFreeGift(const WebFreeGift& from);

  inline WebFreeGift& operator=(const WebFreeGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebFreeGift& default_instance();

  void Swap(WebFreeGift* other);

  // implements Message ----------------------------------------------

  inline WebFreeGift* New() const { return New(NULL); }

  WebFreeGift* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebFreeGift& from);
  void MergeFrom(const WebFreeGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebFreeGift* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid_from = 1;
  bool has_uid_from() const;
  void clear_uid_from();
  static const int kUidFromFieldNumber = 1;
  ::google::protobuf::int64 uid_from() const;
  void set_uid_from(::google::protobuf::int64 value);

  // repeated string openid = 2;
  int openid_size() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 2;
  const ::std::string& openid(int index) const;
  ::std::string* mutable_openid(int index);
  void set_openid(int index, const ::std::string& value);
  void set_openid(int index, const char* value);
  void set_openid(int index, const char* value, size_t size);
  ::std::string* add_openid();
  void add_openid(const ::std::string& value);
  void add_openid(const char* value);
  void add_openid(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& openid() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_openid();

  // repeated int32 item_type_id = 3;
  int item_type_id_size() const;
  void clear_item_type_id();
  static const int kItemTypeIdFieldNumber = 3;
  ::google::protobuf::int32 item_type_id(int index) const;
  void set_item_type_id(int index, ::google::protobuf::int32 value);
  void add_item_type_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_type_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_type_id();

  // repeated int32 item_num = 4;
  int item_num_size() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 4;
  ::google::protobuf::int32 item_num(int index) const;
  void set_item_num(int index, ::google::protobuf::int32 value);
  void add_item_num(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_num();

  // optional int32 ask_type = 5;
  bool has_ask_type() const;
  void clear_ask_type();
  static const int kAskTypeFieldNumber = 5;
  ::google::protobuf::int32 ask_type() const;
  void set_ask_type(::google::protobuf::int32 value);

  // optional int32 active = 6;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 6;
  ::google::protobuf::int32 active() const;
  void set_active(::google::protobuf::int32 value);

  // optional int32 web_fd = 7;
  bool has_web_fd() const;
  void clear_web_fd();
  static const int kWebFdFieldNumber = 7;
  ::google::protobuf::int32 web_fd() const;
  void set_web_fd(::google::protobuf::int32 value);

  // optional string openid_forward = 8;
  bool has_openid_forward() const;
  void clear_openid_forward();
  static const int kOpenidForwardFieldNumber = 8;
  const ::std::string& openid_forward() const;
  void set_openid_forward(const ::std::string& value);
  void set_openid_forward(const char* value);
  void set_openid_forward(const char* value, size_t size);
  ::std::string* mutable_openid_forward();
  ::std::string* release_openid_forward();
  void set_allocated_openid_forward(::std::string* openid_forward);

  // optional string openid_from = 9;
  bool has_openid_from() const;
  void clear_openid_from();
  static const int kOpenidFromFieldNumber = 9;
  const ::std::string& openid_from() const;
  void set_openid_from(const ::std::string& value);
  void set_openid_from(const char* value);
  void set_openid_from(const char* value, size_t size);
  ::std::string* mutable_openid_from();
  ::std::string* release_openid_from();
  void set_allocated_openid_from(::std::string* openid_from);

  // @@protoc_insertion_point(class_scope:WebFreeGift)
 private:
  inline void set_has_uid_from();
  inline void clear_has_uid_from();
  inline void set_has_ask_type();
  inline void clear_has_ask_type();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_web_fd();
  inline void clear_has_web_fd();
  inline void set_has_openid_forward();
  inline void clear_has_openid_forward();
  inline void set_has_openid_from();
  inline void clear_has_openid_from();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_from_;
  ::google::protobuf::RepeatedPtrField< ::std::string> openid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_type_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_num_;
  ::google::protobuf::int32 ask_type_;
  ::google::protobuf::int32 active_;
  ::google::protobuf::internal::ArenaStringPtr openid_forward_;
  ::google::protobuf::internal::ArenaStringPtr openid_from_;
  ::google::protobuf::int32 web_fd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebFreeGift* default_instance_;
};
// -------------------------------------------------------------------

class WebAskFor : public ::google::protobuf::Message {
 public:
  WebAskFor();
  virtual ~WebAskFor();

  WebAskFor(const WebAskFor& from);

  inline WebAskFor& operator=(const WebAskFor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebAskFor& default_instance();

  void Swap(WebAskFor* other);

  // implements Message ----------------------------------------------

  inline WebAskFor* New() const { return New(NULL); }

  WebAskFor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebAskFor& from);
  void MergeFrom(const WebAskFor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebAskFor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid_from = 1;
  bool has_uid_from() const;
  void clear_uid_from();
  static const int kUidFromFieldNumber = 1;
  ::google::protobuf::int64 uid_from() const;
  void set_uid_from(::google::protobuf::int64 value);

  // repeated string openid_to = 2;
  int openid_to_size() const;
  void clear_openid_to();
  static const int kOpenidToFieldNumber = 2;
  const ::std::string& openid_to(int index) const;
  ::std::string* mutable_openid_to(int index);
  void set_openid_to(int index, const ::std::string& value);
  void set_openid_to(int index, const char* value);
  void set_openid_to(int index, const char* value, size_t size);
  ::std::string* add_openid_to();
  void add_openid_to(const ::std::string& value);
  void add_openid_to(const char* value);
  void add_openid_to(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& openid_to() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_openid_to();

  // repeated int32 item_type_id = 3;
  int item_type_id_size() const;
  void clear_item_type_id();
  static const int kItemTypeIdFieldNumber = 3;
  ::google::protobuf::int32 item_type_id(int index) const;
  void set_item_type_id(int index, ::google::protobuf::int32 value);
  void add_item_type_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_type_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_type_id();

  // repeated int32 item_num = 4;
  int item_num_size() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 4;
  ::google::protobuf::int32 item_num(int index) const;
  void set_item_num(int index, ::google::protobuf::int32 value);
  void add_item_num(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_num();

  // optional int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // required int32 fd = 6;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 6;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // optional string openid_forward = 7;
  bool has_openid_forward() const;
  void clear_openid_forward();
  static const int kOpenidForwardFieldNumber = 7;
  const ::std::string& openid_forward() const;
  void set_openid_forward(const ::std::string& value);
  void set_openid_forward(const char* value);
  void set_openid_forward(const char* value, size_t size);
  ::std::string* mutable_openid_forward();
  ::std::string* release_openid_forward();
  void set_allocated_openid_forward(::std::string* openid_forward);

  // @@protoc_insertion_point(class_scope:WebAskFor)
 private:
  inline void set_has_uid_from();
  inline void clear_has_uid_from();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_openid_forward();
  inline void clear_has_openid_forward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_from_;
  ::google::protobuf::RepeatedPtrField< ::std::string> openid_to_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_type_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_num_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::internal::ArenaStringPtr openid_forward_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebAskFor* default_instance_;
};
// -------------------------------------------------------------------

class WebGiveFor : public ::google::protobuf::Message {
 public:
  WebGiveFor();
  virtual ~WebGiveFor();

  WebGiveFor(const WebGiveFor& from);

  inline WebGiveFor& operator=(const WebGiveFor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebGiveFor& default_instance();

  void Swap(WebGiveFor* other);

  // implements Message ----------------------------------------------

  inline WebGiveFor* New() const { return New(NULL); }

  WebGiveFor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebGiveFor& from);
  void MergeFrom(const WebGiveFor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebGiveFor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid_from = 1;
  bool has_uid_from() const;
  void clear_uid_from();
  static const int kUidFromFieldNumber = 1;
  ::google::protobuf::int64 uid_from() const;
  void set_uid_from(::google::protobuf::int64 value);

  // repeated string openid_to = 2;
  int openid_to_size() const;
  void clear_openid_to();
  static const int kOpenidToFieldNumber = 2;
  const ::std::string& openid_to(int index) const;
  ::std::string* mutable_openid_to(int index);
  void set_openid_to(int index, const ::std::string& value);
  void set_openid_to(int index, const char* value);
  void set_openid_to(int index, const char* value, size_t size);
  ::std::string* add_openid_to();
  void add_openid_to(const ::std::string& value);
  void add_openid_to(const char* value);
  void add_openid_to(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& openid_to() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_openid_to();

  // repeated int32 item_type_id = 3;
  int item_type_id_size() const;
  void clear_item_type_id();
  static const int kItemTypeIdFieldNumber = 3;
  ::google::protobuf::int32 item_type_id(int index) const;
  void set_item_type_id(int index, ::google::protobuf::int32 value);
  void add_item_type_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_type_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_type_id();

  // repeated int32 item_num = 4;
  int item_num_size() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 4;
  ::google::protobuf::int32 item_num(int index) const;
  void set_item_num(int index, ::google::protobuf::int32 value);
  void add_item_num(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_num();

  // optional int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // required int32 fd = 6;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 6;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // optional string openid_forward = 7;
  bool has_openid_forward() const;
  void clear_openid_forward();
  static const int kOpenidForwardFieldNumber = 7;
  const ::std::string& openid_forward() const;
  void set_openid_forward(const ::std::string& value);
  void set_openid_forward(const char* value);
  void set_openid_forward(const char* value, size_t size);
  ::std::string* mutable_openid_forward();
  ::std::string* release_openid_forward();
  void set_allocated_openid_forward(::std::string* openid_forward);

  // @@protoc_insertion_point(class_scope:WebGiveFor)
 private:
  inline void set_has_uid_from();
  inline void clear_has_uid_from();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_openid_forward();
  inline void clear_has_openid_forward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_from_;
  ::google::protobuf::RepeatedPtrField< ::std::string> openid_to_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_type_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_num_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::internal::ArenaStringPtr openid_forward_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebGiveFor* default_instance_;
};
// -------------------------------------------------------------------

class WebInvite : public ::google::protobuf::Message {
 public:
  WebInvite();
  virtual ~WebInvite();

  WebInvite(const WebInvite& from);

  inline WebInvite& operator=(const WebInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebInvite& default_instance();

  void Swap(WebInvite* other);

  // implements Message ----------------------------------------------

  inline WebInvite* New() const { return New(NULL); }

  WebInvite* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebInvite& from);
  void MergeFrom(const WebInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platid = 1;
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 1;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  void set_platid(const char* value);
  void set_platid(const char* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);

  // required string inviterid = 2;
  bool has_inviterid() const;
  void clear_inviterid();
  static const int kInviteridFieldNumber = 2;
  const ::std::string& inviterid() const;
  void set_inviterid(const ::std::string& value);
  void set_inviterid(const char* value);
  void set_inviterid(const char* value, size_t size);
  ::std::string* mutable_inviterid();
  ::std::string* release_inviterid();
  void set_allocated_inviterid(::std::string* inviterid);

  // required int32 fd = 3;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 3;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WebInvite)
 private:
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_inviterid();
  inline void clear_has_inviterid();
  inline void set_has_fd();
  inline void clear_has_fd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr inviterid_;
  ::google::protobuf::int32 fd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebInvite* default_instance_;
};
// -------------------------------------------------------------------

class Invite : public ::google::protobuf::Message {
 public:
  Invite();
  virtual ~Invite();

  Invite(const Invite& from);

  inline Invite& operator=(const Invite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Invite& default_instance();

  void Swap(Invite* other);

  // implements Message ----------------------------------------------

  inline Invite* New() const { return New(NULL); }

  Invite* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Invite& from);
  void MergeFrom(const Invite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Invite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platid = 1;
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 1;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  void set_platid(const char* value);
  void set_platid(const char* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);

  // required string inviterid = 2;
  bool has_inviterid() const;
  void clear_inviterid();
  static const int kInviteridFieldNumber = 2;
  const ::std::string& inviterid() const;
  void set_inviterid(const ::std::string& value);
  void set_inviterid(const char* value);
  void set_inviterid(const char* value, size_t size);
  ::std::string* mutable_inviterid();
  ::std::string* release_inviterid();
  void set_allocated_inviterid(::std::string* inviterid);

  // @@protoc_insertion_point(class_scope:Invite)
 private:
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_inviterid();
  inline void clear_has_inviterid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr inviterid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Invite* default_instance_;
};
// -------------------------------------------------------------------

class FriendRecallMsg : public ::google::protobuf::Message {
 public:
  FriendRecallMsg();
  virtual ~FriendRecallMsg();

  FriendRecallMsg(const FriendRecallMsg& from);

  inline FriendRecallMsg& operator=(const FriendRecallMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendRecallMsg& default_instance();

  void Swap(FriendRecallMsg* other);

  // implements Message ----------------------------------------------

  inline FriendRecallMsg* New() const { return New(NULL); }

  FriendRecallMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendRecallMsg& from);
  void MergeFrom(const FriendRecallMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FriendRecallMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uidMe = 1;
  bool has_uidme() const;
  void clear_uidme();
  static const int kUidMeFieldNumber = 1;
  ::google::protobuf::int64 uidme() const;
  void set_uidme(::google::protobuf::int64 value);

  // required int64 uidOther = 2;
  bool has_uidother() const;
  void clear_uidother();
  static const int kUidOtherFieldNumber = 2;
  ::google::protobuf::int64 uidother() const;
  void set_uidother(::google::protobuf::int64 value);

  // required int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required string name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:FriendRecallMsg)
 private:
  inline void set_has_uidme();
  inline void clear_has_uidme();
  inline void set_has_uidother();
  inline void clear_has_uidother();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uidme_;
  ::google::protobuf::int64 uidother_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static FriendRecallMsg* default_instance_;
};
// -------------------------------------------------------------------

class MultiLevelFriendPoint : public ::google::protobuf::Message {
 public:
  MultiLevelFriendPoint();
  virtual ~MultiLevelFriendPoint();

  MultiLevelFriendPoint(const MultiLevelFriendPoint& from);

  inline MultiLevelFriendPoint& operator=(const MultiLevelFriendPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiLevelFriendPoint& default_instance();

  void Swap(MultiLevelFriendPoint* other);

  // implements Message ----------------------------------------------

  inline MultiLevelFriendPoint* New() const { return New(NULL); }

  MultiLevelFriendPoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MultiLevelFriendPoint& from);
  void MergeFrom(const MultiLevelFriendPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MultiLevelFriendPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::google::protobuf::int32 kind() const;
  void set_kind(::google::protobuf::int32 value);

  // required int32 pointAdd = 2;
  bool has_pointadd() const;
  void clear_pointadd();
  static const int kPointAddFieldNumber = 2;
  ::google::protobuf::int32 pointadd() const;
  void set_pointadd(::google::protobuf::int32 value);

  // required int32 point = 3;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 3;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // required string openid = 4;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 4;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // required int32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MultiLevelFriendPoint)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_pointadd();
  inline void clear_has_pointadd();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_level();
  inline void clear_has_level();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 pointadd_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static MultiLevelFriendPoint* default_instance_;
};
// -------------------------------------------------------------------

class TalentShow : public ::google::protobuf::Message {
 public:
  TalentShow();
  virtual ~TalentShow();

  TalentShow(const TalentShow& from);

  inline TalentShow& operator=(const TalentShow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentShow& default_instance();

  void Swap(TalentShow* other);

  // implements Message ----------------------------------------------

  inline TalentShow* New() const { return New(NULL); }

  TalentShow* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentShow& from);
  void MergeFrom(const TalentShow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TalentShow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 weight = 3;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 3;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TalentShow)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_weight();
  inline void clear_has_weight();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 weight_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static TalentShow* default_instance_;
};
// -------------------------------------------------------------------

class TalentShowList : public ::google::protobuf::Message {
 public:
  TalentShowList();
  virtual ~TalentShowList();

  TalentShowList(const TalentShowList& from);

  inline TalentShowList& operator=(const TalentShowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentShowList& default_instance();

  void Swap(TalentShowList* other);

  // implements Message ----------------------------------------------

  inline TalentShowList* New() const { return New(NULL); }

  TalentShowList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentShowList& from);
  void MergeFrom(const TalentShowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TalentShowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TalentShow item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::TalentShow& item(int index) const;
  ::TalentShow* mutable_item(int index);
  ::TalentShow* add_item();
  const ::google::protobuf::RepeatedPtrField< ::TalentShow >&
      item() const;
  ::google::protobuf::RepeatedPtrField< ::TalentShow >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:TalentShowList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TalentShow > item_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static TalentShowList* default_instance_;
};
// -------------------------------------------------------------------

class FriendSendGift : public ::google::protobuf::Message {
 public:
  FriendSendGift();
  virtual ~FriendSendGift();

  FriendSendGift(const FriendSendGift& from);

  inline FriendSendGift& operator=(const FriendSendGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendSendGift& default_instance();

  void Swap(FriendSendGift* other);

  // implements Message ----------------------------------------------

  inline FriendSendGift* New() const { return New(NULL); }

  FriendSendGift* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendSendGift& from);
  void MergeFrom(const FriendSendGift& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FriendSendGift* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 itemId = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int64 uid = 3;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:FriendSendGift)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_uid();
  inline void clear_has_uid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 itemid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static FriendSendGift* default_instance_;
};
// -------------------------------------------------------------------

class FortuneSteal : public ::google::protobuf::Message {
 public:
  FortuneSteal();
  virtual ~FortuneSteal();

  FortuneSteal(const FortuneSteal& from);

  inline FortuneSteal& operator=(const FortuneSteal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FortuneSteal& default_instance();

  void Swap(FortuneSteal* other);

  // implements Message ----------------------------------------------

  inline FortuneSteal* New() const { return New(NULL); }

  FortuneSteal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FortuneSteal& from);
  void MergeFrom(const FortuneSteal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FortuneSteal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::google::protobuf::int32 kind() const;
  void set_kind(::google::protobuf::int32 value);

  // required string nameActive = 2;
  bool has_nameactive() const;
  void clear_nameactive();
  static const int kNameActiveFieldNumber = 2;
  const ::std::string& nameactive() const;
  void set_nameactive(const ::std::string& value);
  void set_nameactive(const char* value);
  void set_nameactive(const char* value, size_t size);
  ::std::string* mutable_nameactive();
  ::std::string* release_nameactive();
  void set_allocated_nameactive(::std::string* nameactive);

  // required int64 uidActive = 3;
  bool has_uidactive() const;
  void clear_uidactive();
  static const int kUidActiveFieldNumber = 3;
  ::google::protobuf::int64 uidactive() const;
  void set_uidactive(::google::protobuf::int64 value);

  // required int64 uidPassive = 4;
  bool has_uidpassive() const;
  void clear_uidpassive();
  static const int kUidPassiveFieldNumber = 4;
  ::google::protobuf::int64 uidpassive() const;
  void set_uidpassive(::google::protobuf::int64 value);

  // required int32 point = 5;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 5;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FortuneSteal)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_nameactive();
  inline void clear_has_nameactive();
  inline void set_has_uidactive();
  inline void clear_has_uidactive();
  inline void set_has_uidpassive();
  inline void clear_has_uidpassive();
  inline void set_has_point();
  inline void clear_has_point();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nameactive_;
  ::google::protobuf::int64 uidactive_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int64 uidpassive_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static FortuneSteal* default_instance_;
};
// -------------------------------------------------------------------

class ChiefVote : public ::google::protobuf::Message {
 public:
  ChiefVote();
  virtual ~ChiefVote();

  ChiefVote(const ChiefVote& from);

  inline ChiefVote& operator=(const ChiefVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChiefVote& default_instance();

  void Swap(ChiefVote* other);

  // implements Message ----------------------------------------------

  inline ChiefVote* New() const { return New(NULL); }

  ChiefVote* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChiefVote& from);
  void MergeFrom(const ChiefVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChiefVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::google::protobuf::int32 kind() const;
  void set_kind(::google::protobuf::int32 value);

  // required string nameActive = 2;
  bool has_nameactive() const;
  void clear_nameactive();
  static const int kNameActiveFieldNumber = 2;
  const ::std::string& nameactive() const;
  void set_nameactive(const ::std::string& value);
  void set_nameactive(const char* value);
  void set_nameactive(const char* value, size_t size);
  ::std::string* mutable_nameactive();
  ::std::string* release_nameactive();
  void set_allocated_nameactive(::std::string* nameactive);

  // required int64 uidActive = 3;
  bool has_uidactive() const;
  void clear_uidactive();
  static const int kUidActiveFieldNumber = 3;
  ::google::protobuf::int64 uidactive() const;
  void set_uidactive(::google::protobuf::int64 value);

  // required int64 uidPassive = 4;
  bool has_uidpassive() const;
  void clear_uidpassive();
  static const int kUidPassiveFieldNumber = 4;
  ::google::protobuf::int64 uidpassive() const;
  void set_uidpassive(::google::protobuf::int64 value);

  // required int32 num = 5;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 5;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // required bool succ = 6;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 6;
  bool succ() const;
  void set_succ(bool value);

  // @@protoc_insertion_point(class_scope:ChiefVote)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_nameactive();
  inline void clear_has_nameactive();
  inline void set_has_uidactive();
  inline void clear_has_uidactive();
  inline void set_has_uidpassive();
  inline void clear_has_uidpassive();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nameactive_;
  ::google::protobuf::int64 uidactive_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int64 uidpassive_;
  bool succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static ChiefVote* default_instance_;
};
// -------------------------------------------------------------------

class LotteryTimer : public ::google::protobuf::Message {
 public:
  LotteryTimer();
  virtual ~LotteryTimer();

  LotteryTimer(const LotteryTimer& from);

  inline LotteryTimer& operator=(const LotteryTimer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LotteryTimer& default_instance();

  void Swap(LotteryTimer* other);

  // implements Message ----------------------------------------------

  inline LotteryTimer* New() const { return New(NULL); }

  LotteryTimer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LotteryTimer& from);
  void MergeFrom(const LotteryTimer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LotteryTimer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomid = 1;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LotteryTimer)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 roomid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static LotteryTimer* default_instance_;
};
// -------------------------------------------------------------------

class BeUpdateBattleCnt : public ::google::protobuf::Message {
 public:
  BeUpdateBattleCnt();
  virtual ~BeUpdateBattleCnt();

  BeUpdateBattleCnt(const BeUpdateBattleCnt& from);

  inline BeUpdateBattleCnt& operator=(const BeUpdateBattleCnt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeUpdateBattleCnt& default_instance();

  void Swap(BeUpdateBattleCnt* other);

  // implements Message ----------------------------------------------

  inline BeUpdateBattleCnt* New() const { return New(NULL); }

  BeUpdateBattleCnt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeUpdateBattleCnt& from);
  void MergeFrom(const BeUpdateBattleCnt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeUpdateBattleCnt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 battleCnt = 1;
  bool has_battlecnt() const;
  void clear_battlecnt();
  static const int kBattleCntFieldNumber = 1;
  ::google::protobuf::int32 battlecnt() const;
  void set_battlecnt(::google::protobuf::int32 value);

  // required int32 todayBattleCnt = 2;
  bool has_todaybattlecnt() const;
  void clear_todaybattlecnt();
  static const int kTodayBattleCntFieldNumber = 2;
  ::google::protobuf::int32 todaybattlecnt() const;
  void set_todaybattlecnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BeUpdateBattleCnt)
 private:
  inline void set_has_battlecnt();
  inline void clear_has_battlecnt();
  inline void set_has_todaybattlecnt();
  inline void clear_has_todaybattlecnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 battlecnt_;
  ::google::protobuf::int32 todaybattlecnt_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static BeUpdateBattleCnt* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddExp_Req : public ::google::protobuf::Message {
 public:
  Admin_AddExp_Req();
  virtual ~Admin_AddExp_Req();

  Admin_AddExp_Req(const Admin_AddExp_Req& from);

  inline Admin_AddExp_Req& operator=(const Admin_AddExp_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddExp_Req& default_instance();

  void Swap(Admin_AddExp_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddExp_Req* New() const { return New(NULL); }

  Admin_AddExp_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddExp_Req& from);
  void MergeFrom(const Admin_AddExp_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddExp_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 exp = 2;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_AddExp_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddExp_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddExp_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddExp_Rsp();
  virtual ~Admin_AddExp_Rsp();

  Admin_AddExp_Rsp(const Admin_AddExp_Rsp& from);

  inline Admin_AddExp_Rsp& operator=(const Admin_AddExp_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddExp_Rsp& default_instance();

  void Swap(Admin_AddExp_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddExp_Rsp* New() const { return New(NULL); }

  Admin_AddExp_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddExp_Rsp& from);
  void MergeFrom(const Admin_AddExp_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddExp_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 oldlevel = 2;
  bool has_oldlevel() const;
  void clear_oldlevel();
  static const int kOldlevelFieldNumber = 2;
  ::google::protobuf::int32 oldlevel() const;
  void set_oldlevel(::google::protobuf::int32 value);

  // required int32 oldexp = 3;
  bool has_oldexp() const;
  void clear_oldexp();
  static const int kOldexpFieldNumber = 3;
  ::google::protobuf::int32 oldexp() const;
  void set_oldexp(::google::protobuf::int32 value);

  // required int32 newlevel = 4;
  bool has_newlevel() const;
  void clear_newlevel();
  static const int kNewlevelFieldNumber = 4;
  ::google::protobuf::int32 newlevel() const;
  void set_newlevel(::google::protobuf::int32 value);

  // required int32 newexp = 5;
  bool has_newexp() const;
  void clear_newexp();
  static const int kNewexpFieldNumber = 5;
  ::google::protobuf::int32 newexp() const;
  void set_newexp(::google::protobuf::int32 value);

  // required int32 gid = 6;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 7;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 7;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 8 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 8;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 9;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 9;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddExp_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_oldlevel();
  inline void clear_has_oldlevel();
  inline void set_has_oldexp();
  inline void clear_has_oldexp();
  inline void set_has_newlevel();
  inline void clear_has_newlevel();
  inline void set_has_newexp();
  inline void clear_has_newexp();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 oldlevel_;
  ::google::protobuf::int32 oldexp_;
  ::google::protobuf::int32 newlevel_;
  ::google::protobuf::int32 newexp_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddExp_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddGold_Req : public ::google::protobuf::Message {
 public:
  Admin_AddGold_Req();
  virtual ~Admin_AddGold_Req();

  Admin_AddGold_Req(const Admin_AddGold_Req& from);

  inline Admin_AddGold_Req& operator=(const Admin_AddGold_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddGold_Req& default_instance();

  void Swap(Admin_AddGold_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddGold_Req* New() const { return New(NULL); }

  Admin_AddGold_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddGold_Req& from);
  void MergeFrom(const Admin_AddGold_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddGold_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gold = 2;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 2;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_AddGold_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddGold_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddGold_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddGold_Rsp();
  virtual ~Admin_AddGold_Rsp();

  Admin_AddGold_Rsp(const Admin_AddGold_Rsp& from);

  inline Admin_AddGold_Rsp& operator=(const Admin_AddGold_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddGold_Rsp& default_instance();

  void Swap(Admin_AddGold_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddGold_Rsp* New() const { return New(NULL); }

  Admin_AddGold_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddGold_Rsp& from);
  void MergeFrom(const Admin_AddGold_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddGold_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 oldgold = 2;
  bool has_oldgold() const;
  void clear_oldgold();
  static const int kOldgoldFieldNumber = 2;
  ::google::protobuf::int32 oldgold() const;
  void set_oldgold(::google::protobuf::int32 value);

  // required int32 newgold = 3;
  bool has_newgold() const;
  void clear_newgold();
  static const int kNewgoldFieldNumber = 3;
  ::google::protobuf::int32 newgold() const;
  void set_newgold(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddGold_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_oldgold();
  inline void clear_has_oldgold();
  inline void set_has_newgold();
  inline void clear_has_newgold();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 oldgold_;
  ::google::protobuf::int32 newgold_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddGold_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_Clear_Req : public ::google::protobuf::Message {
 public:
  Admin_Clear_Req();
  virtual ~Admin_Clear_Req();

  Admin_Clear_Req(const Admin_Clear_Req& from);

  inline Admin_Clear_Req& operator=(const Admin_Clear_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_Clear_Req& default_instance();

  void Swap(Admin_Clear_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_Clear_Req* New() const { return New(NULL); }

  Admin_Clear_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_Clear_Req& from);
  void MergeFrom(const Admin_Clear_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_Clear_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_Clear_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_Clear_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_Clear_Rsp : public ::google::protobuf::Message {
 public:
  Admin_Clear_Rsp();
  virtual ~Admin_Clear_Rsp();

  Admin_Clear_Rsp(const Admin_Clear_Rsp& from);

  inline Admin_Clear_Rsp& operator=(const Admin_Clear_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_Clear_Rsp& default_instance();

  void Swap(Admin_Clear_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_Clear_Rsp* New() const { return New(NULL); }

  Admin_Clear_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_Clear_Rsp& from);
  void MergeFrom(const Admin_Clear_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_Clear_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_Clear_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_Clear_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetVal_Req : public ::google::protobuf::Message {
 public:
  Admin_SetVal_Req();
  virtual ~Admin_SetVal_Req();

  Admin_SetVal_Req(const Admin_SetVal_Req& from);

  inline Admin_SetVal_Req& operator=(const Admin_SetVal_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetVal_Req& default_instance();

  void Swap(Admin_SetVal_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_SetVal_Req* New() const { return New(NULL); }

  Admin_SetVal_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetVal_Req& from);
  void MergeFrom(const Admin_SetVal_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetVal_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // optional int32 map_id = 5 [default = 0];
  bool has_map_id() const;
  void clear_map_id();
  static const int kMapIdFieldNumber = 5;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // optional int32 val_type = 6 [default = 0];
  bool has_val_type() const;
  void clear_val_type();
  static const int kValTypeFieldNumber = 6;
  ::google::protobuf::int32 val_type() const;
  void set_val_type(::google::protobuf::int32 value);

  // optional int64 val_value = 7 [default = 0];
  bool has_val_value() const;
  void clear_val_value();
  static const int kValValueFieldNumber = 7;
  ::google::protobuf::int64 val_value() const;
  void set_val_value(::google::protobuf::int64 value);

  // optional int64 val_value2 = 8 [default = 0];
  bool has_val_value2() const;
  void clear_val_value2();
  static const int kValValue2FieldNumber = 8;
  ::google::protobuf::int64 val_value2() const;
  void set_val_value2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Admin_SetVal_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_val_type();
  inline void clear_has_val_type();
  inline void set_has_val_value();
  inline void clear_has_val_value();
  inline void set_has_val_value2();
  inline void clear_has_val_value2();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int64 val_value_;
  ::google::protobuf::int64 val_value2_;
  ::google::protobuf::int32 val_type_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetVal_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetVal_Rsp : public ::google::protobuf::Message {
 public:
  Admin_SetVal_Rsp();
  virtual ~Admin_SetVal_Rsp();

  Admin_SetVal_Rsp(const Admin_SetVal_Rsp& from);

  inline Admin_SetVal_Rsp& operator=(const Admin_SetVal_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetVal_Rsp& default_instance();

  void Swap(Admin_SetVal_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_SetVal_Rsp* New() const { return New(NULL); }

  Admin_SetVal_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetVal_Rsp& from);
  void MergeFrom(const Admin_SetVal_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetVal_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional int32 map_id = 6 [default = 0];
  bool has_map_id() const;
  void clear_map_id();
  static const int kMapIdFieldNumber = 6;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // optional int32 val_type = 7 [default = 0];
  bool has_val_type() const;
  void clear_val_type();
  static const int kValTypeFieldNumber = 7;
  ::google::protobuf::int32 val_type() const;
  void set_val_type(::google::protobuf::int32 value);

  // optional int64 val_value = 8 [default = 0];
  bool has_val_value() const;
  void clear_val_value();
  static const int kValValueFieldNumber = 8;
  ::google::protobuf::int64 val_value() const;
  void set_val_value(::google::protobuf::int64 value);

  // optional int64 val_value2 = 9 [default = 0];
  bool has_val_value2() const;
  void clear_val_value2();
  static const int kValValue2FieldNumber = 9;
  ::google::protobuf::int64 val_value2() const;
  void set_val_value2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Admin_SetVal_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_val_type();
  inline void clear_has_val_type();
  inline void set_has_val_value();
  inline void clear_has_val_value();
  inline void set_has_val_value2();
  inline void clear_has_val_value2();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 val_type_;
  ::google::protobuf::int64 val_value_;
  ::google::protobuf::int64 val_value2_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetVal_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetLevel_Req : public ::google::protobuf::Message {
 public:
  Admin_SetLevel_Req();
  virtual ~Admin_SetLevel_Req();

  Admin_SetLevel_Req(const Admin_SetLevel_Req& from);

  inline Admin_SetLevel_Req& operator=(const Admin_SetLevel_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetLevel_Req& default_instance();

  void Swap(Admin_SetLevel_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_SetLevel_Req* New() const { return New(NULL); }

  Admin_SetLevel_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetLevel_Req& from);
  void MergeFrom(const Admin_SetLevel_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetLevel_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_SetLevel_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetLevel_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetLevel_Rsp : public ::google::protobuf::Message {
 public:
  Admin_SetLevel_Rsp();
  virtual ~Admin_SetLevel_Rsp();

  Admin_SetLevel_Rsp(const Admin_SetLevel_Rsp& from);

  inline Admin_SetLevel_Rsp& operator=(const Admin_SetLevel_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetLevel_Rsp& default_instance();

  void Swap(Admin_SetLevel_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_SetLevel_Rsp* New() const { return New(NULL); }

  Admin_SetLevel_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetLevel_Rsp& from);
  void MergeFrom(const Admin_SetLevel_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetLevel_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 oldlevel = 2;
  bool has_oldlevel() const;
  void clear_oldlevel();
  static const int kOldlevelFieldNumber = 2;
  ::google::protobuf::int32 oldlevel() const;
  void set_oldlevel(::google::protobuf::int32 value);

  // required int32 newlevel = 3;
  bool has_newlevel() const;
  void clear_newlevel();
  static const int kNewlevelFieldNumber = 3;
  ::google::protobuf::int32 newlevel() const;
  void set_newlevel(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_SetLevel_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_oldlevel();
  inline void clear_has_oldlevel();
  inline void set_has_newlevel();
  inline void clear_has_newlevel();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 oldlevel_;
  ::google::protobuf::int32 newlevel_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetLevel_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddProp_Req : public ::google::protobuf::Message {
 public:
  Admin_AddProp_Req();
  virtual ~Admin_AddProp_Req();

  Admin_AddProp_Req(const Admin_AddProp_Req& from);

  inline Admin_AddProp_Req& operator=(const Admin_AddProp_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddProp_Req& default_instance();

  void Swap(Admin_AddProp_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddProp_Req* New() const { return New(NULL); }

  Admin_AddProp_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddProp_Req& from);
  void MergeFrom(const Admin_AddProp_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddProp_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 prop = 2;
  bool has_prop() const;
  void clear_prop();
  static const int kPropFieldNumber = 2;
  ::google::protobuf::int32 prop() const;
  void set_prop(::google::protobuf::int32 value);

  // required int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 amount = 4;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // required int32 gid = 5;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 5;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 6;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 6;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 7 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 7;
  bool fromweb() const;
  void set_fromweb(bool value);

  // optional int32 activeId = 8;
  bool has_activeid() const;
  void clear_activeid();
  static const int kActiveIdFieldNumber = 8;
  ::google::protobuf::int32 activeid() const;
  void set_activeid(::google::protobuf::int32 value);

  // optional int32 sid = 9;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 9;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddProp_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_prop();
  inline void clear_has_prop();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_sid();
  inline void clear_has_sid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 prop_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 activeid_;
  ::google::protobuf::int32 sid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddProp_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddProp_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddProp_Rsp();
  virtual ~Admin_AddProp_Rsp();

  Admin_AddProp_Rsp(const Admin_AddProp_Rsp& from);

  inline Admin_AddProp_Rsp& operator=(const Admin_AddProp_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddProp_Rsp& default_instance();

  void Swap(Admin_AddProp_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddProp_Rsp* New() const { return New(NULL); }

  Admin_AddProp_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddProp_Rsp& from);
  void MergeFrom(const Admin_AddProp_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddProp_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int64 propID = 2;
  bool has_propid() const;
  void clear_propid();
  static const int kPropIDFieldNumber = 2;
  ::google::protobuf::int64 propid() const;
  void set_propid(::google::protobuf::int64 value);

  // required int32 infoID = 3;
  bool has_infoid() const;
  void clear_infoid();
  static const int kInfoIDFieldNumber = 3;
  ::google::protobuf::int32 infoid() const;
  void set_infoid(::google::protobuf::int32 value);

  // required int32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 oldamount = 5;
  bool has_oldamount() const;
  void clear_oldamount();
  static const int kOldamountFieldNumber = 5;
  ::google::protobuf::int32 oldamount() const;
  void set_oldamount(::google::protobuf::int32 value);

  // required int32 newamount = 6;
  bool has_newamount() const;
  void clear_newamount();
  static const int kNewamountFieldNumber = 6;
  ::google::protobuf::int32 newamount() const;
  void set_newamount(::google::protobuf::int32 value);

  // required int32 gid = 7;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 7;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 8;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 8;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 9 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 9;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 10;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 10;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddProp_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_infoid();
  inline void clear_has_infoid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_oldamount();
  inline void clear_has_oldamount();
  inline void set_has_newamount();
  inline void clear_has_newamount();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 propid_;
  ::google::protobuf::int32 infoid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 oldamount_;
  ::google::protobuf::int32 newamount_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddProp_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetEquip_Req : public ::google::protobuf::Message {
 public:
  Admin_SetEquip_Req();
  virtual ~Admin_SetEquip_Req();

  Admin_SetEquip_Req(const Admin_SetEquip_Req& from);

  inline Admin_SetEquip_Req& operator=(const Admin_SetEquip_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetEquip_Req& default_instance();

  void Swap(Admin_SetEquip_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_SetEquip_Req* New() const { return New(NULL); }

  Admin_SetEquip_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetEquip_Req& from);
  void MergeFrom(const Admin_SetEquip_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetEquip_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 infoID = 2;
  bool has_infoid() const;
  void clear_infoid();
  static const int kInfoIDFieldNumber = 2;
  ::google::protobuf::int32 infoid() const;
  void set_infoid(::google::protobuf::int32 value);

  // required int32 position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required int32 equiplevel = 4;
  bool has_equiplevel() const;
  void clear_equiplevel();
  static const int kEquiplevelFieldNumber = 4;
  ::google::protobuf::int32 equiplevel() const;
  void set_equiplevel(::google::protobuf::int32 value);

  // required int32 atklevel = 5;
  bool has_atklevel() const;
  void clear_atklevel();
  static const int kAtklevelFieldNumber = 5;
  ::google::protobuf::int32 atklevel() const;
  void set_atklevel(::google::protobuf::int32 value);

  // required int32 deflevel = 6;
  bool has_deflevel() const;
  void clear_deflevel();
  static const int kDeflevelFieldNumber = 6;
  ::google::protobuf::int32 deflevel() const;
  void set_deflevel(::google::protobuf::int32 value);

  // required int32 agilitylevel = 7;
  bool has_agilitylevel() const;
  void clear_agilitylevel();
  static const int kAgilitylevelFieldNumber = 7;
  ::google::protobuf::int32 agilitylevel() const;
  void set_agilitylevel(::google::protobuf::int32 value);

  // required int32 luckylevel = 8;
  bool has_luckylevel() const;
  void clear_luckylevel();
  static const int kLuckylevelFieldNumber = 8;
  ::google::protobuf::int32 luckylevel() const;
  void set_luckylevel(::google::protobuf::int32 value);

  // required int32 gid = 9;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 9;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 10;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 10;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 11 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 11;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_SetEquip_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_infoid();
  inline void clear_has_infoid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_equiplevel();
  inline void clear_has_equiplevel();
  inline void set_has_atklevel();
  inline void clear_has_atklevel();
  inline void set_has_deflevel();
  inline void clear_has_deflevel();
  inline void set_has_agilitylevel();
  inline void clear_has_agilitylevel();
  inline void set_has_luckylevel();
  inline void clear_has_luckylevel();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 infoid_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 equiplevel_;
  ::google::protobuf::int32 atklevel_;
  ::google::protobuf::int32 deflevel_;
  ::google::protobuf::int32 agilitylevel_;
  ::google::protobuf::int32 luckylevel_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetEquip_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetEquip_Rsp : public ::google::protobuf::Message {
 public:
  Admin_SetEquip_Rsp();
  virtual ~Admin_SetEquip_Rsp();

  Admin_SetEquip_Rsp(const Admin_SetEquip_Rsp& from);

  inline Admin_SetEquip_Rsp& operator=(const Admin_SetEquip_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetEquip_Rsp& default_instance();

  void Swap(Admin_SetEquip_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_SetEquip_Rsp* New() const { return New(NULL); }

  Admin_SetEquip_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetEquip_Rsp& from);
  void MergeFrom(const Admin_SetEquip_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetEquip_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int64 equipID = 2;
  bool has_equipid() const;
  void clear_equipid();
  static const int kEquipIDFieldNumber = 2;
  ::google::protobuf::int64 equipid() const;
  void set_equipid(::google::protobuf::int64 value);

  // required int32 infoID = 3;
  bool has_infoid() const;
  void clear_infoid();
  static const int kInfoIDFieldNumber = 3;
  ::google::protobuf::int32 infoid() const;
  void set_infoid(::google::protobuf::int32 value);

  // required int32 position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required int32 equiplevel = 5;
  bool has_equiplevel() const;
  void clear_equiplevel();
  static const int kEquiplevelFieldNumber = 5;
  ::google::protobuf::int32 equiplevel() const;
  void set_equiplevel(::google::protobuf::int32 value);

  // required int32 atklevel = 6;
  bool has_atklevel() const;
  void clear_atklevel();
  static const int kAtklevelFieldNumber = 6;
  ::google::protobuf::int32 atklevel() const;
  void set_atklevel(::google::protobuf::int32 value);

  // required int32 deflevel = 7;
  bool has_deflevel() const;
  void clear_deflevel();
  static const int kDeflevelFieldNumber = 7;
  ::google::protobuf::int32 deflevel() const;
  void set_deflevel(::google::protobuf::int32 value);

  // required int32 agilitylevel = 8;
  bool has_agilitylevel() const;
  void clear_agilitylevel();
  static const int kAgilitylevelFieldNumber = 8;
  ::google::protobuf::int32 agilitylevel() const;
  void set_agilitylevel(::google::protobuf::int32 value);

  // required int32 luckylevel = 9;
  bool has_luckylevel() const;
  void clear_luckylevel();
  static const int kLuckylevelFieldNumber = 9;
  ::google::protobuf::int32 luckylevel() const;
  void set_luckylevel(::google::protobuf::int32 value);

  // required int32 gid = 10;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 10;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 11;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 11;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 12 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 12;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 13;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 13;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_SetEquip_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_infoid();
  inline void clear_has_infoid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_equiplevel();
  inline void clear_has_equiplevel();
  inline void set_has_atklevel();
  inline void clear_has_atklevel();
  inline void set_has_deflevel();
  inline void clear_has_deflevel();
  inline void set_has_agilitylevel();
  inline void clear_has_agilitylevel();
  inline void set_has_luckylevel();
  inline void clear_has_luckylevel();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 equipid_;
  ::google::protobuf::int32 infoid_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 equiplevel_;
  ::google::protobuf::int32 atklevel_;
  ::google::protobuf::int32 deflevel_;
  ::google::protobuf::int32 agilitylevel_;
  ::google::protobuf::int32 luckylevel_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetEquip_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_UserInfo_Req : public ::google::protobuf::Message {
 public:
  Admin_UserInfo_Req();
  virtual ~Admin_UserInfo_Req();

  Admin_UserInfo_Req(const Admin_UserInfo_Req& from);

  inline Admin_UserInfo_Req& operator=(const Admin_UserInfo_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_UserInfo_Req& default_instance();

  void Swap(Admin_UserInfo_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_UserInfo_Req* New() const { return New(NULL); }

  Admin_UserInfo_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_UserInfo_Req& from);
  void MergeFrom(const Admin_UserInfo_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_UserInfo_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_UserInfo_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_UserInfo_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_UserInfo_Rsp : public ::google::protobuf::Message {
 public:
  Admin_UserInfo_Rsp();
  virtual ~Admin_UserInfo_Rsp();

  Admin_UserInfo_Rsp(const Admin_UserInfo_Rsp& from);

  inline Admin_UserInfo_Rsp& operator=(const Admin_UserInfo_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_UserInfo_Rsp& default_instance();

  void Swap(Admin_UserInfo_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_UserInfo_Rsp* New() const { return New(NULL); }

  Admin_UserInfo_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_UserInfo_Rsp& from);
  void MergeFrom(const Admin_UserInfo_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_UserInfo_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 6;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 7;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 7;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 8 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 8;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 9;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 9;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_UserInfo_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_UserInfo_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddGuest_Req : public ::google::protobuf::Message {
 public:
  Admin_AddGuest_Req();
  virtual ~Admin_AddGuest_Req();

  Admin_AddGuest_Req(const Admin_AddGuest_Req& from);

  inline Admin_AddGuest_Req& operator=(const Admin_AddGuest_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddGuest_Req& default_instance();

  void Swap(Admin_AddGuest_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddGuest_Req* New() const { return New(NULL); }

  Admin_AddGuest_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddGuest_Req& from);
  void MergeFrom(const Admin_AddGuest_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddGuest_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 group_cnt = 2;
  bool has_group_cnt() const;
  void clear_group_cnt();
  static const int kGroupCntFieldNumber = 2;
  ::google::protobuf::int32 group_cnt() const;
  void set_group_cnt(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // optional int32 map_id = 6;
  bool has_map_id() const;
  void clear_map_id();
  static const int kMapIdFieldNumber = 6;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddGuest_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_group_cnt();
  inline void clear_has_group_cnt();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_map_id();
  inline void clear_has_map_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 group_cnt_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 map_id_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddGuest_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddGuest_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddGuest_Rsp();
  virtual ~Admin_AddGuest_Rsp();

  Admin_AddGuest_Rsp(const Admin_AddGuest_Rsp& from);

  inline Admin_AddGuest_Rsp& operator=(const Admin_AddGuest_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddGuest_Rsp& default_instance();

  void Swap(Admin_AddGuest_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddGuest_Rsp* New() const { return New(NULL); }

  Admin_AddGuest_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddGuest_Rsp& from);
  void MergeFrom(const Admin_AddGuest_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddGuest_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 current_group_cnt = 2;
  bool has_current_group_cnt() const;
  void clear_current_group_cnt();
  static const int kCurrentGroupCntFieldNumber = 2;
  ::google::protobuf::int32 current_group_cnt() const;
  void set_current_group_cnt(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 6;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 6;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional int32 map_id = 7;
  bool has_map_id() const;
  void clear_map_id();
  static const int kMapIdFieldNumber = 7;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddGuest_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_current_group_cnt();
  inline void clear_has_current_group_cnt();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_map_id();
  inline void clear_has_map_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 current_group_cnt_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 map_id_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddGuest_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetPublicPraise_Req : public ::google::protobuf::Message {
 public:
  Admin_SetPublicPraise_Req();
  virtual ~Admin_SetPublicPraise_Req();

  Admin_SetPublicPraise_Req(const Admin_SetPublicPraise_Req& from);

  inline Admin_SetPublicPraise_Req& operator=(const Admin_SetPublicPraise_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetPublicPraise_Req& default_instance();

  void Swap(Admin_SetPublicPraise_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_SetPublicPraise_Req* New() const { return New(NULL); }

  Admin_SetPublicPraise_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetPublicPraise_Req& from);
  void MergeFrom(const Admin_SetPublicPraise_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetPublicPraise_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 public_praise = 2;
  bool has_public_praise() const;
  void clear_public_praise();
  static const int kPublicPraiseFieldNumber = 2;
  ::google::protobuf::int32 public_praise() const;
  void set_public_praise(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // optional int32 map_id = 6;
  bool has_map_id() const;
  void clear_map_id();
  static const int kMapIdFieldNumber = 6;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_SetPublicPraise_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_public_praise();
  inline void clear_has_public_praise();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_map_id();
  inline void clear_has_map_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 public_praise_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 map_id_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetPublicPraise_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_SetPublicPraise_Rsp : public ::google::protobuf::Message {
 public:
  Admin_SetPublicPraise_Rsp();
  virtual ~Admin_SetPublicPraise_Rsp();

  Admin_SetPublicPraise_Rsp(const Admin_SetPublicPraise_Rsp& from);

  inline Admin_SetPublicPraise_Rsp& operator=(const Admin_SetPublicPraise_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_SetPublicPraise_Rsp& default_instance();

  void Swap(Admin_SetPublicPraise_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_SetPublicPraise_Rsp* New() const { return New(NULL); }

  Admin_SetPublicPraise_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_SetPublicPraise_Rsp& from);
  void MergeFrom(const Admin_SetPublicPraise_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_SetPublicPraise_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 public_praise = 2;
  bool has_public_praise() const;
  void clear_public_praise();
  static const int kPublicPraiseFieldNumber = 2;
  ::google::protobuf::int32 public_praise() const;
  void set_public_praise(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 6;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 6;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional int32 map_id = 7;
  bool has_map_id() const;
  void clear_map_id();
  static const int kMapIdFieldNumber = 7;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_SetPublicPraise_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_public_praise();
  inline void clear_has_public_praise();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_map_id();
  inline void clear_has_map_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 public_praise_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 map_id_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_SetPublicPraise_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_DelGoods_Req : public ::google::protobuf::Message {
 public:
  Admin_DelGoods_Req();
  virtual ~Admin_DelGoods_Req();

  Admin_DelGoods_Req(const Admin_DelGoods_Req& from);

  inline Admin_DelGoods_Req& operator=(const Admin_DelGoods_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_DelGoods_Req& default_instance();

  void Swap(Admin_DelGoods_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_DelGoods_Req* New() const { return New(NULL); }

  Admin_DelGoods_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_DelGoods_Req& from);
  void MergeFrom(const Admin_DelGoods_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_DelGoods_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 goods_id = 2;
  bool has_goods_id() const;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  ::google::protobuf::int32 goods_id() const;
  void set_goods_id(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 goods_amount = 6;
  bool has_goods_amount() const;
  void clear_goods_amount();
  static const int kGoodsAmountFieldNumber = 6;
  ::google::protobuf::int32 goods_amount() const;
  void set_goods_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_DelGoods_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_goods_amount();
  inline void clear_has_goods_amount();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 goods_id_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 goods_amount_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_DelGoods_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_DelGoods_Rsp : public ::google::protobuf::Message {
 public:
  Admin_DelGoods_Rsp();
  virtual ~Admin_DelGoods_Rsp();

  Admin_DelGoods_Rsp(const Admin_DelGoods_Rsp& from);

  inline Admin_DelGoods_Rsp& operator=(const Admin_DelGoods_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_DelGoods_Rsp& default_instance();

  void Swap(Admin_DelGoods_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_DelGoods_Rsp* New() const { return New(NULL); }

  Admin_DelGoods_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_DelGoods_Rsp& from);
  void MergeFrom(const Admin_DelGoods_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_DelGoods_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 goods_id = 2;
  bool has_goods_id() const;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  ::google::protobuf::int32 goods_id() const;
  void set_goods_id(::google::protobuf::int32 value);

  // required int32 goods_current_amount = 3;
  bool has_goods_current_amount() const;
  void clear_goods_current_amount();
  static const int kGoodsCurrentAmountFieldNumber = 3;
  ::google::protobuf::int32 goods_current_amount() const;
  void set_goods_current_amount(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int32 gid = 5;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 5;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_DelGoods_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_goods_current_amount();
  inline void clear_has_goods_current_amount();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 goods_id_;
  ::google::protobuf::int32 goods_current_amount_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::int32 gid_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_DelGoods_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddGoods_Req : public ::google::protobuf::Message {
 public:
  Admin_AddGoods_Req();
  virtual ~Admin_AddGoods_Req();

  Admin_AddGoods_Req(const Admin_AddGoods_Req& from);

  inline Admin_AddGoods_Req& operator=(const Admin_AddGoods_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddGoods_Req& default_instance();

  void Swap(Admin_AddGoods_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddGoods_Req* New() const { return New(NULL); }

  Admin_AddGoods_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddGoods_Req& from);
  void MergeFrom(const Admin_AddGoods_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddGoods_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 goods_id = 2;
  bool has_goods_id() const;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  ::google::protobuf::int32 goods_id() const;
  void set_goods_id(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 goods_amount = 6;
  bool has_goods_amount() const;
  void clear_goods_amount();
  static const int kGoodsAmountFieldNumber = 6;
  ::google::protobuf::int32 goods_amount() const;
  void set_goods_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddGoods_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_goods_amount();
  inline void clear_has_goods_amount();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 goods_id_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 goods_amount_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddGoods_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddGoods_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddGoods_Rsp();
  virtual ~Admin_AddGoods_Rsp();

  Admin_AddGoods_Rsp(const Admin_AddGoods_Rsp& from);

  inline Admin_AddGoods_Rsp& operator=(const Admin_AddGoods_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddGoods_Rsp& default_instance();

  void Swap(Admin_AddGoods_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddGoods_Rsp* New() const { return New(NULL); }

  Admin_AddGoods_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddGoods_Rsp& from);
  void MergeFrom(const Admin_AddGoods_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddGoods_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 goods_id = 2;
  bool has_goods_id() const;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  ::google::protobuf::int32 goods_id() const;
  void set_goods_id(::google::protobuf::int32 value);

  // required int32 goods_current_amount = 3;
  bool has_goods_current_amount() const;
  void clear_goods_current_amount();
  static const int kGoodsCurrentAmountFieldNumber = 3;
  ::google::protobuf::int32 goods_current_amount() const;
  void set_goods_current_amount(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int32 gid = 5;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 5;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddGoods_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_goods_current_amount();
  inline void clear_has_goods_current_amount();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 goods_id_;
  ::google::protobuf::int32 goods_current_amount_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::int32 gid_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddGoods_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_Common_Req : public ::google::protobuf::Message {
 public:
  Admin_Common_Req();
  virtual ~Admin_Common_Req();

  Admin_Common_Req(const Admin_Common_Req& from);

  inline Admin_Common_Req& operator=(const Admin_Common_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_Common_Req& default_instance();

  void Swap(Admin_Common_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_Common_Req* New() const { return New(NULL); }

  Admin_Common_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_Common_Req& from);
  void MergeFrom(const Admin_Common_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_Common_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string func = 1;
  bool has_func() const;
  void clear_func();
  static const int kFuncFieldNumber = 1;
  const ::std::string& func() const;
  void set_func(const ::std::string& value);
  void set_func(const char* value);
  void set_func(const char* value, size_t size);
  ::std::string* mutable_func();
  ::std::string* release_func();
  void set_allocated_func(::std::string* func);

  // required int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required string arg1 = 3;
  bool has_arg1() const;
  void clear_arg1();
  static const int kArg1FieldNumber = 3;
  const ::std::string& arg1() const;
  void set_arg1(const ::std::string& value);
  void set_arg1(const char* value);
  void set_arg1(const char* value, size_t size);
  ::std::string* mutable_arg1();
  ::std::string* release_arg1();
  void set_allocated_arg1(::std::string* arg1);

  // required string arg2 = 4;
  bool has_arg2() const;
  void clear_arg2();
  static const int kArg2FieldNumber = 4;
  const ::std::string& arg2() const;
  void set_arg2(const ::std::string& value);
  void set_arg2(const char* value);
  void set_arg2(const char* value, size_t size);
  ::std::string* mutable_arg2();
  ::std::string* release_arg2();
  void set_allocated_arg2(::std::string* arg2);

  // required string arg3 = 5;
  bool has_arg3() const;
  void clear_arg3();
  static const int kArg3FieldNumber = 5;
  const ::std::string& arg3() const;
  void set_arg3(const ::std::string& value);
  void set_arg3(const char* value);
  void set_arg3(const char* value, size_t size);
  ::std::string* mutable_arg3();
  ::std::string* release_arg3();
  void set_allocated_arg3(::std::string* arg3);

  // required string arg4 = 6;
  bool has_arg4() const;
  void clear_arg4();
  static const int kArg4FieldNumber = 6;
  const ::std::string& arg4() const;
  void set_arg4(const ::std::string& value);
  void set_arg4(const char* value);
  void set_arg4(const char* value, size_t size);
  ::std::string* mutable_arg4();
  ::std::string* release_arg4();
  void set_allocated_arg4(::std::string* arg4);

  // required int32 adminfd = 7;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 7;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int32 gid = 8;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 8;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_Common_Req)
 private:
  inline void set_has_func();
  inline void clear_has_func();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_arg1();
  inline void clear_has_arg1();
  inline void set_has_arg2();
  inline void clear_has_arg2();
  inline void set_has_arg3();
  inline void clear_has_arg3();
  inline void set_has_arg4();
  inline void clear_has_arg4();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_gid();
  inline void clear_has_gid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr func_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr arg1_;
  ::google::protobuf::internal::ArenaStringPtr arg2_;
  ::google::protobuf::internal::ArenaStringPtr arg3_;
  ::google::protobuf::internal::ArenaStringPtr arg4_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::int32 gid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_Common_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_Common_Rsp : public ::google::protobuf::Message {
 public:
  Admin_Common_Rsp();
  virtual ~Admin_Common_Rsp();

  Admin_Common_Rsp(const Admin_Common_Rsp& from);

  inline Admin_Common_Rsp& operator=(const Admin_Common_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_Common_Rsp& default_instance();

  void Swap(Admin_Common_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_Common_Rsp* New() const { return New(NULL); }

  Admin_Common_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_Common_Rsp& from);
  void MergeFrom(const Admin_Common_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_Common_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string func = 1;
  bool has_func() const;
  void clear_func();
  static const int kFuncFieldNumber = 1;
  const ::std::string& func() const;
  void set_func(const ::std::string& value);
  void set_func(const char* value);
  void set_func(const char* value, size_t size);
  ::std::string* mutable_func();
  ::std::string* release_func();
  void set_allocated_func(::std::string* func);

  // required int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 succ = 3;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 3;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // required string arg1 = 4;
  bool has_arg1() const;
  void clear_arg1();
  static const int kArg1FieldNumber = 4;
  const ::std::string& arg1() const;
  void set_arg1(const ::std::string& value);
  void set_arg1(const char* value);
  void set_arg1(const char* value, size_t size);
  ::std::string* mutable_arg1();
  ::std::string* release_arg1();
  void set_allocated_arg1(::std::string* arg1);

  // required string arg2 = 5;
  bool has_arg2() const;
  void clear_arg2();
  static const int kArg2FieldNumber = 5;
  const ::std::string& arg2() const;
  void set_arg2(const ::std::string& value);
  void set_arg2(const char* value);
  void set_arg2(const char* value, size_t size);
  ::std::string* mutable_arg2();
  ::std::string* release_arg2();
  void set_allocated_arg2(::std::string* arg2);

  // required string arg3 = 6;
  bool has_arg3() const;
  void clear_arg3();
  static const int kArg3FieldNumber = 6;
  const ::std::string& arg3() const;
  void set_arg3(const ::std::string& value);
  void set_arg3(const char* value);
  void set_arg3(const char* value, size_t size);
  ::std::string* mutable_arg3();
  ::std::string* release_arg3();
  void set_allocated_arg3(::std::string* arg3);

  // required string arg4 = 7;
  bool has_arg4() const;
  void clear_arg4();
  static const int kArg4FieldNumber = 7;
  const ::std::string& arg4() const;
  void set_arg4(const ::std::string& value);
  void set_arg4(const char* value);
  void set_arg4(const char* value, size_t size);
  ::std::string* mutable_arg4();
  ::std::string* release_arg4();
  void set_allocated_arg4(::std::string* arg4);

  // required int32 adminfd = 8;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 8;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int32 gid = 9;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 9;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_Common_Rsp)
 private:
  inline void set_has_func();
  inline void clear_has_func();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_arg1();
  inline void clear_has_arg1();
  inline void set_has_arg2();
  inline void clear_has_arg2();
  inline void set_has_arg3();
  inline void clear_has_arg3();
  inline void set_has_arg4();
  inline void clear_has_arg4();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_gid();
  inline void clear_has_gid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr func_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr arg1_;
  ::google::protobuf::internal::ArenaStringPtr arg2_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::internal::ArenaStringPtr arg3_;
  ::google::protobuf::internal::ArenaStringPtr arg4_;
  ::google::protobuf::int32 gid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_Common_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_DelProp_Req : public ::google::protobuf::Message {
 public:
  Admin_DelProp_Req();
  virtual ~Admin_DelProp_Req();

  Admin_DelProp_Req(const Admin_DelProp_Req& from);

  inline Admin_DelProp_Req& operator=(const Admin_DelProp_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_DelProp_Req& default_instance();

  void Swap(Admin_DelProp_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_DelProp_Req* New() const { return New(NULL); }

  Admin_DelProp_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_DelProp_Req& from);
  void MergeFrom(const Admin_DelProp_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_DelProp_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int64 propID = 6;
  bool has_propid() const;
  void clear_propid();
  static const int kPropIDFieldNumber = 6;
  ::google::protobuf::int64 propid() const;
  void set_propid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Admin_DelProp_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_propid();
  inline void clear_has_propid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int64 propid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_DelProp_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_DelProp_Rsp : public ::google::protobuf::Message {
 public:
  Admin_DelProp_Rsp();
  virtual ~Admin_DelProp_Rsp();

  Admin_DelProp_Rsp(const Admin_DelProp_Rsp& from);

  inline Admin_DelProp_Rsp& operator=(const Admin_DelProp_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_DelProp_Rsp& default_instance();

  void Swap(Admin_DelProp_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_DelProp_Rsp* New() const { return New(NULL); }

  Admin_DelProp_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_DelProp_Rsp& from);
  void MergeFrom(const Admin_DelProp_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_DelProp_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int64 propID = 2;
  bool has_propid() const;
  void clear_propid();
  static const int kPropIDFieldNumber = 2;
  ::google::protobuf::int64 propid() const;
  void set_propid(::google::protobuf::int64 value);

  // required int32 infoID = 3;
  bool has_infoid() const;
  void clear_infoid();
  static const int kInfoIDFieldNumber = 3;
  ::google::protobuf::int32 infoid() const;
  void set_infoid(::google::protobuf::int32 value);

  // required int32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 delamount = 5;
  bool has_delamount() const;
  void clear_delamount();
  static const int kDelamountFieldNumber = 5;
  ::google::protobuf::int32 delamount() const;
  void set_delamount(::google::protobuf::int32 value);

  // required int32 gid = 6;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 6;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 7;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 7;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 8 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 8;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 9;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 9;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_DelProp_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_infoid();
  inline void clear_has_infoid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_delamount();
  inline void clear_has_delamount();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 propid_;
  ::google::protobuf::int32 infoid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 delamount_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_DelProp_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_RunTask_Req : public ::google::protobuf::Message {
 public:
  Admin_RunTask_Req();
  virtual ~Admin_RunTask_Req();

  Admin_RunTask_Req(const Admin_RunTask_Req& from);

  inline Admin_RunTask_Req& operator=(const Admin_RunTask_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_RunTask_Req& default_instance();

  void Swap(Admin_RunTask_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_RunTask_Req* New() const { return New(NULL); }

  Admin_RunTask_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_RunTask_Req& from);
  void MergeFrom(const Admin_RunTask_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_RunTask_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 taskid = 2;
  bool has_taskid() const;
  void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  ::google::protobuf::int32 taskid() const;
  void set_taskid(::google::protobuf::int32 value);

  // required int32 step = 3;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 3;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_RunTask_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_RunTask_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_RunTask_Rsp : public ::google::protobuf::Message {
 public:
  Admin_RunTask_Rsp();
  virtual ~Admin_RunTask_Rsp();

  Admin_RunTask_Rsp(const Admin_RunTask_Rsp& from);

  inline Admin_RunTask_Rsp& operator=(const Admin_RunTask_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_RunTask_Rsp& default_instance();

  void Swap(Admin_RunTask_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_RunTask_Rsp* New() const { return New(NULL); }

  Admin_RunTask_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_RunTask_Rsp& from);
  void MergeFrom(const Admin_RunTask_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_RunTask_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 taskid = 2;
  bool has_taskid() const;
  void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  ::google::protobuf::int32 taskid() const;
  void set_taskid(::google::protobuf::int32 value);

  // required int32 step = 3;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 3;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_RunTask_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 taskid_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_RunTask_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_BroadCast_Req : public ::google::protobuf::Message {
 public:
  Admin_BroadCast_Req();
  virtual ~Admin_BroadCast_Req();

  Admin_BroadCast_Req(const Admin_BroadCast_Req& from);

  inline Admin_BroadCast_Req& operator=(const Admin_BroadCast_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_BroadCast_Req& default_instance();

  void Swap(Admin_BroadCast_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_BroadCast_Req* New() const { return New(NULL); }

  Admin_BroadCast_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_BroadCast_Req& from);
  void MergeFrom(const Admin_BroadCast_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_BroadCast_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_BroadCast_Req)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_BroadCast_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_BroadCast_Rsp : public ::google::protobuf::Message {
 public:
  Admin_BroadCast_Rsp();
  virtual ~Admin_BroadCast_Rsp();

  Admin_BroadCast_Rsp(const Admin_BroadCast_Rsp& from);

  inline Admin_BroadCast_Rsp& operator=(const Admin_BroadCast_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_BroadCast_Rsp& default_instance();

  void Swap(Admin_BroadCast_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_BroadCast_Rsp* New() const { return New(NULL); }

  Admin_BroadCast_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_BroadCast_Rsp& from);
  void MergeFrom(const Admin_BroadCast_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_BroadCast_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_BroadCast_Rsp)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_BroadCast_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class FluentPriceItem : public ::google::protobuf::Message {
 public:
  FluentPriceItem();
  virtual ~FluentPriceItem();

  FluentPriceItem(const FluentPriceItem& from);

  inline FluentPriceItem& operator=(const FluentPriceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FluentPriceItem& default_instance();

  void Swap(FluentPriceItem* other);

  // implements Message ----------------------------------------------

  inline FluentPriceItem* New() const { return New(NULL); }

  FluentPriceItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FluentPriceItem& from);
  void MergeFrom(const FluentPriceItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FluentPriceItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type_id = 1;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // optional int32 price = 2;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional int32 rand_n1 = 3 [default = 0];
  bool has_rand_n1() const;
  void clear_rand_n1();
  static const int kRandN1FieldNumber = 3;
  ::google::protobuf::int32 rand_n1() const;
  void set_rand_n1(::google::protobuf::int32 value);

  // optional int32 rand_n2 = 4 [default = 0];
  bool has_rand_n2() const;
  void clear_rand_n2();
  static const int kRandN2FieldNumber = 4;
  ::google::protobuf::int32 rand_n2() const;
  void set_rand_n2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FluentPriceItem)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_rand_n1();
  inline void clear_has_rand_n1();
  inline void set_has_rand_n2();
  inline void clear_has_rand_n2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 rand_n1_;
  ::google::protobuf::int32 rand_n2_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static FluentPriceItem* default_instance_;
};
// -------------------------------------------------------------------

class Admin_FluentPrice_Req : public ::google::protobuf::Message {
 public:
  Admin_FluentPrice_Req();
  virtual ~Admin_FluentPrice_Req();

  Admin_FluentPrice_Req(const Admin_FluentPrice_Req& from);

  inline Admin_FluentPrice_Req& operator=(const Admin_FluentPrice_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_FluentPrice_Req& default_instance();

  void Swap(Admin_FluentPrice_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_FluentPrice_Req* New() const { return New(NULL); }

  Admin_FluentPrice_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_FluentPrice_Req& from);
  void MergeFrom(const Admin_FluentPrice_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_FluentPrice_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 2 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 2;
  bool fromweb() const;
  void set_fromweb(bool value);

  // repeated .FluentPriceItem price_item = 3;
  int price_item_size() const;
  void clear_price_item();
  static const int kPriceItemFieldNumber = 3;
  const ::FluentPriceItem& price_item(int index) const;
  ::FluentPriceItem* mutable_price_item(int index);
  ::FluentPriceItem* add_price_item();
  const ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >&
      price_item() const;
  ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >*
      mutable_price_item();

  // @@protoc_insertion_point(class_scope:Admin_FluentPrice_Req)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::RepeatedPtrField< ::FluentPriceItem > price_item_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_FluentPrice_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_FluentPrice_Rsp : public ::google::protobuf::Message {
 public:
  Admin_FluentPrice_Rsp();
  virtual ~Admin_FluentPrice_Rsp();

  Admin_FluentPrice_Rsp(const Admin_FluentPrice_Rsp& from);

  inline Admin_FluentPrice_Rsp& operator=(const Admin_FluentPrice_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_FluentPrice_Rsp& default_instance();

  void Swap(Admin_FluentPrice_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_FluentPrice_Rsp* New() const { return New(NULL); }

  Admin_FluentPrice_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_FluentPrice_Rsp& from);
  void MergeFrom(const Admin_FluentPrice_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_FluentPrice_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 2 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 2;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 3;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 3;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // repeated .FluentPriceItem price_item = 4;
  int price_item_size() const;
  void clear_price_item();
  static const int kPriceItemFieldNumber = 4;
  const ::FluentPriceItem& price_item(int index) const;
  ::FluentPriceItem* mutable_price_item(int index);
  ::FluentPriceItem* add_price_item();
  const ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >&
      price_item() const;
  ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >*
      mutable_price_item();

  // @@protoc_insertion_point(class_scope:Admin_FluentPrice_Rsp)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::RepeatedPtrField< ::FluentPriceItem > price_item_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_FluentPrice_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_StatisticsOnLinePeople_Req : public ::google::protobuf::Message {
 public:
  Admin_StatisticsOnLinePeople_Req();
  virtual ~Admin_StatisticsOnLinePeople_Req();

  Admin_StatisticsOnLinePeople_Req(const Admin_StatisticsOnLinePeople_Req& from);

  inline Admin_StatisticsOnLinePeople_Req& operator=(const Admin_StatisticsOnLinePeople_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_StatisticsOnLinePeople_Req& default_instance();

  void Swap(Admin_StatisticsOnLinePeople_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_StatisticsOnLinePeople_Req* New() const { return New(NULL); }

  Admin_StatisticsOnLinePeople_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_StatisticsOnLinePeople_Req& from);
  void MergeFrom(const Admin_StatisticsOnLinePeople_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_StatisticsOnLinePeople_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 2 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 2;
  bool fromweb() const;
  void set_fromweb(bool value);

  // optional int32 gid = 3 [default = 0];
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_StatisticsOnLinePeople_Req)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_gid();
  inline void clear_has_gid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 gid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_StatisticsOnLinePeople_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_StatisticsOnLinePeople_Rsp : public ::google::protobuf::Message {
 public:
  Admin_StatisticsOnLinePeople_Rsp();
  virtual ~Admin_StatisticsOnLinePeople_Rsp();

  Admin_StatisticsOnLinePeople_Rsp(const Admin_StatisticsOnLinePeople_Rsp& from);

  inline Admin_StatisticsOnLinePeople_Rsp& operator=(const Admin_StatisticsOnLinePeople_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_StatisticsOnLinePeople_Rsp& default_instance();

  void Swap(Admin_StatisticsOnLinePeople_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_StatisticsOnLinePeople_Rsp* New() const { return New(NULL); }

  Admin_StatisticsOnLinePeople_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_StatisticsOnLinePeople_Rsp& from);
  void MergeFrom(const Admin_StatisticsOnLinePeople_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_StatisticsOnLinePeople_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 2 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 2;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 3;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 3;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional int32 online_num = 4 [default = 0];
  bool has_online_num() const;
  void clear_online_num();
  static const int kOnlineNumFieldNumber = 4;
  ::google::protobuf::int32 online_num() const;
  void set_online_num(::google::protobuf::int32 value);

  // optional int32 gid = 5 [default = 0];
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 5;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_StatisticsOnLinePeople_Rsp)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_online_num();
  inline void clear_has_online_num();
  inline void set_has_gid();
  inline void clear_has_gid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::int32 online_num_;
  ::google::protobuf::int32 gid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_StatisticsOnLinePeople_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_KickPlayer_Req : public ::google::protobuf::Message {
 public:
  Admin_KickPlayer_Req();
  virtual ~Admin_KickPlayer_Req();

  Admin_KickPlayer_Req(const Admin_KickPlayer_Req& from);

  inline Admin_KickPlayer_Req& operator=(const Admin_KickPlayer_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_KickPlayer_Req& default_instance();

  void Swap(Admin_KickPlayer_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_KickPlayer_Req* New() const { return New(NULL); }

  Admin_KickPlayer_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_KickPlayer_Req& from);
  void MergeFrom(const Admin_KickPlayer_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_KickPlayer_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 2 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 2;
  bool fromweb() const;
  void set_fromweb(bool value);

  // optional int64 uid = 3 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Admin_KickPlayer_Req)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int64 uid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_KickPlayer_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_KickPlayer_Rsp : public ::google::protobuf::Message {
 public:
  Admin_KickPlayer_Rsp();
  virtual ~Admin_KickPlayer_Rsp();

  Admin_KickPlayer_Rsp(const Admin_KickPlayer_Rsp& from);

  inline Admin_KickPlayer_Rsp& operator=(const Admin_KickPlayer_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_KickPlayer_Rsp& default_instance();

  void Swap(Admin_KickPlayer_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_KickPlayer_Rsp* New() const { return New(NULL); }

  Admin_KickPlayer_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_KickPlayer_Rsp& from);
  void MergeFrom(const Admin_KickPlayer_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_KickPlayer_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 2 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 2;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 3;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 3;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional int64 uid = 4 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Admin_KickPlayer_Rsp)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_uid();
  inline void clear_has_uid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_KickPlayer_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_STR_Req : public ::google::protobuf::Message {
 public:
  Admin_STR_Req();
  virtual ~Admin_STR_Req();

  Admin_STR_Req(const Admin_STR_Req& from);

  inline Admin_STR_Req& operator=(const Admin_STR_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_STR_Req& default_instance();

  void Swap(Admin_STR_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_STR_Req* New() const { return New(NULL); }

  Admin_STR_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_STR_Req& from);
  void MergeFrom(const Admin_STR_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_STR_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional int64 uid = 3 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional string str = 4;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 4;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional string openid = 5;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 5;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // @@protoc_insertion_point(class_scope:Admin_STR_Req)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_openid();
  inline void clear_has_openid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::int32 adminfd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_STR_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_STR_Rsp : public ::google::protobuf::Message {
 public:
  Admin_STR_Rsp();
  virtual ~Admin_STR_Rsp();

  Admin_STR_Rsp(const Admin_STR_Rsp& from);

  inline Admin_STR_Rsp& operator=(const Admin_STR_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_STR_Rsp& default_instance();

  void Swap(Admin_STR_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_STR_Rsp* New() const { return New(NULL); }

  Admin_STR_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_STR_Rsp& from);
  void MergeFrom(const Admin_STR_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_STR_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 1;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 1;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional int64 uid = 2 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 succ = 3;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 3;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional string str = 4;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 4;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional string openid = 5;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 5;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // @@protoc_insertion_point(class_scope:Admin_STR_Rsp)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_openid();
  inline void clear_has_openid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_STR_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class WebUnlock : public ::google::protobuf::Message {
 public:
  WebUnlock();
  virtual ~WebUnlock();

  WebUnlock(const WebUnlock& from);

  inline WebUnlock& operator=(const WebUnlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebUnlock& default_instance();

  void Swap(WebUnlock* other);

  // implements Message ----------------------------------------------

  inline WebUnlock* New() const { return New(NULL); }

  WebUnlock* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebUnlock& from);
  void MergeFrom(const WebUnlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebUnlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 balance = 3;
  bool has_balance() const;
  void clear_balance();
  static const int kBalanceFieldNumber = 3;
  ::google::protobuf::int32 balance() const;
  void set_balance(::google::protobuf::int32 value);

  // required int32 pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // required string sid = 5;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 5;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional bool succ = 7 [default = false];
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  bool succ() const;
  void set_succ(bool value);

  // optional string infodetail = 8 [default = ""];
  bool has_infodetail() const;
  void clear_infodetail();
  static const int kInfodetailFieldNumber = 8;
  const ::std::string& infodetail() const;
  void set_infodetail(const ::std::string& value);
  void set_infodetail(const char* value);
  void set_infodetail(const char* value, size_t size);
  ::std::string* mutable_infodetail();
  ::std::string* release_infodetail();
  void set_allocated_infodetail(::std::string* infodetail);

  // required int32 fd = 9;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 9;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // required string key = 10;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 10;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:WebUnlock)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_balance();
  inline void clear_has_balance();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_infodetail();
  inline void clear_has_infodetail();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_key();
  inline void clear_has_key();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 balance_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::int32 pos_;
  bool succ_;
  ::google::protobuf::internal::ArenaStringPtr infodetail_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 fd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebUnlock* default_instance_;
};
// -------------------------------------------------------------------

class WebAddEmployee : public ::google::protobuf::Message {
 public:
  WebAddEmployee();
  virtual ~WebAddEmployee();

  WebAddEmployee(const WebAddEmployee& from);

  inline WebAddEmployee& operator=(const WebAddEmployee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebAddEmployee& default_instance();

  void Swap(WebAddEmployee* other);

  // implements Message ----------------------------------------------

  inline WebAddEmployee* New() const { return New(NULL); }

  WebAddEmployee* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebAddEmployee& from);
  void MergeFrom(const WebAddEmployee& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebAddEmployee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 balance = 3;
  bool has_balance() const;
  void clear_balance();
  static const int kBalanceFieldNumber = 3;
  ::google::protobuf::int32 balance() const;
  void set_balance(::google::protobuf::int32 value);

  // required int32 hiretype = 4;
  bool has_hiretype() const;
  void clear_hiretype();
  static const int kHiretypeFieldNumber = 4;
  ::google::protobuf::int32 hiretype() const;
  void set_hiretype(::google::protobuf::int32 value);

  // required int32 index = 5;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 5;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // required string sid = 6;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 6;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional bool succ = 7 [default = false];
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  bool succ() const;
  void set_succ(bool value);

  // optional string infodetail = 8 [default = ""];
  bool has_infodetail() const;
  void clear_infodetail();
  static const int kInfodetailFieldNumber = 8;
  const ::std::string& infodetail() const;
  void set_infodetail(const ::std::string& value);
  void set_infodetail(const char* value);
  void set_infodetail(const char* value, size_t size);
  ::std::string* mutable_infodetail();
  ::std::string* release_infodetail();
  void set_allocated_infodetail(::std::string* infodetail);

  // required int32 fd = 9;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 9;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // required string key = 10;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 10;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:WebAddEmployee)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_balance();
  inline void clear_has_balance();
  inline void set_has_hiretype();
  inline void clear_has_hiretype();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_infodetail();
  inline void clear_has_infodetail();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_key();
  inline void clear_has_key();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 balance_;
  ::google::protobuf::int32 hiretype_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::internal::ArenaStringPtr infodetail_;
  bool succ_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebAddEmployee* default_instance_;
};
// -------------------------------------------------------------------

class WebBuyDetail : public ::google::protobuf::Message {
 public:
  WebBuyDetail();
  virtual ~WebBuyDetail();

  WebBuyDetail(const WebBuyDetail& from);

  inline WebBuyDetail& operator=(const WebBuyDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebBuyDetail& default_instance();

  void Swap(WebBuyDetail* other);

  // implements Message ----------------------------------------------

  inline WebBuyDetail* New() const { return New(NULL); }

  WebBuyDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebBuyDetail& from);
  void MergeFrom(const WebBuyDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebBuyDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 shopid = 1;
  bool has_shopid() const;
  void clear_shopid();
  static const int kShopidFieldNumber = 1;
  ::google::protobuf::int64 shopid() const;
  void set_shopid(::google::protobuf::int64 value);

  // required int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // required int32 indate = 3;
  bool has_indate() const;
  void clear_indate();
  static const int kIndateFieldNumber = 3;
  ::google::protobuf::int32 indate() const;
  void set_indate(::google::protobuf::int32 value);

  // required int32 price = 4;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 4;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional int32 posx = 5;
  bool has_posx() const;
  void clear_posx();
  static const int kPosxFieldNumber = 5;
  ::google::protobuf::int32 posx() const;
  void set_posx(::google::protobuf::int32 value);

  // optional int32 posy = 6;
  bool has_posy() const;
  void clear_posy();
  static const int kPosyFieldNumber = 6;
  ::google::protobuf::int32 posy() const;
  void set_posy(::google::protobuf::int32 value);

  // optional int32 direction = 7;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 7;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WebBuyDetail)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_indate();
  inline void clear_has_indate();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_direction();
  inline void clear_has_direction();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 shopid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 indate_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  ::google::protobuf::int32 direction_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebBuyDetail* default_instance_;
};
// -------------------------------------------------------------------

class WebBuy : public ::google::protobuf::Message {
 public:
  WebBuy();
  virtual ~WebBuy();

  WebBuy(const WebBuy& from);

  inline WebBuy& operator=(const WebBuy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebBuy& default_instance();

  void Swap(WebBuy* other);

  // implements Message ----------------------------------------------

  inline WebBuy* New() const { return New(NULL); }

  WebBuy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebBuy& from);
  void MergeFrom(const WebBuy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebBuy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 leftcoin = 2;
  bool has_leftcoin() const;
  void clear_leftcoin();
  static const int kLeftcoinFieldNumber = 2;
  ::google::protobuf::int32 leftcoin() const;
  void set_leftcoin(::google::protobuf::int32 value);

  // required int32 bandcoincost = 3;
  bool has_bandcoincost() const;
  void clear_bandcoincost();
  static const int kBandcoincostFieldNumber = 3;
  ::google::protobuf::int32 bandcoincost() const;
  void set_bandcoincost(::google::protobuf::int32 value);

  // repeated .WebBuyDetail items = 4;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 4;
  const ::WebBuyDetail& items(int index) const;
  ::WebBuyDetail* mutable_items(int index);
  ::WebBuyDetail* add_items();
  const ::google::protobuf::RepeatedPtrField< ::WebBuyDetail >&
      items() const;
  ::google::protobuf::RepeatedPtrField< ::WebBuyDetail >*
      mutable_items();

  // required string sid = 5;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 5;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional bool succ = 6 [default = false];
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 6;
  bool succ() const;
  void set_succ(bool value);

  // optional string infodetail = 7 [default = ""];
  bool has_infodetail() const;
  void clear_infodetail();
  static const int kInfodetailFieldNumber = 7;
  const ::std::string& infodetail() const;
  void set_infodetail(const ::std::string& value);
  void set_infodetail(const char* value);
  void set_infodetail(const char* value, size_t size);
  ::std::string* mutable_infodetail();
  ::std::string* release_infodetail();
  void set_allocated_infodetail(::std::string* infodetail);

  // required int32 fd = 8;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 8;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // required string key = 9;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 9;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bool directgive = 10 [default = false];
  bool has_directgive() const;
  void clear_directgive();
  static const int kDirectgiveFieldNumber = 10;
  bool directgive() const;
  void set_directgive(bool value);

  // optional bool limited = 11 [default = false];
  bool has_limited() const;
  void clear_limited();
  static const int kLimitedFieldNumber = 11;
  bool limited() const;
  void set_limited(bool value);

  // optional string openid = 12 [default = ""];
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 12;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional bool use_openid = 13 [default = false];
  bool has_use_openid() const;
  void clear_use_openid();
  static const int kUseOpenidFieldNumber = 13;
  bool use_openid() const;
  void set_use_openid(bool value);

  // @@protoc_insertion_point(class_scope:WebBuy)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_leftcoin();
  inline void clear_has_leftcoin();
  inline void set_has_bandcoincost();
  inline void clear_has_bandcoincost();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_infodetail();
  inline void clear_has_infodetail();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_directgive();
  inline void clear_has_directgive();
  inline void set_has_limited();
  inline void clear_has_limited();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_use_openid();
  inline void clear_has_use_openid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 leftcoin_;
  ::google::protobuf::int32 bandcoincost_;
  ::google::protobuf::RepeatedPtrField< ::WebBuyDetail > items_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::internal::ArenaStringPtr infodetail_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 fd_;
  bool succ_;
  bool directgive_;
  bool limited_;
  bool use_openid_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebBuy* default_instance_;
};
// -------------------------------------------------------------------

class WebBuy3 : public ::google::protobuf::Message {
 public:
  WebBuy3();
  virtual ~WebBuy3();

  WebBuy3(const WebBuy3& from);

  inline WebBuy3& operator=(const WebBuy3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebBuy3& default_instance();

  void Swap(WebBuy3* other);

  // implements Message ----------------------------------------------

  inline WebBuy3* New() const { return New(NULL); }

  WebBuy3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebBuy3& from);
  void MergeFrom(const WebBuy3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebBuy3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required string valueA = 3;
  bool has_valuea() const;
  void clear_valuea();
  static const int kValueAFieldNumber = 3;
  const ::std::string& valuea() const;
  void set_valuea(const ::std::string& value);
  void set_valuea(const char* value);
  void set_valuea(const char* value, size_t size);
  ::std::string* mutable_valuea();
  ::std::string* release_valuea();
  void set_allocated_valuea(::std::string* valuea);

  // required string valueB = 4;
  bool has_valueb() const;
  void clear_valueb();
  static const int kValueBFieldNumber = 4;
  const ::std::string& valueb() const;
  void set_valueb(const ::std::string& value);
  void set_valueb(const char* value);
  void set_valueb(const char* value, size_t size);
  ::std::string* mutable_valueb();
  ::std::string* release_valueb();
  void set_allocated_valueb(::std::string* valueb);

  // required string sid = 5;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 5;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // required int32 fd = 6;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 6;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // optional int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WebBuy3)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_valuea();
  inline void clear_has_valuea();
  inline void set_has_valueb();
  inline void clear_has_valueb();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr valuea_;
  ::google::protobuf::internal::ArenaStringPtr valueb_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebBuy3* default_instance_;
};
// -------------------------------------------------------------------

class WebLengthenIndateDetail : public ::google::protobuf::Message {
 public:
  WebLengthenIndateDetail();
  virtual ~WebLengthenIndateDetail();

  WebLengthenIndateDetail(const WebLengthenIndateDetail& from);

  inline WebLengthenIndateDetail& operator=(const WebLengthenIndateDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebLengthenIndateDetail& default_instance();

  void Swap(WebLengthenIndateDetail* other);

  // implements Message ----------------------------------------------

  inline WebLengthenIndateDetail* New() const { return New(NULL); }

  WebLengthenIndateDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebLengthenIndateDetail& from);
  void MergeFrom(const WebLengthenIndateDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebLengthenIndateDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 shopid = 1;
  bool has_shopid() const;
  void clear_shopid();
  static const int kShopidFieldNumber = 1;
  ::google::protobuf::int64 shopid() const;
  void set_shopid(::google::protobuf::int64 value);

  // required int32 bagpos = 2;
  bool has_bagpos() const;
  void clear_bagpos();
  static const int kBagposFieldNumber = 2;
  ::google::protobuf::int32 bagpos() const;
  void set_bagpos(::google::protobuf::int32 value);

  // required string id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required int32 indate = 4;
  bool has_indate() const;
  void clear_indate();
  static const int kIndateFieldNumber = 4;
  ::google::protobuf::int32 indate() const;
  void set_indate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WebLengthenIndateDetail)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_bagpos();
  inline void clear_has_bagpos();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_indate();
  inline void clear_has_indate();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 shopid_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 bagpos_;
  ::google::protobuf::int32 indate_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebLengthenIndateDetail* default_instance_;
};
// -------------------------------------------------------------------

class WebLengthenIndate : public ::google::protobuf::Message {
 public:
  WebLengthenIndate();
  virtual ~WebLengthenIndate();

  WebLengthenIndate(const WebLengthenIndate& from);

  inline WebLengthenIndate& operator=(const WebLengthenIndate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebLengthenIndate& default_instance();

  void Swap(WebLengthenIndate* other);

  // implements Message ----------------------------------------------

  inline WebLengthenIndate* New() const { return New(NULL); }

  WebLengthenIndate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebLengthenIndate& from);
  void MergeFrom(const WebLengthenIndate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebLengthenIndate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 leftcoin = 2;
  bool has_leftcoin() const;
  void clear_leftcoin();
  static const int kLeftcoinFieldNumber = 2;
  ::google::protobuf::int32 leftcoin() const;
  void set_leftcoin(::google::protobuf::int32 value);

  // required int32 bandcoincost = 3;
  bool has_bandcoincost() const;
  void clear_bandcoincost();
  static const int kBandcoincostFieldNumber = 3;
  ::google::protobuf::int32 bandcoincost() const;
  void set_bandcoincost(::google::protobuf::int32 value);

  // repeated .WebLengthenIndateDetail items = 4;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 4;
  const ::WebLengthenIndateDetail& items(int index) const;
  ::WebLengthenIndateDetail* mutable_items(int index);
  ::WebLengthenIndateDetail* add_items();
  const ::google::protobuf::RepeatedPtrField< ::WebLengthenIndateDetail >&
      items() const;
  ::google::protobuf::RepeatedPtrField< ::WebLengthenIndateDetail >*
      mutable_items();

  // required string sid = 5;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 5;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional bool succ = 6 [default = false];
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 6;
  bool succ() const;
  void set_succ(bool value);

  // optional string infodetail = 7 [default = ""];
  bool has_infodetail() const;
  void clear_infodetail();
  static const int kInfodetailFieldNumber = 7;
  const ::std::string& infodetail() const;
  void set_infodetail(const ::std::string& value);
  void set_infodetail(const char* value);
  void set_infodetail(const char* value, size_t size);
  ::std::string* mutable_infodetail();
  ::std::string* release_infodetail();
  void set_allocated_infodetail(::std::string* infodetail);

  // required int32 fd = 8;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 8;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WebLengthenIndate)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_leftcoin();
  inline void clear_has_leftcoin();
  inline void set_has_bandcoincost();
  inline void clear_has_bandcoincost();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_infodetail();
  inline void clear_has_infodetail();
  inline void set_has_fd();
  inline void clear_has_fd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 leftcoin_;
  ::google::protobuf::int32 bandcoincost_;
  ::google::protobuf::RepeatedPtrField< ::WebLengthenIndateDetail > items_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::internal::ArenaStringPtr infodetail_;
  bool succ_;
  ::google::protobuf::int32 fd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebLengthenIndate* default_instance_;
};
// -------------------------------------------------------------------

class WebCheckBandCoin : public ::google::protobuf::Message {
 public:
  WebCheckBandCoin();
  virtual ~WebCheckBandCoin();

  WebCheckBandCoin(const WebCheckBandCoin& from);

  inline WebCheckBandCoin& operator=(const WebCheckBandCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebCheckBandCoin& default_instance();

  void Swap(WebCheckBandCoin* other);

  // implements Message ----------------------------------------------

  inline WebCheckBandCoin* New() const { return New(NULL); }

  WebCheckBandCoin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebCheckBandCoin& from);
  void MergeFrom(const WebCheckBandCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebCheckBandCoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string openid = 1;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 1;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional int32 value = 2 [default = 0];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // required int32 fd = 3;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 3;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // required string sid = 4;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 4;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // @@protoc_insertion_point(class_scope:WebCheckBandCoin)
 private:
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_sid();
  inline void clear_has_sid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebCheckBandCoin* default_instance_;
};
// -------------------------------------------------------------------

class WebBuyCfm : public ::google::protobuf::Message {
 public:
  WebBuyCfm();
  virtual ~WebBuyCfm();

  WebBuyCfm(const WebBuyCfm& from);

  inline WebBuyCfm& operator=(const WebBuyCfm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebBuyCfm& default_instance();

  void Swap(WebBuyCfm* other);

  // implements Message ----------------------------------------------

  inline WebBuyCfm* New() const { return New(NULL); }

  WebBuyCfm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebBuyCfm& from);
  void MergeFrom(const WebBuyCfm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WebBuyCfm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required string sid = 5;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 5;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional bool succ = 6 [default = false];
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 6;
  bool succ() const;
  void set_succ(bool value);

  // optional string infodetail = 7 [default = ""];
  bool has_infodetail() const;
  void clear_infodetail();
  static const int kInfodetailFieldNumber = 7;
  const ::std::string& infodetail() const;
  void set_infodetail(const ::std::string& value);
  void set_infodetail(const char* value);
  void set_infodetail(const char* value, size_t size);
  ::std::string* mutable_infodetail();
  ::std::string* release_infodetail();
  void set_allocated_infodetail(::std::string* infodetail);

  // required int32 fd = 8;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 8;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // required string key = 9;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 9;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:WebBuyCfm)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_infodetail();
  inline void clear_has_infodetail();
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_key();
  inline void clear_has_key();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::internal::ArenaStringPtr infodetail_;
  bool succ_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static WebBuyCfm* default_instance_;
};
// -------------------------------------------------------------------

class Admin_BanChat_Req : public ::google::protobuf::Message {
 public:
  Admin_BanChat_Req();
  virtual ~Admin_BanChat_Req();

  Admin_BanChat_Req(const Admin_BanChat_Req& from);

  inline Admin_BanChat_Req& operator=(const Admin_BanChat_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_BanChat_Req& default_instance();

  void Swap(Admin_BanChat_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_BanChat_Req* New() const { return New(NULL); }

  Admin_BanChat_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_BanChat_Req& from);
  void MergeFrom(const Admin_BanChat_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_BanChat_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required bool isban = 2;
  bool has_isban() const;
  void clear_isban();
  static const int kIsbanFieldNumber = 2;
  bool isban() const;
  void set_isban(bool value);

  // required int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional string openid = 6;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 6;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional bool fromweb = 7 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 7;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_BanChat_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_isban();
  inline void clear_has_isban();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 gid_;
  bool isban_;
  bool fromweb_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_BanChat_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_BanChat_Rsp : public ::google::protobuf::Message {
 public:
  Admin_BanChat_Rsp();
  virtual ~Admin_BanChat_Rsp();

  Admin_BanChat_Rsp(const Admin_BanChat_Rsp& from);

  inline Admin_BanChat_Rsp& operator=(const Admin_BanChat_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_BanChat_Rsp& default_instance();

  void Swap(Admin_BanChat_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_BanChat_Rsp* New() const { return New(NULL); }

  Admin_BanChat_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_BanChat_Rsp& from);
  void MergeFrom(const Admin_BanChat_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_BanChat_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required bool isban = 2;
  bool has_isban() const;
  void clear_isban();
  static const int kIsbanFieldNumber = 2;
  bool isban() const;
  void set_isban(bool value);

  // required int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional string openid = 6;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 6;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional bool fromweb = 7 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 7;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 8;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 8;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_BanChat_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_isban();
  inline void clear_has_isban();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 gid_;
  bool isban_;
  bool fromweb_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_BanChat_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_BanLogin_Req : public ::google::protobuf::Message {
 public:
  Admin_BanLogin_Req();
  virtual ~Admin_BanLogin_Req();

  Admin_BanLogin_Req(const Admin_BanLogin_Req& from);

  inline Admin_BanLogin_Req& operator=(const Admin_BanLogin_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_BanLogin_Req& default_instance();

  void Swap(Admin_BanLogin_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_BanLogin_Req* New() const { return New(NULL); }

  Admin_BanLogin_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_BanLogin_Req& from);
  void MergeFrom(const Admin_BanLogin_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_BanLogin_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required bool isban = 2;
  bool has_isban() const;
  void clear_isban();
  static const int kIsbanFieldNumber = 2;
  bool isban() const;
  void set_isban(bool value);

  // required int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional string openid = 6;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 6;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional bool fromweb = 7 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 7;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_BanLogin_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_isban();
  inline void clear_has_isban();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 gid_;
  bool isban_;
  bool fromweb_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_BanLogin_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_BanLogin_Rsp : public ::google::protobuf::Message {
 public:
  Admin_BanLogin_Rsp();
  virtual ~Admin_BanLogin_Rsp();

  Admin_BanLogin_Rsp(const Admin_BanLogin_Rsp& from);

  inline Admin_BanLogin_Rsp& operator=(const Admin_BanLogin_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_BanLogin_Rsp& default_instance();

  void Swap(Admin_BanLogin_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_BanLogin_Rsp* New() const { return New(NULL); }

  Admin_BanLogin_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_BanLogin_Rsp& from);
  void MergeFrom(const Admin_BanLogin_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_BanLogin_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required bool isban = 2;
  bool has_isban() const;
  void clear_isban();
  static const int kIsbanFieldNumber = 2;
  bool isban() const;
  void set_isban(bool value);

  // required int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional string openid = 6;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 6;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional bool fromweb = 7 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 7;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 8;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 8;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_BanLogin_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_isban();
  inline void clear_has_isban();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 gid_;
  bool isban_;
  bool fromweb_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_BanLogin_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddPoint_Req : public ::google::protobuf::Message {
 public:
  Admin_AddPoint_Req();
  virtual ~Admin_AddPoint_Req();

  Admin_AddPoint_Req(const Admin_AddPoint_Req& from);

  inline Admin_AddPoint_Req& operator=(const Admin_AddPoint_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddPoint_Req& default_instance();

  void Swap(Admin_AddPoint_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddPoint_Req* New() const { return New(NULL); }

  Admin_AddPoint_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddPoint_Req& from);
  void MergeFrom(const Admin_AddPoint_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddPoint_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 point = 2;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 2;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_AddPoint_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddPoint_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddPoint_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddPoint_Rsp();
  virtual ~Admin_AddPoint_Rsp();

  Admin_AddPoint_Rsp(const Admin_AddPoint_Rsp& from);

  inline Admin_AddPoint_Rsp& operator=(const Admin_AddPoint_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddPoint_Rsp& default_instance();

  void Swap(Admin_AddPoint_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddPoint_Rsp* New() const { return New(NULL); }

  Admin_AddPoint_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddPoint_Rsp& from);
  void MergeFrom(const Admin_AddPoint_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddPoint_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 oldpoint = 2;
  bool has_oldpoint() const;
  void clear_oldpoint();
  static const int kOldpointFieldNumber = 2;
  ::google::protobuf::int32 oldpoint() const;
  void set_oldpoint(::google::protobuf::int32 value);

  // required int32 newpoint = 3;
  bool has_newpoint() const;
  void clear_newpoint();
  static const int kNewpointFieldNumber = 3;
  ::google::protobuf::int32 newpoint() const;
  void set_newpoint(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddPoint_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_oldpoint();
  inline void clear_has_oldpoint();
  inline void set_has_newpoint();
  inline void clear_has_newpoint();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 oldpoint_;
  ::google::protobuf::int32 newpoint_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddPoint_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddIndate_Req : public ::google::protobuf::Message {
 public:
  Admin_AddIndate_Req();
  virtual ~Admin_AddIndate_Req();

  Admin_AddIndate_Req(const Admin_AddIndate_Req& from);

  inline Admin_AddIndate_Req& operator=(const Admin_AddIndate_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddIndate_Req& default_instance();

  void Swap(Admin_AddIndate_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddIndate_Req* New() const { return New(NULL); }

  Admin_AddIndate_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddIndate_Req& from);
  void MergeFrom(const Admin_AddIndate_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddIndate_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 infoID = 2;
  bool has_infoid() const;
  void clear_infoid();
  static const int kInfoIDFieldNumber = 2;
  ::google::protobuf::int32 infoid() const;
  void set_infoid(::google::protobuf::int32 value);

  // required int32 position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required int32 hour = 4;
  bool has_hour() const;
  void clear_hour();
  static const int kHourFieldNumber = 4;
  ::google::protobuf::int32 hour() const;
  void set_hour(::google::protobuf::int32 value);

  // required int32 gid = 5;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 5;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 6;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 6;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 7 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 7;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_AddIndate_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_infoid();
  inline void clear_has_infoid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_hour();
  inline void clear_has_hour();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 infoid_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 hour_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddIndate_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddIndate_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddIndate_Rsp();
  virtual ~Admin_AddIndate_Rsp();

  Admin_AddIndate_Rsp(const Admin_AddIndate_Rsp& from);

  inline Admin_AddIndate_Rsp& operator=(const Admin_AddIndate_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddIndate_Rsp& default_instance();

  void Swap(Admin_AddIndate_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddIndate_Rsp* New() const { return New(NULL); }

  Admin_AddIndate_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddIndate_Rsp& from);
  void MergeFrom(const Admin_AddIndate_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddIndate_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int64 itemID = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // required int32 infoID = 3;
  bool has_infoid() const;
  void clear_infoid();
  static const int kInfoIDFieldNumber = 3;
  ::google::protobuf::int32 infoid() const;
  void set_infoid(::google::protobuf::int32 value);

  // required int32 position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required int32 oldindate = 5;
  bool has_oldindate() const;
  void clear_oldindate();
  static const int kOldindateFieldNumber = 5;
  ::google::protobuf::int32 oldindate() const;
  void set_oldindate(::google::protobuf::int32 value);

  // required int32 newindate = 6;
  bool has_newindate() const;
  void clear_newindate();
  static const int kNewindateFieldNumber = 6;
  ::google::protobuf::int32 newindate() const;
  void set_newindate(::google::protobuf::int32 value);

  // required int32 gid = 7;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 7;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 8;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 8;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 9 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 9;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 10;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 10;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddIndate_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_infoid();
  inline void clear_has_infoid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_oldindate();
  inline void clear_has_oldindate();
  inline void set_has_newindate();
  inline void clear_has_newindate();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 infoid_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 oldindate_;
  ::google::protobuf::int32 newindate_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddIndate_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_FreshUser_Req : public ::google::protobuf::Message {
 public:
  Admin_FreshUser_Req();
  virtual ~Admin_FreshUser_Req();

  Admin_FreshUser_Req(const Admin_FreshUser_Req& from);

  inline Admin_FreshUser_Req& operator=(const Admin_FreshUser_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_FreshUser_Req& default_instance();

  void Swap(Admin_FreshUser_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_FreshUser_Req* New() const { return New(NULL); }

  Admin_FreshUser_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_FreshUser_Req& from);
  void MergeFrom(const Admin_FreshUser_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_FreshUser_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_FreshUser_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_FreshUser_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_FreshUser_Rsp : public ::google::protobuf::Message {
 public:
  Admin_FreshUser_Rsp();
  virtual ~Admin_FreshUser_Rsp();

  Admin_FreshUser_Rsp(const Admin_FreshUser_Rsp& from);

  inline Admin_FreshUser_Rsp& operator=(const Admin_FreshUser_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_FreshUser_Rsp& default_instance();

  void Swap(Admin_FreshUser_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_FreshUser_Rsp* New() const { return New(NULL); }

  Admin_FreshUser_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_FreshUser_Rsp& from);
  void MergeFrom(const Admin_FreshUser_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_FreshUser_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 3;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 3;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_FreshUser_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_FreshUser_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddMedal_Req : public ::google::protobuf::Message {
 public:
  Admin_AddMedal_Req();
  virtual ~Admin_AddMedal_Req();

  Admin_AddMedal_Req(const Admin_AddMedal_Req& from);

  inline Admin_AddMedal_Req& operator=(const Admin_AddMedal_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddMedal_Req& default_instance();

  void Swap(Admin_AddMedal_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_AddMedal_Req* New() const { return New(NULL); }

  Admin_AddMedal_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddMedal_Req& from);
  void MergeFrom(const Admin_AddMedal_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddMedal_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 medal = 2;
  bool has_medal() const;
  void clear_medal();
  static const int kMedalFieldNumber = 2;
  ::google::protobuf::int32 medal() const;
  void set_medal(::google::protobuf::int32 value);

  // required int32 gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 4;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 4;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 5 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 5;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_AddMedal_Req)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_medal();
  inline void clear_has_medal();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 medal_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddMedal_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_AddMedal_Rsp : public ::google::protobuf::Message {
 public:
  Admin_AddMedal_Rsp();
  virtual ~Admin_AddMedal_Rsp();

  Admin_AddMedal_Rsp(const Admin_AddMedal_Rsp& from);

  inline Admin_AddMedal_Rsp& operator=(const Admin_AddMedal_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_AddMedal_Rsp& default_instance();

  void Swap(Admin_AddMedal_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_AddMedal_Rsp* New() const { return New(NULL); }

  Admin_AddMedal_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_AddMedal_Rsp& from);
  void MergeFrom(const Admin_AddMedal_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_AddMedal_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // required int32 oldmedal = 2;
  bool has_oldmedal() const;
  void clear_oldmedal();
  static const int kOldmedalFieldNumber = 2;
  ::google::protobuf::int32 oldmedal() const;
  void set_oldmedal(::google::protobuf::int32 value);

  // required int32 newmedal = 3;
  bool has_newmedal() const;
  void clear_newmedal();
  static const int kNewmedalFieldNumber = 3;
  ::google::protobuf::int32 newmedal() const;
  void set_newmedal(::google::protobuf::int32 value);

  // required int32 gid = 4;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 4;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 5;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 5;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 6 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 6;
  bool fromweb() const;
  void set_fromweb(bool value);

  // required int32 succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Admin_AddMedal_Rsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_oldmedal();
  inline void clear_has_oldmedal();
  inline void set_has_newmedal();
  inline void clear_has_newmedal();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 oldmedal_;
  ::google::protobuf::int32 newmedal_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  ::google::protobuf::int32 succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_AddMedal_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class Admin_Reload_Req : public ::google::protobuf::Message {
 public:
  Admin_Reload_Req();
  virtual ~Admin_Reload_Req();

  Admin_Reload_Req(const Admin_Reload_Req& from);

  inline Admin_Reload_Req& operator=(const Admin_Reload_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_Reload_Req& default_instance();

  void Swap(Admin_Reload_Req* other);

  // implements Message ----------------------------------------------

  inline Admin_Reload_Req* New() const { return New(NULL); }

  Admin_Reload_Req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_Reload_Req& from);
  void MergeFrom(const Admin_Reload_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_Reload_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 2;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 2;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // optional bool fromweb = 3 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 3;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_Reload_Req)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_Reload_Req* default_instance_;
};
// -------------------------------------------------------------------

class Admin_Reload_Rsp : public ::google::protobuf::Message {
 public:
  Admin_Reload_Rsp();
  virtual ~Admin_Reload_Rsp();

  Admin_Reload_Rsp(const Admin_Reload_Rsp& from);

  inline Admin_Reload_Rsp& operator=(const Admin_Reload_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Admin_Reload_Rsp& default_instance();

  void Swap(Admin_Reload_Rsp* other);

  // implements Message ----------------------------------------------

  inline Admin_Reload_Rsp* New() const { return New(NULL); }

  Admin_Reload_Rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Admin_Reload_Rsp& from);
  void MergeFrom(const Admin_Reload_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Admin_Reload_Rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // required int32 adminfd = 2;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 2;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int32 succ = 3;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 3;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // optional bool fromweb = 4 [default = false];
  bool has_fromweb() const;
  void clear_fromweb();
  static const int kFromwebFieldNumber = 4;
  bool fromweb() const;
  void set_fromweb(bool value);

  // @@protoc_insertion_point(class_scope:Admin_Reload_Rsp)
 private:
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_fromweb();
  inline void clear_has_fromweb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::int32 succ_;
  bool fromweb_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Admin_Reload_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGuestNumber : public ::google::protobuf::Message {
 public:
  UpdateGuestNumber();
  virtual ~UpdateGuestNumber();

  UpdateGuestNumber(const UpdateGuestNumber& from);

  inline UpdateGuestNumber& operator=(const UpdateGuestNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGuestNumber& default_instance();

  void Swap(UpdateGuestNumber* other);

  // implements Message ----------------------------------------------

  inline UpdateGuestNumber* New() const { return New(NULL); }

  UpdateGuestNumber* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGuestNumber& from);
  void MergeFrom(const UpdateGuestNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateGuestNumber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int32 guest_num = 2;
  bool has_guest_num() const;
  void clear_guest_num();
  static const int kGuestNumFieldNumber = 2;
  ::google::protobuf::int32 guest_num() const;
  void set_guest_num(::google::protobuf::int32 value);

  // optional int64 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UpdateGuestNumber)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_guest_num();
  inline void clear_has_guest_num();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 guest_num_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static UpdateGuestNumber* default_instance_;
};
// -------------------------------------------------------------------

class QQUnionCheckKey : public ::google::protobuf::Message {
 public:
  QQUnionCheckKey();
  virtual ~QQUnionCheckKey();

  QQUnionCheckKey(const QQUnionCheckKey& from);

  inline QQUnionCheckKey& operator=(const QQUnionCheckKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQUnionCheckKey& default_instance();

  void Swap(QQUnionCheckKey* other);

  // implements Message ----------------------------------------------

  inline QQUnionCheckKey* New() const { return New(NULL); }

  QQUnionCheckKey* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQUnionCheckKey& from);
  void MergeFrom(const QQUnionCheckKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QQUnionCheckKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 2;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 2;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required string key = 3;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bool succ = 4;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 4;
  bool succ() const;
  void set_succ(bool value);

  // @@protoc_insertion_point(class_scope:QQUnionCheckKey)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 adminfd_;
  bool succ_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static QQUnionCheckKey* default_instance_;
};
// -------------------------------------------------------------------

class QQUnionCheckOpenId : public ::google::protobuf::Message {
 public:
  QQUnionCheckOpenId();
  virtual ~QQUnionCheckOpenId();

  QQUnionCheckOpenId(const QQUnionCheckOpenId& from);

  inline QQUnionCheckOpenId& operator=(const QQUnionCheckOpenId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQUnionCheckOpenId& default_instance();

  void Swap(QQUnionCheckOpenId* other);

  // implements Message ----------------------------------------------

  inline QQUnionCheckOpenId* New() const { return New(NULL); }

  QQUnionCheckOpenId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQUnionCheckOpenId& from);
  void MergeFrom(const QQUnionCheckOpenId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QQUnionCheckOpenId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 2;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 2;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required string openid = 3;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 3;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional bool succ = 4;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 4;
  bool succ() const;
  void set_succ(bool value);

  // @@protoc_insertion_point(class_scope:QQUnionCheckOpenId)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 adminfd_;
  bool succ_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static QQUnionCheckOpenId* default_instance_;
};
// -------------------------------------------------------------------

class QQUnionAddItem : public ::google::protobuf::Message {
 public:
  QQUnionAddItem();
  virtual ~QQUnionAddItem();

  QQUnionAddItem(const QQUnionAddItem& from);

  inline QQUnionAddItem& operator=(const QQUnionAddItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QQUnionAddItem& default_instance();

  void Swap(QQUnionAddItem* other);

  // implements Message ----------------------------------------------

  inline QQUnionAddItem* New() const { return New(NULL); }

  QQUnionAddItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QQUnionAddItem& from);
  void MergeFrom(const QQUnionAddItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QQUnionAddItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 adminfd = 2;
  bool has_adminfd() const;
  void clear_adminfd();
  static const int kAdminfdFieldNumber = 2;
  ::google::protobuf::int32 adminfd() const;
  void set_adminfd(::google::protobuf::int32 value);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 typeid = 4;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeidFieldNumber = 4;
  ::google::protobuf::int32 typeid_() const;
  void set_typeid_(::google::protobuf::int32 value);

  // required int32 num = 5;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 5;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // required string key = 6;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 6;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bool succ = 7;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 7;
  bool succ() const;
  void set_succ(bool value);

  // @@protoc_insertion_point(class_scope:QQUnionAddItem)
 private:
  inline void set_has_adminfd();
  inline void clear_has_adminfd();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_typeid_();
  inline void clear_has_typeid_();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_succ();
  inline void clear_has_succ();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 adminfd_;
  ::google::protobuf::int32 typeid__;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 num_;
  bool succ_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static QQUnionAddItem* default_instance_;
};
// -------------------------------------------------------------------

class Wap_Str_Request : public ::google::protobuf::Message {
 public:
  Wap_Str_Request();
  virtual ~Wap_Str_Request();

  Wap_Str_Request(const Wap_Str_Request& from);

  inline Wap_Str_Request& operator=(const Wap_Str_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Wap_Str_Request& default_instance();

  void Swap(Wap_Str_Request* other);

  // implements Message ----------------------------------------------

  inline Wap_Str_Request* New() const { return New(NULL); }

  Wap_Str_Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Wap_Str_Request& from);
  void MergeFrom(const Wap_Str_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Wap_Str_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fd = 1;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 1;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // optional int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int64 secret = 3;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 3;
  ::google::protobuf::int64 secret() const;
  void set_secret(::google::protobuf::int64 value);

  // optional string cmd = 4;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 4;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // @@protoc_insertion_point(class_scope:Wap_Str_Request)
 private:
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_secret();
  inline void clear_has_secret();
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 secret_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::int32 fd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Wap_Str_Request* default_instance_;
};
// -------------------------------------------------------------------

class Wap_Str_Response : public ::google::protobuf::Message {
 public:
  Wap_Str_Response();
  virtual ~Wap_Str_Response();

  Wap_Str_Response(const Wap_Str_Response& from);

  inline Wap_Str_Response& operator=(const Wap_Str_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Wap_Str_Response& default_instance();

  void Swap(Wap_Str_Response* other);

  // implements Message ----------------------------------------------

  inline Wap_Str_Response* New() const { return New(NULL); }

  Wap_Str_Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Wap_Str_Response& from);
  void MergeFrom(const Wap_Str_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Wap_Str_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fd = 1;
  bool has_fd() const;
  void clear_fd();
  static const int kFdFieldNumber = 1;
  ::google::protobuf::int32 fd() const;
  void set_fd(::google::protobuf::int32 value);

  // optional int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int64 secret = 3;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 3;
  ::google::protobuf::int64 secret() const;
  void set_secret(::google::protobuf::int64 value);

  // optional string cmd = 4;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 4;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional int32 succ = 5;
  bool has_succ() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  ::google::protobuf::int32 succ() const;
  void set_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Wap_Str_Response)
 private:
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_secret();
  inline void clear_has_secret();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_succ();
  inline void clear_has_succ();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 secret_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::int32 succ_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Wap_Str_Response* default_instance_;
};
// -------------------------------------------------------------------

class HttpRequestV3 : public ::google::protobuf::Message {
 public:
  HttpRequestV3();
  virtual ~HttpRequestV3();

  HttpRequestV3(const HttpRequestV3& from);

  inline HttpRequestV3& operator=(const HttpRequestV3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpRequestV3& default_instance();

  void Swap(HttpRequestV3* other);

  // implements Message ----------------------------------------------

  inline HttpRequestV3* New() const { return New(NULL); }

  HttpRequestV3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpRequestV3& from);
  void MergeFrom(const HttpRequestV3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpRequestV3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1 [default = ""];
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string postdata = 2 [default = ""];
  bool has_postdata() const;
  void clear_postdata();
  static const int kPostdataFieldNumber = 2;
  const ::std::string& postdata() const;
  void set_postdata(const ::std::string& value);
  void set_postdata(const char* value);
  void set_postdata(const char* value, size_t size);
  ::std::string* mutable_postdata();
  ::std::string* release_postdata();
  void set_allocated_postdata(::std::string* postdata);

  // @@protoc_insertion_point(class_scope:HttpRequestV3)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_postdata();
  inline void clear_has_postdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr postdata_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static HttpRequestV3* default_instance_;
};
// -------------------------------------------------------------------

class SimpleMarkUser : public ::google::protobuf::Message {
 public:
  SimpleMarkUser();
  virtual ~SimpleMarkUser();

  SimpleMarkUser(const SimpleMarkUser& from);

  inline SimpleMarkUser& operator=(const SimpleMarkUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleMarkUser& default_instance();

  void Swap(SimpleMarkUser* other);

  // implements Message ----------------------------------------------

  inline SimpleMarkUser* New() const { return New(NULL); }

  SimpleMarkUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimpleMarkUser& from);
  void MergeFrom(const SimpleMarkUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SimpleMarkUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional string openid = 2 [default = ""];
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 2;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional int32 type = 3 [default = 0];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int64 value = 4 [default = 0];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // optional string svalue = 5 [default = ""];
  bool has_svalue() const;
  void clear_svalue();
  static const int kSvalueFieldNumber = 5;
  const ::std::string& svalue() const;
  void set_svalue(const ::std::string& value);
  void set_svalue(const char* value);
  void set_svalue(const char* value, size_t size);
  ::std::string* mutable_svalue();
  ::std::string* release_svalue();
  void set_allocated_svalue(::std::string* svalue);

  // @@protoc_insertion_point(class_scope:SimpleMarkUser)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_svalue();
  inline void clear_has_svalue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::int64 value_;
  ::google::protobuf::internal::ArenaStringPtr svalue_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static SimpleMarkUser* default_instance_;
};
// -------------------------------------------------------------------

class InviteFriendLvlSucc : public ::google::protobuf::Message {
 public:
  InviteFriendLvlSucc();
  virtual ~InviteFriendLvlSucc();

  InviteFriendLvlSucc(const InviteFriendLvlSucc& from);

  inline InviteFriendLvlSucc& operator=(const InviteFriendLvlSucc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteFriendLvlSucc& default_instance();

  void Swap(InviteFriendLvlSucc* other);

  // implements Message ----------------------------------------------

  inline InviteFriendLvlSucc* New() const { return New(NULL); }

  InviteFriendLvlSucc* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteFriendLvlSucc& from);
  void MergeFrom(const InviteFriendLvlSucc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteFriendLvlSucc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1 [default = 0];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional string openid = 2 [default = ""];
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 2;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional string url = 3 [default = ""];
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional int32 lvl = 4 [default = 0];
  bool has_lvl() const;
  void clear_lvl();
  static const int kLvlFieldNumber = 4;
  ::google::protobuf::int32 lvl() const;
  void set_lvl(::google::protobuf::int32 value);

  // optional int32 nowloginday = 5 [default = 0];
  bool has_nowloginday() const;
  void clear_nowloginday();
  static const int kNowlogindayFieldNumber = 5;
  ::google::protobuf::int32 nowloginday() const;
  void set_nowloginday(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InviteFriendLvlSucc)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_lvl();
  inline void clear_has_lvl();
  inline void set_has_nowloginday();
  inline void clear_has_nowloginday();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 lvl_;
  ::google::protobuf::int32 nowloginday_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static InviteFriendLvlSucc* default_instance_;
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  void Swap(Event* other);

  // implements Message ----------------------------------------------

  inline Event* New() const { return New(NULL); }

  Event* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // required int32 state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int64 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int64 uid = 4;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int32 fromworld_fd = 5;
  bool has_fromworld_fd() const;
  void clear_fromworld_fd();
  static const int kFromworldFdFieldNumber = 5;
  ::google::protobuf::int32 fromworld_fd() const;
  void set_fromworld_fd(::google::protobuf::int32 value);

  // optional int32 hallSrvID = 6;
  bool has_hallsrvid() const;
  void clear_hallsrvid();
  static const int kHallSrvIDFieldNumber = 6;
  ::google::protobuf::int32 hallsrvid() const;
  void set_hallsrvid(::google::protobuf::int32 value);

  // optional .WorkingStatus_Req workingStatus_req = 7;
  bool has_workingstatus_req() const;
  void clear_workingstatus_req();
  static const int kWorkingStatusReqFieldNumber = 7;
  const ::WorkingStatus_Req& workingstatus_req() const;
  ::WorkingStatus_Req* mutable_workingstatus_req();
  ::WorkingStatus_Req* release_workingstatus_req();
  void set_allocated_workingstatus_req(::WorkingStatus_Req* workingstatus_req);

  // optional .UserLogin_Req userLogin_req = 8;
  bool has_userlogin_req() const;
  void clear_userlogin_req();
  static const int kUserLoginReqFieldNumber = 8;
  const ::UserLogin_Req& userlogin_req() const;
  ::UserLogin_Req* mutable_userlogin_req();
  ::UserLogin_Req* release_userlogin_req();
  void set_allocated_userlogin_req(::UserLogin_Req* userlogin_req);

  // optional .UserLogin_Rsp userLogin_rsp = 9;
  bool has_userlogin_rsp() const;
  void clear_userlogin_rsp();
  static const int kUserLoginRspFieldNumber = 9;
  const ::UserLogin_Rsp& userlogin_rsp() const;
  ::UserLogin_Rsp* mutable_userlogin_rsp();
  ::UserLogin_Rsp* release_userlogin_rsp();
  void set_allocated_userlogin_rsp(::UserLogin_Rsp* userlogin_rsp);

  // optional .UserAuth_Req userAuth_req = 10;
  bool has_userauth_req() const;
  void clear_userauth_req();
  static const int kUserAuthReqFieldNumber = 10;
  const ::UserAuth_Req& userauth_req() const;
  ::UserAuth_Req* mutable_userauth_req();
  ::UserAuth_Req* release_userauth_req();
  void set_allocated_userauth_req(::UserAuth_Req* userauth_req);

  // optional .UserAuth_Rsp userAuth_rsp = 11;
  bool has_userauth_rsp() const;
  void clear_userauth_rsp();
  static const int kUserAuthRspFieldNumber = 11;
  const ::UserAuth_Rsp& userauth_rsp() const;
  ::UserAuth_Rsp* mutable_userauth_rsp();
  ::UserAuth_Rsp* release_userauth_rsp();
  void set_allocated_userauth_rsp(::UserAuth_Rsp* userauth_rsp);

  // optional .SendRemoteUser_Req sendRemoteUser_req = 12;
  bool has_sendremoteuser_req() const;
  void clear_sendremoteuser_req();
  static const int kSendRemoteUserReqFieldNumber = 12;
  const ::SendRemoteUser_Req& sendremoteuser_req() const;
  ::SendRemoteUser_Req* mutable_sendremoteuser_req();
  ::SendRemoteUser_Req* release_sendremoteuser_req();
  void set_allocated_sendremoteuser_req(::SendRemoteUser_Req* sendremoteuser_req);

  // optional .HttpRequestV3 http = 13;
  bool has_http() const;
  void clear_http();
  static const int kHttpFieldNumber = 13;
  const ::HttpRequestV3& http() const;
  ::HttpRequestV3* mutable_http();
  ::HttpRequestV3* release_http();
  void set_allocated_http(::HttpRequestV3* http);

  // optional .BeLottery be_BeLottery = 14;
  bool has_be_belottery() const;
  void clear_be_belottery();
  static const int kBeBeLotteryFieldNumber = 14;
  const ::BeLottery& be_belottery() const;
  ::BeLottery* mutable_be_belottery();
  ::BeLottery* release_be_belottery();
  void set_allocated_be_belottery(::BeLottery* be_belottery);

  // optional .BeUpdateWinInfo be_BeUpdateWinInfo = 15;
  bool has_be_beupdatewininfo() const;
  void clear_be_beupdatewininfo();
  static const int kBeBeUpdateWinInfoFieldNumber = 15;
  const ::BeUpdateWinInfo& be_beupdatewininfo() const;
  ::BeUpdateWinInfo* mutable_be_beupdatewininfo();
  ::BeUpdateWinInfo* release_be_beupdatewininfo();
  void set_allocated_be_beupdatewininfo(::BeUpdateWinInfo* be_beupdatewininfo);

  // optional .BeUpdateExp be_BeUpdateExp = 16;
  bool has_be_beupdateexp() const;
  void clear_be_beupdateexp();
  static const int kBeBeUpdateExpFieldNumber = 16;
  const ::BeUpdateExp& be_beupdateexp() const;
  ::BeUpdateExp* mutable_be_beupdateexp();
  ::BeUpdateExp* release_be_beupdateexp();
  void set_allocated_be_beupdateexp(::BeUpdateExp* be_beupdateexp);

  // optional .BeUpdateTool be_BeUpdateTool = 17;
  bool has_be_beupdatetool() const;
  void clear_be_beupdatetool();
  static const int kBeBeUpdateToolFieldNumber = 17;
  const ::BeUpdateTool& be_beupdatetool() const;
  ::BeUpdateTool* mutable_be_beupdatetool();
  ::BeUpdateTool* release_be_beupdatetool();
  void set_allocated_be_beupdatetool(::BeUpdateTool* be_beupdatetool);

  // optional .DpNormalResult dp_DpNormalResult = 18;
  bool has_dp_dpnormalresult() const;
  void clear_dp_dpnormalresult();
  static const int kDpDpNormalResultFieldNumber = 18;
  const ::DpNormalResult& dp_dpnormalresult() const;
  ::DpNormalResult* mutable_dp_dpnormalresult();
  ::DpNormalResult* release_dp_dpnormalresult();
  void set_allocated_dp_dpnormalresult(::DpNormalResult* dp_dpnormalresult);

  // optional .LotteryTimer lotteryTimer = 19;
  bool has_lotterytimer() const;
  void clear_lotterytimer();
  static const int kLotteryTimerFieldNumber = 19;
  const ::LotteryTimer& lotterytimer() const;
  ::LotteryTimer* mutable_lotterytimer();
  ::LotteryTimer* release_lotterytimer();
  void set_allocated_lotterytimer(::LotteryTimer* lotterytimer);

  // optional .BeUpdateBattleCnt be_BeUpdateBattleCnt = 20;
  bool has_be_beupdatebattlecnt() const;
  void clear_be_beupdatebattlecnt();
  static const int kBeBeUpdateBattleCntFieldNumber = 20;
  const ::BeUpdateBattleCnt& be_beupdatebattlecnt() const;
  ::BeUpdateBattleCnt* mutable_be_beupdatebattlecnt();
  ::BeUpdateBattleCnt* release_be_beupdatebattlecnt();
  void set_allocated_be_beupdatebattlecnt(::BeUpdateBattleCnt* be_beupdatebattlecnt);

  // optional .WG_UserLeave wg_UserLeave = 21;
  bool has_wg_userleave() const;
  void clear_wg_userleave();
  static const int kWgUserLeaveFieldNumber = 21;
  const ::WG_UserLeave& wg_userleave() const;
  ::WG_UserLeave* mutable_wg_userleave();
  ::WG_UserLeave* release_wg_userleave();
  void set_allocated_wg_userleave(::WG_UserLeave* wg_userleave);

  // optional .GWG_FriendRequest friendinfo = 22;
  bool has_friendinfo() const;
  void clear_friendinfo();
  static const int kFriendinfoFieldNumber = 22;
  const ::GWG_FriendRequest& friendinfo() const;
  ::GWG_FriendRequest* mutable_friendinfo();
  ::GWG_FriendRequest* release_friendinfo();
  void set_allocated_friendinfo(::GWG_FriendRequest* friendinfo);

  // optional .ForwardInfo forwardinfo = 23;
  bool has_forwardinfo() const;
  void clear_forwardinfo();
  static const int kForwardinfoFieldNumber = 23;
  const ::ForwardInfo& forwardinfo() const;
  ::ForwardInfo* mutable_forwardinfo();
  ::ForwardInfo* release_forwardinfo();
  void set_allocated_forwardinfo(::ForwardInfo* forwardinfo);

  // optional .Admin_AddExp_Req adminAddExp_req = 33;
  bool has_adminaddexp_req() const;
  void clear_adminaddexp_req();
  static const int kAdminAddExpReqFieldNumber = 33;
  const ::Admin_AddExp_Req& adminaddexp_req() const;
  ::Admin_AddExp_Req* mutable_adminaddexp_req();
  ::Admin_AddExp_Req* release_adminaddexp_req();
  void set_allocated_adminaddexp_req(::Admin_AddExp_Req* adminaddexp_req);

  // optional .Admin_AddExp_Rsp adminAddExp_rsp = 34;
  bool has_adminaddexp_rsp() const;
  void clear_adminaddexp_rsp();
  static const int kAdminAddExpRspFieldNumber = 34;
  const ::Admin_AddExp_Rsp& adminaddexp_rsp() const;
  ::Admin_AddExp_Rsp* mutable_adminaddexp_rsp();
  ::Admin_AddExp_Rsp* release_adminaddexp_rsp();
  void set_allocated_adminaddexp_rsp(::Admin_AddExp_Rsp* adminaddexp_rsp);

  // optional .Admin_AddGold_Req adminAddGold_req = 35;
  bool has_adminaddgold_req() const;
  void clear_adminaddgold_req();
  static const int kAdminAddGoldReqFieldNumber = 35;
  const ::Admin_AddGold_Req& adminaddgold_req() const;
  ::Admin_AddGold_Req* mutable_adminaddgold_req();
  ::Admin_AddGold_Req* release_adminaddgold_req();
  void set_allocated_adminaddgold_req(::Admin_AddGold_Req* adminaddgold_req);

  // optional .Admin_AddGold_Rsp adminAddGold_rsp = 36;
  bool has_adminaddgold_rsp() const;
  void clear_adminaddgold_rsp();
  static const int kAdminAddGoldRspFieldNumber = 36;
  const ::Admin_AddGold_Rsp& adminaddgold_rsp() const;
  ::Admin_AddGold_Rsp* mutable_adminaddgold_rsp();
  ::Admin_AddGold_Rsp* release_adminaddgold_rsp();
  void set_allocated_adminaddgold_rsp(::Admin_AddGold_Rsp* adminaddgold_rsp);

  // optional .Admin_SetLevel_Req adminSetLevel_req = 37;
  bool has_adminsetlevel_req() const;
  void clear_adminsetlevel_req();
  static const int kAdminSetLevelReqFieldNumber = 37;
  const ::Admin_SetLevel_Req& adminsetlevel_req() const;
  ::Admin_SetLevel_Req* mutable_adminsetlevel_req();
  ::Admin_SetLevel_Req* release_adminsetlevel_req();
  void set_allocated_adminsetlevel_req(::Admin_SetLevel_Req* adminsetlevel_req);

  // optional .Admin_SetLevel_Rsp adminSetLevel_rsp = 38;
  bool has_adminsetlevel_rsp() const;
  void clear_adminsetlevel_rsp();
  static const int kAdminSetLevelRspFieldNumber = 38;
  const ::Admin_SetLevel_Rsp& adminsetlevel_rsp() const;
  ::Admin_SetLevel_Rsp* mutable_adminsetlevel_rsp();
  ::Admin_SetLevel_Rsp* release_adminsetlevel_rsp();
  void set_allocated_adminsetlevel_rsp(::Admin_SetLevel_Rsp* adminsetlevel_rsp);

  // optional .Admin_AddProp_Req adminAddProp_req = 39;
  bool has_adminaddprop_req() const;
  void clear_adminaddprop_req();
  static const int kAdminAddPropReqFieldNumber = 39;
  const ::Admin_AddProp_Req& adminaddprop_req() const;
  ::Admin_AddProp_Req* mutable_adminaddprop_req();
  ::Admin_AddProp_Req* release_adminaddprop_req();
  void set_allocated_adminaddprop_req(::Admin_AddProp_Req* adminaddprop_req);

  // optional .Admin_AddProp_Rsp adminAddProp_rsp = 40;
  bool has_adminaddprop_rsp() const;
  void clear_adminaddprop_rsp();
  static const int kAdminAddPropRspFieldNumber = 40;
  const ::Admin_AddProp_Rsp& adminaddprop_rsp() const;
  ::Admin_AddProp_Rsp* mutable_adminaddprop_rsp();
  ::Admin_AddProp_Rsp* release_adminaddprop_rsp();
  void set_allocated_adminaddprop_rsp(::Admin_AddProp_Rsp* adminaddprop_rsp);

  // optional .Admin_SetEquip_Req adminSetEquip_req = 41;
  bool has_adminsetequip_req() const;
  void clear_adminsetequip_req();
  static const int kAdminSetEquipReqFieldNumber = 41;
  const ::Admin_SetEquip_Req& adminsetequip_req() const;
  ::Admin_SetEquip_Req* mutable_adminsetequip_req();
  ::Admin_SetEquip_Req* release_adminsetequip_req();
  void set_allocated_adminsetequip_req(::Admin_SetEquip_Req* adminsetequip_req);

  // optional .Admin_SetEquip_Rsp adminSetEquip_rsp = 42;
  bool has_adminsetequip_rsp() const;
  void clear_adminsetequip_rsp();
  static const int kAdminSetEquipRspFieldNumber = 42;
  const ::Admin_SetEquip_Rsp& adminsetequip_rsp() const;
  ::Admin_SetEquip_Rsp* mutable_adminsetequip_rsp();
  ::Admin_SetEquip_Rsp* release_adminsetequip_rsp();
  void set_allocated_adminsetequip_rsp(::Admin_SetEquip_Rsp* adminsetequip_rsp);

  // optional .Admin_UserInfo_Req adminUserInfo_req = 43;
  bool has_adminuserinfo_req() const;
  void clear_adminuserinfo_req();
  static const int kAdminUserInfoReqFieldNumber = 43;
  const ::Admin_UserInfo_Req& adminuserinfo_req() const;
  ::Admin_UserInfo_Req* mutable_adminuserinfo_req();
  ::Admin_UserInfo_Req* release_adminuserinfo_req();
  void set_allocated_adminuserinfo_req(::Admin_UserInfo_Req* adminuserinfo_req);

  // optional .Admin_UserInfo_Rsp adminUserInfo_rsp = 44;
  bool has_adminuserinfo_rsp() const;
  void clear_adminuserinfo_rsp();
  static const int kAdminUserInfoRspFieldNumber = 44;
  const ::Admin_UserInfo_Rsp& adminuserinfo_rsp() const;
  ::Admin_UserInfo_Rsp* mutable_adminuserinfo_rsp();
  ::Admin_UserInfo_Rsp* release_adminuserinfo_rsp();
  void set_allocated_adminuserinfo_rsp(::Admin_UserInfo_Rsp* adminuserinfo_rsp);

  // optional .Admin_DelProp_Req adminDelProp_req = 45;
  bool has_admindelprop_req() const;
  void clear_admindelprop_req();
  static const int kAdminDelPropReqFieldNumber = 45;
  const ::Admin_DelProp_Req& admindelprop_req() const;
  ::Admin_DelProp_Req* mutable_admindelprop_req();
  ::Admin_DelProp_Req* release_admindelprop_req();
  void set_allocated_admindelprop_req(::Admin_DelProp_Req* admindelprop_req);

  // optional .Admin_DelProp_Rsp adminDelProp_rsp = 46;
  bool has_admindelprop_rsp() const;
  void clear_admindelprop_rsp();
  static const int kAdminDelPropRspFieldNumber = 46;
  const ::Admin_DelProp_Rsp& admindelprop_rsp() const;
  ::Admin_DelProp_Rsp* mutable_admindelprop_rsp();
  ::Admin_DelProp_Rsp* release_admindelprop_rsp();
  void set_allocated_admindelprop_rsp(::Admin_DelProp_Rsp* admindelprop_rsp);

  // optional .WebBuy webbuy = 47;
  bool has_webbuy() const;
  void clear_webbuy();
  static const int kWebbuyFieldNumber = 47;
  const ::WebBuy& webbuy() const;
  ::WebBuy* mutable_webbuy();
  ::WebBuy* release_webbuy();
  void set_allocated_webbuy(::WebBuy* webbuy);

  // optional .Admin_RunTask_Req adminRunTask_req = 48;
  bool has_adminruntask_req() const;
  void clear_adminruntask_req();
  static const int kAdminRunTaskReqFieldNumber = 48;
  const ::Admin_RunTask_Req& adminruntask_req() const;
  ::Admin_RunTask_Req* mutable_adminruntask_req();
  ::Admin_RunTask_Req* release_adminruntask_req();
  void set_allocated_adminruntask_req(::Admin_RunTask_Req* adminruntask_req);

  // optional .Admin_RunTask_Rsp adminRunTask_rsp = 49;
  bool has_adminruntask_rsp() const;
  void clear_adminruntask_rsp();
  static const int kAdminRunTaskRspFieldNumber = 49;
  const ::Admin_RunTask_Rsp& adminruntask_rsp() const;
  ::Admin_RunTask_Rsp* mutable_adminruntask_rsp();
  ::Admin_RunTask_Rsp* release_adminruntask_rsp();
  void set_allocated_adminruntask_rsp(::Admin_RunTask_Rsp* adminruntask_rsp);

  // optional .Admin_BanChat_Req adminBanChat_req = 50;
  bool has_adminbanchat_req() const;
  void clear_adminbanchat_req();
  static const int kAdminBanChatReqFieldNumber = 50;
  const ::Admin_BanChat_Req& adminbanchat_req() const;
  ::Admin_BanChat_Req* mutable_adminbanchat_req();
  ::Admin_BanChat_Req* release_adminbanchat_req();
  void set_allocated_adminbanchat_req(::Admin_BanChat_Req* adminbanchat_req);

  // optional .Admin_BanChat_Rsp adminBanChat_rsp = 51;
  bool has_adminbanchat_rsp() const;
  void clear_adminbanchat_rsp();
  static const int kAdminBanChatRspFieldNumber = 51;
  const ::Admin_BanChat_Rsp& adminbanchat_rsp() const;
  ::Admin_BanChat_Rsp* mutable_adminbanchat_rsp();
  ::Admin_BanChat_Rsp* release_adminbanchat_rsp();
  void set_allocated_adminbanchat_rsp(::Admin_BanChat_Rsp* adminbanchat_rsp);

  // optional .Admin_BanLogin_Req adminBanLogin_req = 52;
  bool has_adminbanlogin_req() const;
  void clear_adminbanlogin_req();
  static const int kAdminBanLoginReqFieldNumber = 52;
  const ::Admin_BanLogin_Req& adminbanlogin_req() const;
  ::Admin_BanLogin_Req* mutable_adminbanlogin_req();
  ::Admin_BanLogin_Req* release_adminbanlogin_req();
  void set_allocated_adminbanlogin_req(::Admin_BanLogin_Req* adminbanlogin_req);

  // optional .Admin_BanLogin_Rsp adminBanLogin_rsp = 53;
  bool has_adminbanlogin_rsp() const;
  void clear_adminbanlogin_rsp();
  static const int kAdminBanLoginRspFieldNumber = 53;
  const ::Admin_BanLogin_Rsp& adminbanlogin_rsp() const;
  ::Admin_BanLogin_Rsp* mutable_adminbanlogin_rsp();
  ::Admin_BanLogin_Rsp* release_adminbanlogin_rsp();
  void set_allocated_adminbanlogin_rsp(::Admin_BanLogin_Rsp* adminbanlogin_rsp);

  // optional .Admin_AddPoint_Req adminAddPoint_req = 54;
  bool has_adminaddpoint_req() const;
  void clear_adminaddpoint_req();
  static const int kAdminAddPointReqFieldNumber = 54;
  const ::Admin_AddPoint_Req& adminaddpoint_req() const;
  ::Admin_AddPoint_Req* mutable_adminaddpoint_req();
  ::Admin_AddPoint_Req* release_adminaddpoint_req();
  void set_allocated_adminaddpoint_req(::Admin_AddPoint_Req* adminaddpoint_req);

  // optional .Admin_AddPoint_Rsp adminAddPoint_rsp = 55;
  bool has_adminaddpoint_rsp() const;
  void clear_adminaddpoint_rsp();
  static const int kAdminAddPointRspFieldNumber = 55;
  const ::Admin_AddPoint_Rsp& adminaddpoint_rsp() const;
  ::Admin_AddPoint_Rsp* mutable_adminaddpoint_rsp();
  ::Admin_AddPoint_Rsp* release_adminaddpoint_rsp();
  void set_allocated_adminaddpoint_rsp(::Admin_AddPoint_Rsp* adminaddpoint_rsp);

  // optional .Admin_AddIndate_Req adminAddIndate_req = 56;
  bool has_adminaddindate_req() const;
  void clear_adminaddindate_req();
  static const int kAdminAddIndateReqFieldNumber = 56;
  const ::Admin_AddIndate_Req& adminaddindate_req() const;
  ::Admin_AddIndate_Req* mutable_adminaddindate_req();
  ::Admin_AddIndate_Req* release_adminaddindate_req();
  void set_allocated_adminaddindate_req(::Admin_AddIndate_Req* adminaddindate_req);

  // optional .Admin_AddIndate_Rsp adminAddIndate_rsp = 57;
  bool has_adminaddindate_rsp() const;
  void clear_adminaddindate_rsp();
  static const int kAdminAddIndateRspFieldNumber = 57;
  const ::Admin_AddIndate_Rsp& adminaddindate_rsp() const;
  ::Admin_AddIndate_Rsp* mutable_adminaddindate_rsp();
  ::Admin_AddIndate_Rsp* release_adminaddindate_rsp();
  void set_allocated_adminaddindate_rsp(::Admin_AddIndate_Rsp* adminaddindate_rsp);

  // optional .Admin_FreshUser_Req adminFreshUser_req = 58;
  bool has_adminfreshuser_req() const;
  void clear_adminfreshuser_req();
  static const int kAdminFreshUserReqFieldNumber = 58;
  const ::Admin_FreshUser_Req& adminfreshuser_req() const;
  ::Admin_FreshUser_Req* mutable_adminfreshuser_req();
  ::Admin_FreshUser_Req* release_adminfreshuser_req();
  void set_allocated_adminfreshuser_req(::Admin_FreshUser_Req* adminfreshuser_req);

  // optional .Admin_FreshUser_Rsp adminFreshUser_rsp = 59;
  bool has_adminfreshuser_rsp() const;
  void clear_adminfreshuser_rsp();
  static const int kAdminFreshUserRspFieldNumber = 59;
  const ::Admin_FreshUser_Rsp& adminfreshuser_rsp() const;
  ::Admin_FreshUser_Rsp* mutable_adminfreshuser_rsp();
  ::Admin_FreshUser_Rsp* release_adminfreshuser_rsp();
  void set_allocated_adminfreshuser_rsp(::Admin_FreshUser_Rsp* adminfreshuser_rsp);

  // optional .Admin_AddMedal_Req adminAddMedal_req = 60;
  bool has_adminaddmedal_req() const;
  void clear_adminaddmedal_req();
  static const int kAdminAddMedalReqFieldNumber = 60;
  const ::Admin_AddMedal_Req& adminaddmedal_req() const;
  ::Admin_AddMedal_Req* mutable_adminaddmedal_req();
  ::Admin_AddMedal_Req* release_adminaddmedal_req();
  void set_allocated_adminaddmedal_req(::Admin_AddMedal_Req* adminaddmedal_req);

  // optional .Admin_AddMedal_Rsp adminAddMedal_rsp = 61;
  bool has_adminaddmedal_rsp() const;
  void clear_adminaddmedal_rsp();
  static const int kAdminAddMedalRspFieldNumber = 61;
  const ::Admin_AddMedal_Rsp& adminaddmedal_rsp() const;
  ::Admin_AddMedal_Rsp* mutable_adminaddmedal_rsp();
  ::Admin_AddMedal_Rsp* release_adminaddmedal_rsp();
  void set_allocated_adminaddmedal_rsp(::Admin_AddMedal_Rsp* adminaddmedal_rsp);

  // optional .WebLengthenIndate weblengthenindate = 62;
  bool has_weblengthenindate() const;
  void clear_weblengthenindate();
  static const int kWeblengthenindateFieldNumber = 62;
  const ::WebLengthenIndate& weblengthenindate() const;
  ::WebLengthenIndate* mutable_weblengthenindate();
  ::WebLengthenIndate* release_weblengthenindate();
  void set_allocated_weblengthenindate(::WebLengthenIndate* weblengthenindate);

  // optional .WebCheckBandCoin webcheckbandcoin = 63;
  bool has_webcheckbandcoin() const;
  void clear_webcheckbandcoin();
  static const int kWebcheckbandcoinFieldNumber = 63;
  const ::WebCheckBandCoin& webcheckbandcoin() const;
  ::WebCheckBandCoin* mutable_webcheckbandcoin();
  ::WebCheckBandCoin* release_webcheckbandcoin();
  void set_allocated_webcheckbandcoin(::WebCheckBandCoin* webcheckbandcoin);

  // optional .Admin_BroadCast_Req adminBroadCast_req = 64;
  bool has_adminbroadcast_req() const;
  void clear_adminbroadcast_req();
  static const int kAdminBroadCastReqFieldNumber = 64;
  const ::Admin_BroadCast_Req& adminbroadcast_req() const;
  ::Admin_BroadCast_Req* mutable_adminbroadcast_req();
  ::Admin_BroadCast_Req* release_adminbroadcast_req();
  void set_allocated_adminbroadcast_req(::Admin_BroadCast_Req* adminbroadcast_req);

  // optional .Admin_BroadCast_Rsp adminBroadCast_rsp = 65;
  bool has_adminbroadcast_rsp() const;
  void clear_adminbroadcast_rsp();
  static const int kAdminBroadCastRspFieldNumber = 65;
  const ::Admin_BroadCast_Rsp& adminbroadcast_rsp() const;
  ::Admin_BroadCast_Rsp* mutable_adminbroadcast_rsp();
  ::Admin_BroadCast_Rsp* release_adminbroadcast_rsp();
  void set_allocated_adminbroadcast_rsp(::Admin_BroadCast_Rsp* adminbroadcast_rsp);

  // optional .Admin_Reload_Req adminReload_req = 66;
  bool has_adminreload_req() const;
  void clear_adminreload_req();
  static const int kAdminReloadReqFieldNumber = 66;
  const ::Admin_Reload_Req& adminreload_req() const;
  ::Admin_Reload_Req* mutable_adminreload_req();
  ::Admin_Reload_Req* release_adminreload_req();
  void set_allocated_adminreload_req(::Admin_Reload_Req* adminreload_req);

  // optional .Admin_Reload_Rsp adminReload_rsp = 67;
  bool has_adminreload_rsp() const;
  void clear_adminreload_rsp();
  static const int kAdminReloadRspFieldNumber = 67;
  const ::Admin_Reload_Rsp& adminreload_rsp() const;
  ::Admin_Reload_Rsp* mutable_adminreload_rsp();
  ::Admin_Reload_Rsp* release_adminreload_rsp();
  void set_allocated_adminreload_rsp(::Admin_Reload_Rsp* adminreload_rsp);

  // optional .UpdateGuestNumber update_guest_number = 68;
  bool has_update_guest_number() const;
  void clear_update_guest_number();
  static const int kUpdateGuestNumberFieldNumber = 68;
  const ::UpdateGuestNumber& update_guest_number() const;
  ::UpdateGuestNumber* mutable_update_guest_number();
  ::UpdateGuestNumber* release_update_guest_number();
  void set_allocated_update_guest_number(::UpdateGuestNumber* update_guest_number);

  // optional .Admin_FluentPrice_Req adminFluentPrice_req = 69;
  bool has_adminfluentprice_req() const;
  void clear_adminfluentprice_req();
  static const int kAdminFluentPriceReqFieldNumber = 69;
  const ::Admin_FluentPrice_Req& adminfluentprice_req() const;
  ::Admin_FluentPrice_Req* mutable_adminfluentprice_req();
  ::Admin_FluentPrice_Req* release_adminfluentprice_req();
  void set_allocated_adminfluentprice_req(::Admin_FluentPrice_Req* adminfluentprice_req);

  // optional .Admin_FluentPrice_Rsp adminFluentPrice_rsp = 70;
  bool has_adminfluentprice_rsp() const;
  void clear_adminfluentprice_rsp();
  static const int kAdminFluentPriceRspFieldNumber = 70;
  const ::Admin_FluentPrice_Rsp& adminfluentprice_rsp() const;
  ::Admin_FluentPrice_Rsp* mutable_adminfluentprice_rsp();
  ::Admin_FluentPrice_Rsp* release_adminfluentprice_rsp();
  void set_allocated_adminfluentprice_rsp(::Admin_FluentPrice_Rsp* adminfluentprice_rsp);

  // optional .WebUnlock webunlock = 71;
  bool has_webunlock() const;
  void clear_webunlock();
  static const int kWebunlockFieldNumber = 71;
  const ::WebUnlock& webunlock() const;
  ::WebUnlock* mutable_webunlock();
  ::WebUnlock* release_webunlock();
  void set_allocated_webunlock(::WebUnlock* webunlock);

  // optional .WebAddEmployee webaddemployee = 72;
  bool has_webaddemployee() const;
  void clear_webaddemployee();
  static const int kWebaddemployeeFieldNumber = 72;
  const ::WebAddEmployee& webaddemployee() const;
  ::WebAddEmployee* mutable_webaddemployee();
  ::WebAddEmployee* release_webaddemployee();
  void set_allocated_webaddemployee(::WebAddEmployee* webaddemployee);

  // optional .Admin_AddGoods_Req adminAddGoods_req = 73;
  bool has_adminaddgoods_req() const;
  void clear_adminaddgoods_req();
  static const int kAdminAddGoodsReqFieldNumber = 73;
  const ::Admin_AddGoods_Req& adminaddgoods_req() const;
  ::Admin_AddGoods_Req* mutable_adminaddgoods_req();
  ::Admin_AddGoods_Req* release_adminaddgoods_req();
  void set_allocated_adminaddgoods_req(::Admin_AddGoods_Req* adminaddgoods_req);

  // optional .Admin_AddGoods_Rsp adminAddGoods_rsp = 74;
  bool has_adminaddgoods_rsp() const;
  void clear_adminaddgoods_rsp();
  static const int kAdminAddGoodsRspFieldNumber = 74;
  const ::Admin_AddGoods_Rsp& adminaddgoods_rsp() const;
  ::Admin_AddGoods_Rsp* mutable_adminaddgoods_rsp();
  ::Admin_AddGoods_Rsp* release_adminaddgoods_rsp();
  void set_allocated_adminaddgoods_rsp(::Admin_AddGoods_Rsp* adminaddgoods_rsp);

  // optional .Admin_SetPublicPraise_Req adminSetPublicPraise_req = 75;
  bool has_adminsetpublicpraise_req() const;
  void clear_adminsetpublicpraise_req();
  static const int kAdminSetPublicPraiseReqFieldNumber = 75;
  const ::Admin_SetPublicPraise_Req& adminsetpublicpraise_req() const;
  ::Admin_SetPublicPraise_Req* mutable_adminsetpublicpraise_req();
  ::Admin_SetPublicPraise_Req* release_adminsetpublicpraise_req();
  void set_allocated_adminsetpublicpraise_req(::Admin_SetPublicPraise_Req* adminsetpublicpraise_req);

  // optional .Admin_SetPublicPraise_Rsp adminSetPublicPraise_rsp = 76;
  bool has_adminsetpublicpraise_rsp() const;
  void clear_adminsetpublicpraise_rsp();
  static const int kAdminSetPublicPraiseRspFieldNumber = 76;
  const ::Admin_SetPublicPraise_Rsp& adminsetpublicpraise_rsp() const;
  ::Admin_SetPublicPraise_Rsp* mutable_adminsetpublicpraise_rsp();
  ::Admin_SetPublicPraise_Rsp* release_adminsetpublicpraise_rsp();
  void set_allocated_adminsetpublicpraise_rsp(::Admin_SetPublicPraise_Rsp* adminsetpublicpraise_rsp);

  // optional .Admin_AddGuest_Req adminAddGuest_req = 77;
  bool has_adminaddguest_req() const;
  void clear_adminaddguest_req();
  static const int kAdminAddGuestReqFieldNumber = 77;
  const ::Admin_AddGuest_Req& adminaddguest_req() const;
  ::Admin_AddGuest_Req* mutable_adminaddguest_req();
  ::Admin_AddGuest_Req* release_adminaddguest_req();
  void set_allocated_adminaddguest_req(::Admin_AddGuest_Req* adminaddguest_req);

  // optional .Admin_AddGuest_Rsp adminAddGuest_rsp = 78;
  bool has_adminaddguest_rsp() const;
  void clear_adminaddguest_rsp();
  static const int kAdminAddGuestRspFieldNumber = 78;
  const ::Admin_AddGuest_Rsp& adminaddguest_rsp() const;
  ::Admin_AddGuest_Rsp* mutable_adminaddguest_rsp();
  ::Admin_AddGuest_Rsp* release_adminaddguest_rsp();
  void set_allocated_adminaddguest_rsp(::Admin_AddGuest_Rsp* adminaddguest_rsp);

  // optional .Admin_DelGoods_Req adminDelGoods_req = 79;
  bool has_admindelgoods_req() const;
  void clear_admindelgoods_req();
  static const int kAdminDelGoodsReqFieldNumber = 79;
  const ::Admin_DelGoods_Req& admindelgoods_req() const;
  ::Admin_DelGoods_Req* mutable_admindelgoods_req();
  ::Admin_DelGoods_Req* release_admindelgoods_req();
  void set_allocated_admindelgoods_req(::Admin_DelGoods_Req* admindelgoods_req);

  // optional .Admin_DelGoods_Rsp adminDelGoods_rsp = 80;
  bool has_admindelgoods_rsp() const;
  void clear_admindelgoods_rsp();
  static const int kAdminDelGoodsRspFieldNumber = 80;
  const ::Admin_DelGoods_Rsp& admindelgoods_rsp() const;
  ::Admin_DelGoods_Rsp* mutable_admindelgoods_rsp();
  ::Admin_DelGoods_Rsp* release_admindelgoods_rsp();
  void set_allocated_admindelgoods_rsp(::Admin_DelGoods_Rsp* admindelgoods_rsp);

  // optional .Admin_Clear_Req adminClear_req = 81;
  bool has_adminclear_req() const;
  void clear_adminclear_req();
  static const int kAdminClearReqFieldNumber = 81;
  const ::Admin_Clear_Req& adminclear_req() const;
  ::Admin_Clear_Req* mutable_adminclear_req();
  ::Admin_Clear_Req* release_adminclear_req();
  void set_allocated_adminclear_req(::Admin_Clear_Req* adminclear_req);

  // optional .Admin_Clear_Rsp adminClear_rsp = 82;
  bool has_adminclear_rsp() const;
  void clear_adminclear_rsp();
  static const int kAdminClearRspFieldNumber = 82;
  const ::Admin_Clear_Rsp& adminclear_rsp() const;
  ::Admin_Clear_Rsp* mutable_adminclear_rsp();
  ::Admin_Clear_Rsp* release_adminclear_rsp();
  void set_allocated_adminclear_rsp(::Admin_Clear_Rsp* adminclear_rsp);

  // optional .Admin_StatisticsOnLinePeople_Req adminOnLineNum_req = 83;
  bool has_adminonlinenum_req() const;
  void clear_adminonlinenum_req();
  static const int kAdminOnLineNumReqFieldNumber = 83;
  const ::Admin_StatisticsOnLinePeople_Req& adminonlinenum_req() const;
  ::Admin_StatisticsOnLinePeople_Req* mutable_adminonlinenum_req();
  ::Admin_StatisticsOnLinePeople_Req* release_adminonlinenum_req();
  void set_allocated_adminonlinenum_req(::Admin_StatisticsOnLinePeople_Req* adminonlinenum_req);

  // optional .Admin_StatisticsOnLinePeople_Rsp adminOnLineNum_rsp = 84;
  bool has_adminonlinenum_rsp() const;
  void clear_adminonlinenum_rsp();
  static const int kAdminOnLineNumRspFieldNumber = 84;
  const ::Admin_StatisticsOnLinePeople_Rsp& adminonlinenum_rsp() const;
  ::Admin_StatisticsOnLinePeople_Rsp* mutable_adminonlinenum_rsp();
  ::Admin_StatisticsOnLinePeople_Rsp* release_adminonlinenum_rsp();
  void set_allocated_adminonlinenum_rsp(::Admin_StatisticsOnLinePeople_Rsp* adminonlinenum_rsp);

  // optional .Admin_KickPlayer_Req adminKickPlayer_req = 85;
  bool has_adminkickplayer_req() const;
  void clear_adminkickplayer_req();
  static const int kAdminKickPlayerReqFieldNumber = 85;
  const ::Admin_KickPlayer_Req& adminkickplayer_req() const;
  ::Admin_KickPlayer_Req* mutable_adminkickplayer_req();
  ::Admin_KickPlayer_Req* release_adminkickplayer_req();
  void set_allocated_adminkickplayer_req(::Admin_KickPlayer_Req* adminkickplayer_req);

  // optional .Admin_KickPlayer_Rsp adminKickPlayer_rsp = 86;
  bool has_adminkickplayer_rsp() const;
  void clear_adminkickplayer_rsp();
  static const int kAdminKickPlayerRspFieldNumber = 86;
  const ::Admin_KickPlayer_Rsp& adminkickplayer_rsp() const;
  ::Admin_KickPlayer_Rsp* mutable_adminkickplayer_rsp();
  ::Admin_KickPlayer_Rsp* release_adminkickplayer_rsp();
  void set_allocated_adminkickplayer_rsp(::Admin_KickPlayer_Rsp* adminkickplayer_rsp);

  // optional .WebInvite webinvite = 87;
  bool has_webinvite() const;
  void clear_webinvite();
  static const int kWebinviteFieldNumber = 87;
  const ::WebInvite& webinvite() const;
  ::WebInvite* mutable_webinvite();
  ::WebInvite* release_webinvite();
  void set_allocated_webinvite(::WebInvite* webinvite);

  // optional .Invite invite = 88;
  bool has_invite() const;
  void clear_invite();
  static const int kInviteFieldNumber = 88;
  const ::Invite& invite() const;
  ::Invite* mutable_invite();
  ::Invite* release_invite();
  void set_allocated_invite(::Invite* invite);

  // optional .Admin_STR_Req adminstr_req = 89;
  bool has_adminstr_req() const;
  void clear_adminstr_req();
  static const int kAdminstrReqFieldNumber = 89;
  const ::Admin_STR_Req& adminstr_req() const;
  ::Admin_STR_Req* mutable_adminstr_req();
  ::Admin_STR_Req* release_adminstr_req();
  void set_allocated_adminstr_req(::Admin_STR_Req* adminstr_req);

  // optional .Admin_STR_Rsp adminstr_rsp = 90;
  bool has_adminstr_rsp() const;
  void clear_adminstr_rsp();
  static const int kAdminstrRspFieldNumber = 90;
  const ::Admin_STR_Rsp& adminstr_rsp() const;
  ::Admin_STR_Rsp* mutable_adminstr_rsp();
  ::Admin_STR_Rsp* release_adminstr_rsp();
  void set_allocated_adminstr_rsp(::Admin_STR_Rsp* adminstr_rsp);

  // optional .WebBuyCfm webbugcfm = 91;
  bool has_webbugcfm() const;
  void clear_webbugcfm();
  static const int kWebbugcfmFieldNumber = 91;
  const ::WebBuyCfm& webbugcfm() const;
  ::WebBuyCfm* mutable_webbugcfm();
  ::WebBuyCfm* release_webbugcfm();
  void set_allocated_webbugcfm(::WebBuyCfm* webbugcfm);

  // optional .Admin_SetVal_Req adminSetVal_req = 92;
  bool has_adminsetval_req() const;
  void clear_adminsetval_req();
  static const int kAdminSetValReqFieldNumber = 92;
  const ::Admin_SetVal_Req& adminsetval_req() const;
  ::Admin_SetVal_Req* mutable_adminsetval_req();
  ::Admin_SetVal_Req* release_adminsetval_req();
  void set_allocated_adminsetval_req(::Admin_SetVal_Req* adminsetval_req);

  // optional .Admin_SetVal_Rsp adminSetVal_rsp = 93;
  bool has_adminsetval_rsp() const;
  void clear_adminsetval_rsp();
  static const int kAdminSetValRspFieldNumber = 93;
  const ::Admin_SetVal_Rsp& adminsetval_rsp() const;
  ::Admin_SetVal_Rsp* mutable_adminsetval_rsp();
  ::Admin_SetVal_Rsp* release_adminsetval_rsp();
  void set_allocated_adminsetval_rsp(::Admin_SetVal_Rsp* adminsetval_rsp);

  // optional string sid = 94;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 94;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional .WebAskFor webAsk = 95;
  bool has_webask() const;
  void clear_webask();
  static const int kWebAskFieldNumber = 95;
  const ::WebAskFor& webask() const;
  ::WebAskFor* mutable_webask();
  ::WebAskFor* release_webask();
  void set_allocated_webask(::WebAskFor* webask);

  // optional .WebGiveFor webGive = 96;
  bool has_webgive() const;
  void clear_webgive();
  static const int kWebGiveFieldNumber = 96;
  const ::WebGiveFor& webgive() const;
  ::WebGiveFor* mutable_webgive();
  ::WebGiveFor* release_webgive();
  void set_allocated_webgive(::WebGiveFor* webgive);

  // optional int32 pushbackcnt = 97 [default = 0];
  bool has_pushbackcnt() const;
  void clear_pushbackcnt();
  static const int kPushbackcntFieldNumber = 97;
  ::google::protobuf::int32 pushbackcnt() const;
  void set_pushbackcnt(::google::protobuf::int32 value);

  // optional .QQUnionAddItem qqunion_additem = 98;
  bool has_qqunion_additem() const;
  void clear_qqunion_additem();
  static const int kQqunionAdditemFieldNumber = 98;
  const ::QQUnionAddItem& qqunion_additem() const;
  ::QQUnionAddItem* mutable_qqunion_additem();
  ::QQUnionAddItem* release_qqunion_additem();
  void set_allocated_qqunion_additem(::QQUnionAddItem* qqunion_additem);

  // optional .QQUnionCheckOpenId qqunion_checkopenid = 99;
  bool has_qqunion_checkopenid() const;
  void clear_qqunion_checkopenid();
  static const int kQqunionCheckopenidFieldNumber = 99;
  const ::QQUnionCheckOpenId& qqunion_checkopenid() const;
  ::QQUnionCheckOpenId* mutable_qqunion_checkopenid();
  ::QQUnionCheckOpenId* release_qqunion_checkopenid();
  void set_allocated_qqunion_checkopenid(::QQUnionCheckOpenId* qqunion_checkopenid);

  // optional .QQUnionCheckKey qqunion_checkkey = 100;
  bool has_qqunion_checkkey() const;
  void clear_qqunion_checkkey();
  static const int kQqunionCheckkeyFieldNumber = 100;
  const ::QQUnionCheckKey& qqunion_checkkey() const;
  ::QQUnionCheckKey* mutable_qqunion_checkkey();
  ::QQUnionCheckKey* release_qqunion_checkkey();
  void set_allocated_qqunion_checkkey(::QQUnionCheckKey* qqunion_checkkey);

  // optional .MultiLevelFriendPoint multi_level_friend_point = 101;
  bool has_multi_level_friend_point() const;
  void clear_multi_level_friend_point();
  static const int kMultiLevelFriendPointFieldNumber = 101;
  const ::MultiLevelFriendPoint& multi_level_friend_point() const;
  ::MultiLevelFriendPoint* mutable_multi_level_friend_point();
  ::MultiLevelFriendPoint* release_multi_level_friend_point();
  void set_allocated_multi_level_friend_point(::MultiLevelFriendPoint* multi_level_friend_point);

  // optional .Admin_Common_Req admin_common_req = 102;
  bool has_admin_common_req() const;
  void clear_admin_common_req();
  static const int kAdminCommonReqFieldNumber = 102;
  const ::Admin_Common_Req& admin_common_req() const;
  ::Admin_Common_Req* mutable_admin_common_req();
  ::Admin_Common_Req* release_admin_common_req();
  void set_allocated_admin_common_req(::Admin_Common_Req* admin_common_req);

  // optional .Admin_Common_Rsp admin_common_rsp = 103;
  bool has_admin_common_rsp() const;
  void clear_admin_common_rsp();
  static const int kAdminCommonRspFieldNumber = 103;
  const ::Admin_Common_Rsp& admin_common_rsp() const;
  ::Admin_Common_Rsp* mutable_admin_common_rsp();
  ::Admin_Common_Rsp* release_admin_common_rsp();
  void set_allocated_admin_common_rsp(::Admin_Common_Rsp* admin_common_rsp);

  // optional .TalentShow talent_show = 104;
  bool has_talent_show() const;
  void clear_talent_show();
  static const int kTalentShowFieldNumber = 104;
  const ::TalentShow& talent_show() const;
  ::TalentShow* mutable_talent_show();
  ::TalentShow* release_talent_show();
  void set_allocated_talent_show(::TalentShow* talent_show);

  // optional .TalentShowList talent_show_list = 105;
  bool has_talent_show_list() const;
  void clear_talent_show_list();
  static const int kTalentShowListFieldNumber = 105;
  const ::TalentShowList& talent_show_list() const;
  ::TalentShowList* mutable_talent_show_list();
  ::TalentShowList* release_talent_show_list();
  void set_allocated_talent_show_list(::TalentShowList* talent_show_list);

  // optional int32 gameid = 106;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 106;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // optional int32 worldid = 107;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 107;
  ::google::protobuf::int32 worldid() const;
  void set_worldid(::google::protobuf::int32 value);

  // optional int32 rankKind = 108;
  bool has_rankkind() const;
  void clear_rankkind();
  static const int kRankKindFieldNumber = 108;
  ::google::protobuf::int32 rankkind() const;
  void set_rankkind(::google::protobuf::int32 value);

  // optional .WebFreeGift freegift = 109;
  bool has_freegift() const;
  void clear_freegift();
  static const int kFreegiftFieldNumber = 109;
  const ::WebFreeGift& freegift() const;
  ::WebFreeGift* mutable_freegift();
  ::WebFreeGift* release_freegift();
  void set_allocated_freegift(::WebFreeGift* freegift);

  // optional .FriendSendGift friend_send_gift = 110;
  bool has_friend_send_gift() const;
  void clear_friend_send_gift();
  static const int kFriendSendGiftFieldNumber = 110;
  const ::FriendSendGift& friend_send_gift() const;
  ::FriendSendGift* mutable_friend_send_gift();
  ::FriendSendGift* release_friend_send_gift();
  void set_allocated_friend_send_gift(::FriendSendGift* friend_send_gift);

  // optional .FortuneSteal fortune_steal = 111;
  bool has_fortune_steal() const;
  void clear_fortune_steal();
  static const int kFortuneStealFieldNumber = 111;
  const ::FortuneSteal& fortune_steal() const;
  ::FortuneSteal* mutable_fortune_steal();
  ::FortuneSteal* release_fortune_steal();
  void set_allocated_fortune_steal(::FortuneSteal* fortune_steal);

  // optional .Wap_Str_Request wap_req = 112;
  bool has_wap_req() const;
  void clear_wap_req();
  static const int kWapReqFieldNumber = 112;
  const ::Wap_Str_Request& wap_req() const;
  ::Wap_Str_Request* mutable_wap_req();
  ::Wap_Str_Request* release_wap_req();
  void set_allocated_wap_req(::Wap_Str_Request* wap_req);

  // optional .Wap_Str_Response wap_rsp = 113;
  bool has_wap_rsp() const;
  void clear_wap_rsp();
  static const int kWapRspFieldNumber = 113;
  const ::Wap_Str_Response& wap_rsp() const;
  ::Wap_Str_Response* mutable_wap_rsp();
  ::Wap_Str_Response* release_wap_rsp();
  void set_allocated_wap_rsp(::Wap_Str_Response* wap_rsp);

  // optional .FriendRecallMsg friend_recall = 114;
  bool has_friend_recall() const;
  void clear_friend_recall();
  static const int kFriendRecallFieldNumber = 114;
  const ::FriendRecallMsg& friend_recall() const;
  ::FriendRecallMsg* mutable_friend_recall();
  ::FriendRecallMsg* release_friend_recall();
  void set_allocated_friend_recall(::FriendRecallMsg* friend_recall);

  // optional string openid = 115;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 115;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // repeated .SimpleMarkUser SimpleMare = 116;
  int simplemare_size() const;
  void clear_simplemare();
  static const int kSimpleMareFieldNumber = 116;
  const ::SimpleMarkUser& simplemare(int index) const;
  ::SimpleMarkUser* mutable_simplemare(int index);
  ::SimpleMarkUser* add_simplemare();
  const ::google::protobuf::RepeatedPtrField< ::SimpleMarkUser >&
      simplemare() const;
  ::google::protobuf::RepeatedPtrField< ::SimpleMarkUser >*
      mutable_simplemare();

  // optional .WebBuy3 webbuy3 = 117;
  bool has_webbuy3() const;
  void clear_webbuy3();
  static const int kWebbuy3FieldNumber = 117;
  const ::WebBuy3& webbuy3() const;
  ::WebBuy3* mutable_webbuy3();
  ::WebBuy3* release_webbuy3();
  void set_allocated_webbuy3(::WebBuy3* webbuy3);

  // optional .CenterLogicValue center_logic_value = 118;
  bool has_center_logic_value() const;
  void clear_center_logic_value();
  static const int kCenterLogicValueFieldNumber = 118;
  const ::CenterLogicValue& center_logic_value() const;
  ::CenterLogicValue* mutable_center_logic_value();
  ::CenterLogicValue* release_center_logic_value();
  void set_allocated_center_logic_value(::CenterLogicValue* center_logic_value);

  // optional .InviteFriendLvlSucc inviteFridData = 119;
  bool has_invitefriddata() const;
  void clear_invitefriddata();
  static const int kInviteFridDataFieldNumber = 119;
  const ::InviteFriendLvlSucc& invitefriddata() const;
  ::InviteFriendLvlSucc* mutable_invitefriddata();
  ::InviteFriendLvlSucc* release_invitefriddata();
  void set_allocated_invitefriddata(::InviteFriendLvlSucc* invitefriddata);

  // optional .MseAuthState Mse_MseAuthState = 129;
  bool has_mse_mseauthstate() const;
  void clear_mse_mseauthstate();
  static const int kMseMseAuthStateFieldNumber = 129;
  const ::MseAuthState& mse_mseauthstate() const;
  ::MseAuthState* mutable_mse_mseauthstate();
  ::MseAuthState* release_mse_mseauthstate();
  void set_allocated_mse_mseauthstate(::MseAuthState* mse_mseauthstate);

  // optional .MseFuncSwich Mse_MseFuncSwich = 130;
  bool has_mse_msefuncswich() const;
  void clear_mse_msefuncswich();
  static const int kMseMseFuncSwichFieldNumber = 130;
  const ::MseFuncSwich& mse_msefuncswich() const;
  ::MseFuncSwich* mutable_mse_msefuncswich();
  ::MseFuncSwich* release_mse_msefuncswich();
  void set_allocated_mse_msefuncswich(::MseFuncSwich* mse_msefuncswich);

  // optional .MceGatewayFunction Mce_MceGatewayFunction = 131;
  bool has_mce_mcegatewayfunction() const;
  void clear_mce_mcegatewayfunction();
  static const int kMceMceGatewayFunctionFieldNumber = 131;
  const ::MceGatewayFunction& mce_mcegatewayfunction() const;
  ::MceGatewayFunction* mutable_mce_mcegatewayfunction();
  ::MceGatewayFunction* release_mce_mcegatewayfunction();
  void set_allocated_mce_mcegatewayfunction(::MceGatewayFunction* mce_mcegatewayfunction);

  // optional .MseGatewayFunction Mse_MseGatewayFunction = 132;
  bool has_mse_msegatewayfunction() const;
  void clear_mse_msegatewayfunction();
  static const int kMseMseGatewayFunctionFieldNumber = 132;
  const ::MseGatewayFunction& mse_msegatewayfunction() const;
  ::MseGatewayFunction* mutable_mse_msegatewayfunction();
  ::MseGatewayFunction* release_mse_msegatewayfunction();
  void set_allocated_mse_msegatewayfunction(::MseGatewayFunction* mse_msegatewayfunction);

  // optional .MseFriendList Mse_MseFriendList = 133;
  bool has_mse_msefriendlist() const;
  void clear_mse_msefriendlist();
  static const int kMseMseFriendListFieldNumber = 133;
  const ::MseFriendList& mse_msefriendlist() const;
  ::MseFriendList* mutable_mse_msefriendlist();
  ::MseFriendList* release_mse_msefriendlist();
  void set_allocated_mse_msefriendlist(::MseFriendList* mse_msefriendlist);

  // optional .MceHeartbeat Mce_MceHeartbeat = 134;
  bool has_mce_mceheartbeat() const;
  void clear_mce_mceheartbeat();
  static const int kMceMceHeartbeatFieldNumber = 134;
  const ::MceHeartbeat& mce_mceheartbeat() const;
  ::MceHeartbeat* mutable_mce_mceheartbeat();
  ::MceHeartbeat* release_mce_mceheartbeat();
  void set_allocated_mce_mceheartbeat(::MceHeartbeat* mce_mceheartbeat);

  // optional .MceActionInfo Mce_MceActionInfo = 135;
  bool has_mce_mceactioninfo() const;
  void clear_mce_mceactioninfo();
  static const int kMceMceActionInfoFieldNumber = 135;
  const ::MceActionInfo& mce_mceactioninfo() const;
  ::MceActionInfo* mutable_mce_mceactioninfo();
  ::MceActionInfo* release_mce_mceactioninfo();
  void set_allocated_mce_mceactioninfo(::MceActionInfo* mce_mceactioninfo);

  // optional .MseActionInfo Mse_MseActionInfo = 136;
  bool has_mse_mseactioninfo() const;
  void clear_mse_mseactioninfo();
  static const int kMseMseActionInfoFieldNumber = 136;
  const ::MseActionInfo& mse_mseactioninfo() const;
  ::MseActionInfo* mutable_mse_mseactioninfo();
  ::MseActionInfo* release_mse_mseactioninfo();
  void set_allocated_mse_mseactioninfo(::MseActionInfo* mse_mseactioninfo);

  // optional .MseRank Mse_MseRank = 137;
  bool has_mse_mserank() const;
  void clear_mse_mserank();
  static const int kMseMseRankFieldNumber = 137;
  const ::MseRank& mse_mserank() const;
  ::MseRank* mutable_mse_mserank();
  ::MseRank* release_mse_mserank();
  void set_allocated_mse_mserank(::MseRank* mse_mserank);

  // @@protoc_insertion_point(class_scope:Event)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_fromworld_fd();
  inline void clear_has_fromworld_fd();
  inline void set_has_hallsrvid();
  inline void clear_has_hallsrvid();
  inline void set_has_workingstatus_req();
  inline void clear_has_workingstatus_req();
  inline void set_has_userlogin_req();
  inline void clear_has_userlogin_req();
  inline void set_has_userlogin_rsp();
  inline void clear_has_userlogin_rsp();
  inline void set_has_userauth_req();
  inline void clear_has_userauth_req();
  inline void set_has_userauth_rsp();
  inline void clear_has_userauth_rsp();
  inline void set_has_sendremoteuser_req();
  inline void clear_has_sendremoteuser_req();
  inline void set_has_http();
  inline void clear_has_http();
  inline void set_has_be_belottery();
  inline void clear_has_be_belottery();
  inline void set_has_be_beupdatewininfo();
  inline void clear_has_be_beupdatewininfo();
  inline void set_has_be_beupdateexp();
  inline void clear_has_be_beupdateexp();
  inline void set_has_be_beupdatetool();
  inline void clear_has_be_beupdatetool();
  inline void set_has_dp_dpnormalresult();
  inline void clear_has_dp_dpnormalresult();
  inline void set_has_lotterytimer();
  inline void clear_has_lotterytimer();
  inline void set_has_be_beupdatebattlecnt();
  inline void clear_has_be_beupdatebattlecnt();
  inline void set_has_wg_userleave();
  inline void clear_has_wg_userleave();
  inline void set_has_friendinfo();
  inline void clear_has_friendinfo();
  inline void set_has_forwardinfo();
  inline void clear_has_forwardinfo();
  inline void set_has_adminaddexp_req();
  inline void clear_has_adminaddexp_req();
  inline void set_has_adminaddexp_rsp();
  inline void clear_has_adminaddexp_rsp();
  inline void set_has_adminaddgold_req();
  inline void clear_has_adminaddgold_req();
  inline void set_has_adminaddgold_rsp();
  inline void clear_has_adminaddgold_rsp();
  inline void set_has_adminsetlevel_req();
  inline void clear_has_adminsetlevel_req();
  inline void set_has_adminsetlevel_rsp();
  inline void clear_has_adminsetlevel_rsp();
  inline void set_has_adminaddprop_req();
  inline void clear_has_adminaddprop_req();
  inline void set_has_adminaddprop_rsp();
  inline void clear_has_adminaddprop_rsp();
  inline void set_has_adminsetequip_req();
  inline void clear_has_adminsetequip_req();
  inline void set_has_adminsetequip_rsp();
  inline void clear_has_adminsetequip_rsp();
  inline void set_has_adminuserinfo_req();
  inline void clear_has_adminuserinfo_req();
  inline void set_has_adminuserinfo_rsp();
  inline void clear_has_adminuserinfo_rsp();
  inline void set_has_admindelprop_req();
  inline void clear_has_admindelprop_req();
  inline void set_has_admindelprop_rsp();
  inline void clear_has_admindelprop_rsp();
  inline void set_has_webbuy();
  inline void clear_has_webbuy();
  inline void set_has_adminruntask_req();
  inline void clear_has_adminruntask_req();
  inline void set_has_adminruntask_rsp();
  inline void clear_has_adminruntask_rsp();
  inline void set_has_adminbanchat_req();
  inline void clear_has_adminbanchat_req();
  inline void set_has_adminbanchat_rsp();
  inline void clear_has_adminbanchat_rsp();
  inline void set_has_adminbanlogin_req();
  inline void clear_has_adminbanlogin_req();
  inline void set_has_adminbanlogin_rsp();
  inline void clear_has_adminbanlogin_rsp();
  inline void set_has_adminaddpoint_req();
  inline void clear_has_adminaddpoint_req();
  inline void set_has_adminaddpoint_rsp();
  inline void clear_has_adminaddpoint_rsp();
  inline void set_has_adminaddindate_req();
  inline void clear_has_adminaddindate_req();
  inline void set_has_adminaddindate_rsp();
  inline void clear_has_adminaddindate_rsp();
  inline void set_has_adminfreshuser_req();
  inline void clear_has_adminfreshuser_req();
  inline void set_has_adminfreshuser_rsp();
  inline void clear_has_adminfreshuser_rsp();
  inline void set_has_adminaddmedal_req();
  inline void clear_has_adminaddmedal_req();
  inline void set_has_adminaddmedal_rsp();
  inline void clear_has_adminaddmedal_rsp();
  inline void set_has_weblengthenindate();
  inline void clear_has_weblengthenindate();
  inline void set_has_webcheckbandcoin();
  inline void clear_has_webcheckbandcoin();
  inline void set_has_adminbroadcast_req();
  inline void clear_has_adminbroadcast_req();
  inline void set_has_adminbroadcast_rsp();
  inline void clear_has_adminbroadcast_rsp();
  inline void set_has_adminreload_req();
  inline void clear_has_adminreload_req();
  inline void set_has_adminreload_rsp();
  inline void clear_has_adminreload_rsp();
  inline void set_has_update_guest_number();
  inline void clear_has_update_guest_number();
  inline void set_has_adminfluentprice_req();
  inline void clear_has_adminfluentprice_req();
  inline void set_has_adminfluentprice_rsp();
  inline void clear_has_adminfluentprice_rsp();
  inline void set_has_webunlock();
  inline void clear_has_webunlock();
  inline void set_has_webaddemployee();
  inline void clear_has_webaddemployee();
  inline void set_has_adminaddgoods_req();
  inline void clear_has_adminaddgoods_req();
  inline void set_has_adminaddgoods_rsp();
  inline void clear_has_adminaddgoods_rsp();
  inline void set_has_adminsetpublicpraise_req();
  inline void clear_has_adminsetpublicpraise_req();
  inline void set_has_adminsetpublicpraise_rsp();
  inline void clear_has_adminsetpublicpraise_rsp();
  inline void set_has_adminaddguest_req();
  inline void clear_has_adminaddguest_req();
  inline void set_has_adminaddguest_rsp();
  inline void clear_has_adminaddguest_rsp();
  inline void set_has_admindelgoods_req();
  inline void clear_has_admindelgoods_req();
  inline void set_has_admindelgoods_rsp();
  inline void clear_has_admindelgoods_rsp();
  inline void set_has_adminclear_req();
  inline void clear_has_adminclear_req();
  inline void set_has_adminclear_rsp();
  inline void clear_has_adminclear_rsp();
  inline void set_has_adminonlinenum_req();
  inline void clear_has_adminonlinenum_req();
  inline void set_has_adminonlinenum_rsp();
  inline void clear_has_adminonlinenum_rsp();
  inline void set_has_adminkickplayer_req();
  inline void clear_has_adminkickplayer_req();
  inline void set_has_adminkickplayer_rsp();
  inline void clear_has_adminkickplayer_rsp();
  inline void set_has_webinvite();
  inline void clear_has_webinvite();
  inline void set_has_invite();
  inline void clear_has_invite();
  inline void set_has_adminstr_req();
  inline void clear_has_adminstr_req();
  inline void set_has_adminstr_rsp();
  inline void clear_has_adminstr_rsp();
  inline void set_has_webbugcfm();
  inline void clear_has_webbugcfm();
  inline void set_has_adminsetval_req();
  inline void clear_has_adminsetval_req();
  inline void set_has_adminsetval_rsp();
  inline void clear_has_adminsetval_rsp();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_webask();
  inline void clear_has_webask();
  inline void set_has_webgive();
  inline void clear_has_webgive();
  inline void set_has_pushbackcnt();
  inline void clear_has_pushbackcnt();
  inline void set_has_qqunion_additem();
  inline void clear_has_qqunion_additem();
  inline void set_has_qqunion_checkopenid();
  inline void clear_has_qqunion_checkopenid();
  inline void set_has_qqunion_checkkey();
  inline void clear_has_qqunion_checkkey();
  inline void set_has_multi_level_friend_point();
  inline void clear_has_multi_level_friend_point();
  inline void set_has_admin_common_req();
  inline void clear_has_admin_common_req();
  inline void set_has_admin_common_rsp();
  inline void clear_has_admin_common_rsp();
  inline void set_has_talent_show();
  inline void clear_has_talent_show();
  inline void set_has_talent_show_list();
  inline void clear_has_talent_show_list();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_rankkind();
  inline void clear_has_rankkind();
  inline void set_has_freegift();
  inline void clear_has_freegift();
  inline void set_has_friend_send_gift();
  inline void clear_has_friend_send_gift();
  inline void set_has_fortune_steal();
  inline void clear_has_fortune_steal();
  inline void set_has_wap_req();
  inline void clear_has_wap_req();
  inline void set_has_wap_rsp();
  inline void clear_has_wap_rsp();
  inline void set_has_friend_recall();
  inline void clear_has_friend_recall();
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_webbuy3();
  inline void clear_has_webbuy3();
  inline void set_has_center_logic_value();
  inline void clear_has_center_logic_value();
  inline void set_has_invitefriddata();
  inline void clear_has_invitefriddata();
  inline void set_has_mse_mseauthstate();
  inline void clear_has_mse_mseauthstate();
  inline void set_has_mse_msefuncswich();
  inline void clear_has_mse_msefuncswich();
  inline void set_has_mce_mcegatewayfunction();
  inline void clear_has_mce_mcegatewayfunction();
  inline void set_has_mse_msegatewayfunction();
  inline void clear_has_mse_msegatewayfunction();
  inline void set_has_mse_msefriendlist();
  inline void clear_has_mse_msefriendlist();
  inline void set_has_mce_mceheartbeat();
  inline void clear_has_mce_mceheartbeat();
  inline void set_has_mce_mceactioninfo();
  inline void clear_has_mce_mceactioninfo();
  inline void set_has_mse_mseactioninfo();
  inline void clear_has_mse_mseactioninfo();
  inline void set_has_mse_mserank();
  inline void clear_has_mse_mserank();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[4];
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 fromworld_fd_;
  ::google::protobuf::int32 hallsrvid_;
  ::WorkingStatus_Req* workingstatus_req_;
  ::UserLogin_Req* userlogin_req_;
  ::UserLogin_Rsp* userlogin_rsp_;
  ::UserAuth_Req* userauth_req_;
  ::UserAuth_Rsp* userauth_rsp_;
  ::SendRemoteUser_Req* sendremoteuser_req_;
  ::HttpRequestV3* http_;
  ::BeLottery* be_belottery_;
  ::BeUpdateWinInfo* be_beupdatewininfo_;
  ::BeUpdateExp* be_beupdateexp_;
  ::BeUpdateTool* be_beupdatetool_;
  ::DpNormalResult* dp_dpnormalresult_;
  ::LotteryTimer* lotterytimer_;
  ::BeUpdateBattleCnt* be_beupdatebattlecnt_;
  ::WG_UserLeave* wg_userleave_;
  ::GWG_FriendRequest* friendinfo_;
  ::ForwardInfo* forwardinfo_;
  ::Admin_AddExp_Req* adminaddexp_req_;
  ::Admin_AddExp_Rsp* adminaddexp_rsp_;
  ::Admin_AddGold_Req* adminaddgold_req_;
  ::Admin_AddGold_Rsp* adminaddgold_rsp_;
  ::Admin_SetLevel_Req* adminsetlevel_req_;
  ::Admin_SetLevel_Rsp* adminsetlevel_rsp_;
  ::Admin_AddProp_Req* adminaddprop_req_;
  ::Admin_AddProp_Rsp* adminaddprop_rsp_;
  ::Admin_SetEquip_Req* adminsetequip_req_;
  ::Admin_SetEquip_Rsp* adminsetequip_rsp_;
  ::Admin_UserInfo_Req* adminuserinfo_req_;
  ::Admin_UserInfo_Rsp* adminuserinfo_rsp_;
  ::Admin_DelProp_Req* admindelprop_req_;
  ::Admin_DelProp_Rsp* admindelprop_rsp_;
  ::WebBuy* webbuy_;
  ::Admin_RunTask_Req* adminruntask_req_;
  ::Admin_RunTask_Rsp* adminruntask_rsp_;
  ::Admin_BanChat_Req* adminbanchat_req_;
  ::Admin_BanChat_Rsp* adminbanchat_rsp_;
  ::Admin_BanLogin_Req* adminbanlogin_req_;
  ::Admin_BanLogin_Rsp* adminbanlogin_rsp_;
  ::Admin_AddPoint_Req* adminaddpoint_req_;
  ::Admin_AddPoint_Rsp* adminaddpoint_rsp_;
  ::Admin_AddIndate_Req* adminaddindate_req_;
  ::Admin_AddIndate_Rsp* adminaddindate_rsp_;
  ::Admin_FreshUser_Req* adminfreshuser_req_;
  ::Admin_FreshUser_Rsp* adminfreshuser_rsp_;
  ::Admin_AddMedal_Req* adminaddmedal_req_;
  ::Admin_AddMedal_Rsp* adminaddmedal_rsp_;
  ::WebLengthenIndate* weblengthenindate_;
  ::WebCheckBandCoin* webcheckbandcoin_;
  ::Admin_BroadCast_Req* adminbroadcast_req_;
  ::Admin_BroadCast_Rsp* adminbroadcast_rsp_;
  ::Admin_Reload_Req* adminreload_req_;
  ::Admin_Reload_Rsp* adminreload_rsp_;
  ::UpdateGuestNumber* update_guest_number_;
  ::Admin_FluentPrice_Req* adminfluentprice_req_;
  ::Admin_FluentPrice_Rsp* adminfluentprice_rsp_;
  ::WebUnlock* webunlock_;
  ::WebAddEmployee* webaddemployee_;
  ::Admin_AddGoods_Req* adminaddgoods_req_;
  ::Admin_AddGoods_Rsp* adminaddgoods_rsp_;
  ::Admin_SetPublicPraise_Req* adminsetpublicpraise_req_;
  ::Admin_SetPublicPraise_Rsp* adminsetpublicpraise_rsp_;
  ::Admin_AddGuest_Req* adminaddguest_req_;
  ::Admin_AddGuest_Rsp* adminaddguest_rsp_;
  ::Admin_DelGoods_Req* admindelgoods_req_;
  ::Admin_DelGoods_Rsp* admindelgoods_rsp_;
  ::Admin_Clear_Req* adminclear_req_;
  ::Admin_Clear_Rsp* adminclear_rsp_;
  ::Admin_StatisticsOnLinePeople_Req* adminonlinenum_req_;
  ::Admin_StatisticsOnLinePeople_Rsp* adminonlinenum_rsp_;
  ::Admin_KickPlayer_Req* adminkickplayer_req_;
  ::Admin_KickPlayer_Rsp* adminkickplayer_rsp_;
  ::WebInvite* webinvite_;
  ::Invite* invite_;
  ::Admin_STR_Req* adminstr_req_;
  ::Admin_STR_Rsp* adminstr_rsp_;
  ::WebBuyCfm* webbugcfm_;
  ::Admin_SetVal_Req* adminsetval_req_;
  ::Admin_SetVal_Rsp* adminsetval_rsp_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::WebAskFor* webask_;
  ::WebGiveFor* webgive_;
  ::QQUnionAddItem* qqunion_additem_;
  ::QQUnionCheckOpenId* qqunion_checkopenid_;
  ::QQUnionCheckKey* qqunion_checkkey_;
  ::MultiLevelFriendPoint* multi_level_friend_point_;
  ::google::protobuf::int32 pushbackcnt_;
  ::google::protobuf::int32 gameid_;
  ::Admin_Common_Req* admin_common_req_;
  ::Admin_Common_Rsp* admin_common_rsp_;
  ::TalentShow* talent_show_;
  ::TalentShowList* talent_show_list_;
  ::google::protobuf::int32 worldid_;
  ::google::protobuf::int32 rankkind_;
  ::WebFreeGift* freegift_;
  ::FriendSendGift* friend_send_gift_;
  ::FortuneSteal* fortune_steal_;
  ::Wap_Str_Request* wap_req_;
  ::Wap_Str_Response* wap_rsp_;
  ::FriendRecallMsg* friend_recall_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::RepeatedPtrField< ::SimpleMarkUser > simplemare_;
  ::WebBuy3* webbuy3_;
  ::CenterLogicValue* center_logic_value_;
  ::InviteFriendLvlSucc* invitefriddata_;
  ::MseAuthState* mse_mseauthstate_;
  ::MseFuncSwich* mse_msefuncswich_;
  ::MceGatewayFunction* mce_mcegatewayfunction_;
  ::MseGatewayFunction* mse_msegatewayfunction_;
  ::MseFriendList* mse_msefriendlist_;
  ::MceHeartbeat* mce_mceheartbeat_;
  ::MceActionInfo* mce_mceactioninfo_;
  ::MseActionInfo* mse_mseactioninfo_;
  ::MseRank* mse_mserank_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Event* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CenterLogicValue

// optional string key = 1;
inline bool CenterLogicValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterLogicValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterLogicValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterLogicValue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& CenterLogicValue::key() const {
  // @@protoc_insertion_point(field_get:CenterLogicValue.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CenterLogicValue::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CenterLogicValue.key)
}
inline void CenterLogicValue::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CenterLogicValue.key)
}
inline void CenterLogicValue::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CenterLogicValue.key)
}
inline ::std::string* CenterLogicValue::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:CenterLogicValue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CenterLogicValue::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CenterLogicValue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:CenterLogicValue.key)
}

// optional int32 value = 2;
inline bool CenterLogicValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterLogicValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterLogicValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterLogicValue::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CenterLogicValue::value() const {
  // @@protoc_insertion_point(field_get:CenterLogicValue.value)
  return value_;
}
inline void CenterLogicValue::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:CenterLogicValue.value)
}

// optional int32 oper = 3;
inline bool CenterLogicValue::has_oper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterLogicValue::set_has_oper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterLogicValue::clear_has_oper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterLogicValue::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 CenterLogicValue::oper() const {
  // @@protoc_insertion_point(field_get:CenterLogicValue.oper)
  return oper_;
}
inline void CenterLogicValue::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:CenterLogicValue.oper)
}

// -------------------------------------------------------------------

// UserLogin_Req

// required int32 siteid = 1;
inline bool UserLogin_Req::has_siteid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLogin_Req::set_has_siteid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLogin_Req::clear_has_siteid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLogin_Req::clear_siteid() {
  siteid_ = 0;
  clear_has_siteid();
}
inline ::google::protobuf::int32 UserLogin_Req::siteid() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.siteid)
  return siteid_;
}
inline void UserLogin_Req::set_siteid(::google::protobuf::int32 value) {
  set_has_siteid();
  siteid_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.siteid)
}

// required string platform_id = 2;
inline bool UserLogin_Req::has_platform_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLogin_Req::set_has_platform_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLogin_Req::clear_has_platform_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLogin_Req::clear_platform_id() {
  platform_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_id();
}
inline const ::std::string& UserLogin_Req::platform_id() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.platform_id)
  return platform_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_platform_id(const ::std::string& value) {
  set_has_platform_id();
  platform_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Req.platform_id)
}
inline void UserLogin_Req::set_platform_id(const char* value) {
  set_has_platform_id();
  platform_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.platform_id)
}
inline void UserLogin_Req::set_platform_id(const char* value, size_t size) {
  set_has_platform_id();
  platform_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.platform_id)
}
inline ::std::string* UserLogin_Req::mutable_platform_id() {
  set_has_platform_id();
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.platform_id)
  return platform_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Req::release_platform_id() {
  clear_has_platform_id();
  return platform_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_allocated_platform_id(::std::string* platform_id) {
  if (platform_id != NULL) {
    set_has_platform_id();
  } else {
    clear_has_platform_id();
  }
  platform_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_id);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Req.platform_id)
}

// required string name = 3;
inline bool UserLogin_Req::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserLogin_Req::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserLogin_Req::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserLogin_Req::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& UserLogin_Req::name() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Req.name)
}
inline void UserLogin_Req::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.name)
}
inline void UserLogin_Req::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.name)
}
inline ::std::string* UserLogin_Req::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Req::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Req.name)
}

// required string profile_link = 4;
inline bool UserLogin_Req::has_profile_link() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserLogin_Req::set_has_profile_link() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserLogin_Req::clear_has_profile_link() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserLogin_Req::clear_profile_link() {
  profile_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_profile_link();
}
inline const ::std::string& UserLogin_Req::profile_link() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.profile_link)
  return profile_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_profile_link(const ::std::string& value) {
  set_has_profile_link();
  profile_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Req.profile_link)
}
inline void UserLogin_Req::set_profile_link(const char* value) {
  set_has_profile_link();
  profile_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.profile_link)
}
inline void UserLogin_Req::set_profile_link(const char* value, size_t size) {
  set_has_profile_link();
  profile_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.profile_link)
}
inline ::std::string* UserLogin_Req::mutable_profile_link() {
  set_has_profile_link();
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.profile_link)
  return profile_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Req::release_profile_link() {
  clear_has_profile_link();
  return profile_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_allocated_profile_link(::std::string* profile_link) {
  if (profile_link != NULL) {
    set_has_profile_link();
  } else {
    clear_has_profile_link();
  }
  profile_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_link);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Req.profile_link)
}

// required int32 gender = 5;
inline bool UserLogin_Req::has_gender() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserLogin_Req::set_has_gender() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserLogin_Req::clear_has_gender() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserLogin_Req::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 UserLogin_Req::gender() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.gender)
  return gender_;
}
inline void UserLogin_Req::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.gender)
}

// required bool is_yellow_dmd = 6;
inline bool UserLogin_Req::has_is_yellow_dmd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserLogin_Req::set_has_is_yellow_dmd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserLogin_Req::clear_has_is_yellow_dmd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserLogin_Req::clear_is_yellow_dmd() {
  is_yellow_dmd_ = false;
  clear_has_is_yellow_dmd();
}
inline bool UserLogin_Req::is_yellow_dmd() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.is_yellow_dmd)
  return is_yellow_dmd_;
}
inline void UserLogin_Req::set_is_yellow_dmd(bool value) {
  set_has_is_yellow_dmd();
  is_yellow_dmd_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.is_yellow_dmd)
}

// required bool is_yellow_dmd_year = 7;
inline bool UserLogin_Req::has_is_yellow_dmd_year() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserLogin_Req::set_has_is_yellow_dmd_year() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserLogin_Req::clear_has_is_yellow_dmd_year() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserLogin_Req::clear_is_yellow_dmd_year() {
  is_yellow_dmd_year_ = false;
  clear_has_is_yellow_dmd_year();
}
inline bool UserLogin_Req::is_yellow_dmd_year() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.is_yellow_dmd_year)
  return is_yellow_dmd_year_;
}
inline void UserLogin_Req::set_is_yellow_dmd_year(bool value) {
  set_has_is_yellow_dmd_year();
  is_yellow_dmd_year_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.is_yellow_dmd_year)
}

// required int32 yellow_dmd_lv = 8;
inline bool UserLogin_Req::has_yellow_dmd_lv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserLogin_Req::set_has_yellow_dmd_lv() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserLogin_Req::clear_has_yellow_dmd_lv() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserLogin_Req::clear_yellow_dmd_lv() {
  yellow_dmd_lv_ = 0;
  clear_has_yellow_dmd_lv();
}
inline ::google::protobuf::int32 UserLogin_Req::yellow_dmd_lv() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.yellow_dmd_lv)
  return yellow_dmd_lv_;
}
inline void UserLogin_Req::set_yellow_dmd_lv(::google::protobuf::int32 value) {
  set_has_yellow_dmd_lv();
  yellow_dmd_lv_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.yellow_dmd_lv)
}

// repeated string friends_platid = 9;
inline int UserLogin_Req::friends_platid_size() const {
  return friends_platid_.size();
}
inline void UserLogin_Req::clear_friends_platid() {
  friends_platid_.Clear();
}
inline const ::std::string& UserLogin_Req::friends_platid(int index) const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.friends_platid)
  return friends_platid_.Get(index);
}
inline ::std::string* UserLogin_Req::mutable_friends_platid(int index) {
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.friends_platid)
  return friends_platid_.Mutable(index);
}
inline void UserLogin_Req::set_friends_platid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UserLogin_Req.friends_platid)
  friends_platid_.Mutable(index)->assign(value);
}
inline void UserLogin_Req::set_friends_platid(int index, const char* value) {
  friends_platid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.friends_platid)
}
inline void UserLogin_Req::set_friends_platid(int index, const char* value, size_t size) {
  friends_platid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.friends_platid)
}
inline ::std::string* UserLogin_Req::add_friends_platid() {
  return friends_platid_.Add();
}
inline void UserLogin_Req::add_friends_platid(const ::std::string& value) {
  friends_platid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:UserLogin_Req.friends_platid)
}
inline void UserLogin_Req::add_friends_platid(const char* value) {
  friends_platid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:UserLogin_Req.friends_platid)
}
inline void UserLogin_Req::add_friends_platid(const char* value, size_t size) {
  friends_platid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:UserLogin_Req.friends_platid)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UserLogin_Req::friends_platid() const {
  // @@protoc_insertion_point(field_list:UserLogin_Req.friends_platid)
  return friends_platid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UserLogin_Req::mutable_friends_platid() {
  // @@protoc_insertion_point(field_mutable_list:UserLogin_Req.friends_platid)
  return &friends_platid_;
}

// required int32 webfd = 10;
inline bool UserLogin_Req::has_webfd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserLogin_Req::set_has_webfd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserLogin_Req::clear_has_webfd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserLogin_Req::clear_webfd() {
  webfd_ = 0;
  clear_has_webfd();
}
inline ::google::protobuf::int32 UserLogin_Req::webfd() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.webfd)
  return webfd_;
}
inline void UserLogin_Req::set_webfd(::google::protobuf::int32 value) {
  set_has_webfd();
  webfd_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.webfd)
}

// required int32 sid = 11;
inline bool UserLogin_Req::has_sid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserLogin_Req::set_has_sid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserLogin_Req::clear_has_sid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserLogin_Req::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 UserLogin_Req::sid() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.sid)
  return sid_;
}
inline void UserLogin_Req::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.sid)
}

// optional string open_key = 12;
inline bool UserLogin_Req::has_open_key() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserLogin_Req::set_has_open_key() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserLogin_Req::clear_has_open_key() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserLogin_Req::clear_open_key() {
  open_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_open_key();
}
inline const ::std::string& UserLogin_Req::open_key() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.open_key)
  return open_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_open_key(const ::std::string& value) {
  set_has_open_key();
  open_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Req.open_key)
}
inline void UserLogin_Req::set_open_key(const char* value) {
  set_has_open_key();
  open_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.open_key)
}
inline void UserLogin_Req::set_open_key(const char* value, size_t size) {
  set_has_open_key();
  open_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.open_key)
}
inline ::std::string* UserLogin_Req::mutable_open_key() {
  set_has_open_key();
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.open_key)
  return open_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Req::release_open_key() {
  clear_has_open_key();
  return open_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_allocated_open_key(::std::string* open_key) {
  if (open_key != NULL) {
    set_has_open_key();
  } else {
    clear_has_open_key();
  }
  open_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_key);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Req.open_key)
}

// optional int32 register_type = 13;
inline bool UserLogin_Req::has_register_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserLogin_Req::set_has_register_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserLogin_Req::clear_has_register_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserLogin_Req::clear_register_type() {
  register_type_ = 0;
  clear_has_register_type();
}
inline ::google::protobuf::int32 UserLogin_Req::register_type() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.register_type)
  return register_type_;
}
inline void UserLogin_Req::set_register_type(::google::protobuf::int32 value) {
  set_has_register_type();
  register_type_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Req.register_type)
}

// optional string action_from = 14;
inline bool UserLogin_Req::has_action_from() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserLogin_Req::set_has_action_from() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserLogin_Req::clear_has_action_from() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserLogin_Req::clear_action_from() {
  action_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action_from();
}
inline const ::std::string& UserLogin_Req::action_from() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.action_from)
  return action_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_action_from(const ::std::string& value) {
  set_has_action_from();
  action_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Req.action_from)
}
inline void UserLogin_Req::set_action_from(const char* value) {
  set_has_action_from();
  action_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.action_from)
}
inline void UserLogin_Req::set_action_from(const char* value, size_t size) {
  set_has_action_from();
  action_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.action_from)
}
inline ::std::string* UserLogin_Req::mutable_action_from() {
  set_has_action_from();
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.action_from)
  return action_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Req::release_action_from() {
  clear_has_action_from();
  return action_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_allocated_action_from(::std::string* action_from) {
  if (action_from != NULL) {
    set_has_action_from();
  } else {
    clear_has_action_from();
  }
  action_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_from);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Req.action_from)
}

// optional string device_from = 15;
inline bool UserLogin_Req::has_device_from() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserLogin_Req::set_has_device_from() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserLogin_Req::clear_has_device_from() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserLogin_Req::clear_device_from() {
  device_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_from();
}
inline const ::std::string& UserLogin_Req::device_from() const {
  // @@protoc_insertion_point(field_get:UserLogin_Req.device_from)
  return device_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_device_from(const ::std::string& value) {
  set_has_device_from();
  device_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Req.device_from)
}
inline void UserLogin_Req::set_device_from(const char* value) {
  set_has_device_from();
  device_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Req.device_from)
}
inline void UserLogin_Req::set_device_from(const char* value, size_t size) {
  set_has_device_from();
  device_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Req.device_from)
}
inline ::std::string* UserLogin_Req::mutable_device_from() {
  set_has_device_from();
  // @@protoc_insertion_point(field_mutable:UserLogin_Req.device_from)
  return device_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Req::release_device_from() {
  clear_has_device_from();
  return device_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Req::set_allocated_device_from(::std::string* device_from) {
  if (device_from != NULL) {
    set_has_device_from();
  } else {
    clear_has_device_from();
  }
  device_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_from);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Req.device_from)
}

// -------------------------------------------------------------------

// UserLogin_Rsp

// required int64 uid = 1;
inline bool UserLogin_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLogin_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLogin_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLogin_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 UserLogin_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.uid)
  return uid_;
}
inline void UserLogin_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.uid)
}

// required string secret = 2;
inline bool UserLogin_Rsp::has_secret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLogin_Rsp::set_has_secret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLogin_Rsp::clear_has_secret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLogin_Rsp::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secret();
}
inline const ::std::string& UserLogin_Rsp::secret() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.secret)
  return secret_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Rsp::set_secret(const ::std::string& value) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.secret)
}
inline void UserLogin_Rsp::set_secret(const char* value) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Rsp.secret)
}
inline void UserLogin_Rsp::set_secret(const char* value, size_t size) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Rsp.secret)
}
inline ::std::string* UserLogin_Rsp::mutable_secret() {
  set_has_secret();
  // @@protoc_insertion_point(field_mutable:UserLogin_Rsp.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Rsp::release_secret() {
  clear_has_secret();
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Rsp::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    set_has_secret();
  } else {
    clear_has_secret();
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Rsp.secret)
}

// required string server = 3;
inline bool UserLogin_Rsp::has_server() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserLogin_Rsp::set_has_server() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserLogin_Rsp::clear_has_server() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserLogin_Rsp::clear_server() {
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server();
}
inline const ::std::string& UserLogin_Rsp::server() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.server)
  return server_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Rsp::set_server(const ::std::string& value) {
  set_has_server();
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.server)
}
inline void UserLogin_Rsp::set_server(const char* value) {
  set_has_server();
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Rsp.server)
}
inline void UserLogin_Rsp::set_server(const char* value, size_t size) {
  set_has_server();
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Rsp.server)
}
inline ::std::string* UserLogin_Rsp::mutable_server() {
  set_has_server();
  // @@protoc_insertion_point(field_mutable:UserLogin_Rsp.server)
  return server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Rsp::release_server() {
  clear_has_server();
  return server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Rsp::set_allocated_server(::std::string* server) {
  if (server != NULL) {
    set_has_server();
  } else {
    clear_has_server();
  }
  server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Rsp.server)
}

// required int32 port = 4;
inline bool UserLogin_Rsp::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserLogin_Rsp::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserLogin_Rsp::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserLogin_Rsp::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 UserLogin_Rsp::port() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.port)
  return port_;
}
inline void UserLogin_Rsp::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.port)
}

// required int32 webfd = 5;
inline bool UserLogin_Rsp::has_webfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserLogin_Rsp::set_has_webfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserLogin_Rsp::clear_has_webfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserLogin_Rsp::clear_webfd() {
  webfd_ = 0;
  clear_has_webfd();
}
inline ::google::protobuf::int32 UserLogin_Rsp::webfd() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.webfd)
  return webfd_;
}
inline void UserLogin_Rsp::set_webfd(::google::protobuf::int32 value) {
  set_has_webfd();
  webfd_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.webfd)
}

// required int32 sid = 6;
inline bool UserLogin_Rsp::has_sid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserLogin_Rsp::set_has_sid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserLogin_Rsp::clear_has_sid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserLogin_Rsp::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 UserLogin_Rsp::sid() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.sid)
  return sid_;
}
inline void UserLogin_Rsp::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.sid)
}

// optional string argv = 7;
inline bool UserLogin_Rsp::has_argv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserLogin_Rsp::set_has_argv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserLogin_Rsp::clear_has_argv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserLogin_Rsp::clear_argv() {
  argv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_argv();
}
inline const ::std::string& UserLogin_Rsp::argv() const {
  // @@protoc_insertion_point(field_get:UserLogin_Rsp.argv)
  return argv_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Rsp::set_argv(const ::std::string& value) {
  set_has_argv();
  argv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogin_Rsp.argv)
}
inline void UserLogin_Rsp::set_argv(const char* value) {
  set_has_argv();
  argv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogin_Rsp.argv)
}
inline void UserLogin_Rsp::set_argv(const char* value, size_t size) {
  set_has_argv();
  argv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogin_Rsp.argv)
}
inline ::std::string* UserLogin_Rsp::mutable_argv() {
  set_has_argv();
  // @@protoc_insertion_point(field_mutable:UserLogin_Rsp.argv)
  return argv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogin_Rsp::release_argv() {
  clear_has_argv();
  return argv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogin_Rsp::set_allocated_argv(::std::string* argv) {
  if (argv != NULL) {
    set_has_argv();
  } else {
    clear_has_argv();
  }
  argv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), argv);
  // @@protoc_insertion_point(field_set_allocated:UserLogin_Rsp.argv)
}

// -------------------------------------------------------------------

// WG_UserLeave

// required int32 fd = 1;
inline bool WG_UserLeave::has_fd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WG_UserLeave::set_has_fd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WG_UserLeave::clear_has_fd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WG_UserLeave::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WG_UserLeave::fd() const {
  // @@protoc_insertion_point(field_get:WG_UserLeave.fd)
  return fd_;
}
inline void WG_UserLeave::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WG_UserLeave.fd)
}

// -------------------------------------------------------------------

// WorkingStatus_Req

// required int32 gid = 1;
inline bool WorkingStatus_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkingStatus_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkingStatus_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkingStatus_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 WorkingStatus_Req::gid() const {
  // @@protoc_insertion_point(field_get:WorkingStatus_Req.gid)
  return gid_;
}
inline void WorkingStatus_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:WorkingStatus_Req.gid)
}

// required bool finish = 2;
inline bool WorkingStatus_Req::has_finish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkingStatus_Req::set_has_finish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkingStatus_Req::clear_has_finish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkingStatus_Req::clear_finish() {
  finish_ = false;
  clear_has_finish();
}
inline bool WorkingStatus_Req::finish() const {
  // @@protoc_insertion_point(field_get:WorkingStatus_Req.finish)
  return finish_;
}
inline void WorkingStatus_Req::set_finish(bool value) {
  set_has_finish();
  finish_ = value;
  // @@protoc_insertion_point(field_set:WorkingStatus_Req.finish)
}

// -------------------------------------------------------------------

// UserAuth_Req

// required int64 uid = 1;
inline bool UserAuth_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAuth_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAuth_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAuth_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 UserAuth_Req::uid() const {
  // @@protoc_insertion_point(field_get:UserAuth_Req.uid)
  return uid_;
}
inline void UserAuth_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserAuth_Req.uid)
}

// required int64 secret = 2;
inline bool UserAuth_Req::has_secret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAuth_Req::set_has_secret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAuth_Req::clear_has_secret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAuth_Req::clear_secret() {
  secret_ = GOOGLE_LONGLONG(0);
  clear_has_secret();
}
inline ::google::protobuf::int64 UserAuth_Req::secret() const {
  // @@protoc_insertion_point(field_get:UserAuth_Req.secret)
  return secret_;
}
inline void UserAuth_Req::set_secret(::google::protobuf::int64 value) {
  set_has_secret();
  secret_ = value;
  // @@protoc_insertion_point(field_set:UserAuth_Req.secret)
}

// required int32 sockfd = 3;
inline bool UserAuth_Req::has_sockfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserAuth_Req::set_has_sockfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserAuth_Req::clear_has_sockfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserAuth_Req::clear_sockfd() {
  sockfd_ = 0;
  clear_has_sockfd();
}
inline ::google::protobuf::int32 UserAuth_Req::sockfd() const {
  // @@protoc_insertion_point(field_get:UserAuth_Req.sockfd)
  return sockfd_;
}
inline void UserAuth_Req::set_sockfd(::google::protobuf::int32 value) {
  set_has_sockfd();
  sockfd_ = value;
  // @@protoc_insertion_point(field_set:UserAuth_Req.sockfd)
}

// -------------------------------------------------------------------

// UserAuth_Rsp

// required bool pass = 1;
inline bool UserAuth_Rsp::has_pass() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAuth_Rsp::set_has_pass() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAuth_Rsp::clear_has_pass() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAuth_Rsp::clear_pass() {
  pass_ = false;
  clear_has_pass();
}
inline bool UserAuth_Rsp::pass() const {
  // @@protoc_insertion_point(field_get:UserAuth_Rsp.pass)
  return pass_;
}
inline void UserAuth_Rsp::set_pass(bool value) {
  set_has_pass();
  pass_ = value;
  // @@protoc_insertion_point(field_set:UserAuth_Rsp.pass)
}

// -------------------------------------------------------------------

// SendRemoteUser_Req

// required int64 uid = 1;
inline bool SendRemoteUser_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendRemoteUser_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendRemoteUser_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendRemoteUser_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 SendRemoteUser_Req::uid() const {
  // @@protoc_insertion_point(field_get:SendRemoteUser_Req.uid)
  return uid_;
}
inline void SendRemoteUser_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:SendRemoteUser_Req.uid)
}

// required int32 cmd = 2;
inline bool SendRemoteUser_Req::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendRemoteUser_Req::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendRemoteUser_Req::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendRemoteUser_Req::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 SendRemoteUser_Req::cmd() const {
  // @@protoc_insertion_point(field_get:SendRemoteUser_Req.cmd)
  return cmd_;
}
inline void SendRemoteUser_Req::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:SendRemoteUser_Req.cmd)
}

// required string text = 3;
inline bool SendRemoteUser_Req::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendRemoteUser_Req::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendRemoteUser_Req::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendRemoteUser_Req::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& SendRemoteUser_Req::text() const {
  // @@protoc_insertion_point(field_get:SendRemoteUser_Req.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendRemoteUser_Req::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendRemoteUser_Req.text)
}
inline void SendRemoteUser_Req::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendRemoteUser_Req.text)
}
inline void SendRemoteUser_Req::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendRemoteUser_Req.text)
}
inline ::std::string* SendRemoteUser_Req::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:SendRemoteUser_Req.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendRemoteUser_Req::release_text() {
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendRemoteUser_Req::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:SendRemoteUser_Req.text)
}

// -------------------------------------------------------------------

// HallEnterRoom

// -------------------------------------------------------------------

// BeLottery

// required int32 lottery = 1;
inline bool BeLottery::has_lottery() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeLottery::set_has_lottery() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeLottery::clear_has_lottery() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeLottery::clear_lottery() {
  lottery_ = 0;
  clear_has_lottery();
}
inline ::google::protobuf::int32 BeLottery::lottery() const {
  // @@protoc_insertion_point(field_get:BeLottery.lottery)
  return lottery_;
}
inline void BeLottery::set_lottery(::google::protobuf::int32 value) {
  set_has_lottery();
  lottery_ = value;
  // @@protoc_insertion_point(field_set:BeLottery.lottery)
}

// required int32 sign = 2;
inline bool BeLottery::has_sign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeLottery::set_has_sign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeLottery::clear_has_sign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeLottery::clear_sign() {
  sign_ = 0;
  clear_has_sign();
}
inline ::google::protobuf::int32 BeLottery::sign() const {
  // @@protoc_insertion_point(field_get:BeLottery.sign)
  return sign_;
}
inline void BeLottery::set_sign(::google::protobuf::int32 value) {
  set_has_sign();
  sign_ = value;
  // @@protoc_insertion_point(field_set:BeLottery.sign)
}

// required int32 lotteryLevel = 3;
inline bool BeLottery::has_lotterylevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeLottery::set_has_lotterylevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeLottery::clear_has_lotterylevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeLottery::clear_lotterylevel() {
  lotterylevel_ = 0;
  clear_has_lotterylevel();
}
inline ::google::protobuf::int32 BeLottery::lotterylevel() const {
  // @@protoc_insertion_point(field_get:BeLottery.lotteryLevel)
  return lotterylevel_;
}
inline void BeLottery::set_lotterylevel(::google::protobuf::int32 value) {
  set_has_lotterylevel();
  lotterylevel_ = value;
  // @@protoc_insertion_point(field_set:BeLottery.lotteryLevel)
}

// -------------------------------------------------------------------

// BeUpdateWinInfo

// required bool wins = 1;
inline bool BeUpdateWinInfo::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeUpdateWinInfo::set_has_wins() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeUpdateWinInfo::clear_has_wins() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeUpdateWinInfo::clear_wins() {
  wins_ = false;
  clear_has_wins();
}
inline bool BeUpdateWinInfo::wins() const {
  // @@protoc_insertion_point(field_get:BeUpdateWinInfo.wins)
  return wins_;
}
inline void BeUpdateWinInfo::set_wins(bool value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateWinInfo.wins)
}

// required int32 killCount = 2;
inline bool BeUpdateWinInfo::has_killcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeUpdateWinInfo::set_has_killcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeUpdateWinInfo::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeUpdateWinInfo::clear_killcount() {
  killcount_ = 0;
  clear_has_killcount();
}
inline ::google::protobuf::int32 BeUpdateWinInfo::killcount() const {
  // @@protoc_insertion_point(field_get:BeUpdateWinInfo.killCount)
  return killcount_;
}
inline void BeUpdateWinInfo::set_killcount(::google::protobuf::int32 value) {
  set_has_killcount();
  killcount_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateWinInfo.killCount)
}

// optional uint32 battleMode = 3;
inline bool BeUpdateWinInfo::has_battlemode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeUpdateWinInfo::set_has_battlemode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeUpdateWinInfo::clear_has_battlemode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeUpdateWinInfo::clear_battlemode() {
  battlemode_ = 0u;
  clear_has_battlemode();
}
inline ::google::protobuf::uint32 BeUpdateWinInfo::battlemode() const {
  // @@protoc_insertion_point(field_get:BeUpdateWinInfo.battleMode)
  return battlemode_;
}
inline void BeUpdateWinInfo::set_battlemode(::google::protobuf::uint32 value) {
  set_has_battlemode();
  battlemode_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateWinInfo.battleMode)
}

// optional uint32 roomType = 4;
inline bool BeUpdateWinInfo::has_roomtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeUpdateWinInfo::set_has_roomtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeUpdateWinInfo::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeUpdateWinInfo::clear_roomtype() {
  roomtype_ = 0u;
  clear_has_roomtype();
}
inline ::google::protobuf::uint32 BeUpdateWinInfo::roomtype() const {
  // @@protoc_insertion_point(field_get:BeUpdateWinInfo.roomType)
  return roomtype_;
}
inline void BeUpdateWinInfo::set_roomtype(::google::protobuf::uint32 value) {
  set_has_roomtype();
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateWinInfo.roomType)
}

// -------------------------------------------------------------------

// BeUpdateExp

// required int32 expDeta = 1;
inline bool BeUpdateExp::has_expdeta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeUpdateExp::set_has_expdeta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeUpdateExp::clear_has_expdeta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeUpdateExp::clear_expdeta() {
  expdeta_ = 0;
  clear_has_expdeta();
}
inline ::google::protobuf::int32 BeUpdateExp::expdeta() const {
  // @@protoc_insertion_point(field_get:BeUpdateExp.expDeta)
  return expdeta_;
}
inline void BeUpdateExp::set_expdeta(::google::protobuf::int32 value) {
  set_has_expdeta();
  expdeta_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateExp.expDeta)
}

// -------------------------------------------------------------------

// BeUpdateTool

// required int32 idx = 1;
inline bool BeUpdateTool::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeUpdateTool::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeUpdateTool::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeUpdateTool::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 BeUpdateTool::idx() const {
  // @@protoc_insertion_point(field_get:BeUpdateTool.idx)
  return idx_;
}
inline void BeUpdateTool::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateTool.idx)
}

// required int32 tool = 2;
inline bool BeUpdateTool::has_tool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeUpdateTool::set_has_tool() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeUpdateTool::clear_has_tool() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeUpdateTool::clear_tool() {
  tool_ = 0;
  clear_has_tool();
}
inline ::google::protobuf::int32 BeUpdateTool::tool() const {
  // @@protoc_insertion_point(field_get:BeUpdateTool.tool)
  return tool_;
}
inline void BeUpdateTool::set_tool(::google::protobuf::int32 value) {
  set_has_tool();
  tool_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateTool.tool)
}

// -------------------------------------------------------------------

// DpNormalResult

// required int32 result = 1;
inline bool DpNormalResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DpNormalResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DpNormalResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DpNormalResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DpNormalResult::result() const {
  // @@protoc_insertion_point(field_get:DpNormalResult.result)
  return result_;
}
inline void DpNormalResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DpNormalResult.result)
}

// -------------------------------------------------------------------

// GWG_FriendRequest

// optional int64 tuid = 1 [default = -1];
inline bool GWG_FriendRequest::has_tuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GWG_FriendRequest::set_has_tuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GWG_FriendRequest::clear_has_tuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GWG_FriendRequest::clear_tuid() {
  tuid_ = GOOGLE_LONGLONG(-1);
  clear_has_tuid();
}
inline ::google::protobuf::int64 GWG_FriendRequest::tuid() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.tuid)
  return tuid_;
}
inline void GWG_FriendRequest::set_tuid(::google::protobuf::int64 value) {
  set_has_tuid();
  tuid_ = value;
  // @@protoc_insertion_point(field_set:GWG_FriendRequest.tuid)
}

// optional bool ret = 2 [default = false];
inline bool GWG_FriendRequest::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GWG_FriendRequest::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GWG_FriendRequest::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GWG_FriendRequest::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool GWG_FriendRequest::ret() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.ret)
  return ret_;
}
inline void GWG_FriendRequest::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:GWG_FriendRequest.ret)
}

// optional .FriendInfoLite info = 3;
inline bool GWG_FriendRequest::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GWG_FriendRequest::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GWG_FriendRequest::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GWG_FriendRequest::clear_info() {
  if (info_ != NULL) info_->::FriendInfoLite::Clear();
  clear_has_info();
}
inline const ::FriendInfoLite& GWG_FriendRequest::info() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::FriendInfoLite* GWG_FriendRequest::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::FriendInfoLite;
  }
  // @@protoc_insertion_point(field_mutable:GWG_FriendRequest.info)
  return info_;
}
inline ::FriendInfoLite* GWG_FriendRequest::release_info() {
  clear_has_info();
  ::FriendInfoLite* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GWG_FriendRequest::set_allocated_info(::FriendInfoLite* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:GWG_FriendRequest.info)
}

// optional int32 plat_type = 4 [default = 0];
inline bool GWG_FriendRequest::has_plat_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GWG_FriendRequest::set_has_plat_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GWG_FriendRequest::clear_has_plat_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GWG_FriendRequest::clear_plat_type() {
  plat_type_ = 0;
  clear_has_plat_type();
}
inline ::google::protobuf::int32 GWG_FriendRequest::plat_type() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.plat_type)
  return plat_type_;
}
inline void GWG_FriendRequest::set_plat_type(::google::protobuf::int32 value) {
  set_has_plat_type();
  plat_type_ = value;
  // @@protoc_insertion_point(field_set:GWG_FriendRequest.plat_type)
}

// optional string platid = 5 [default = ""];
inline bool GWG_FriendRequest::has_platid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GWG_FriendRequest::set_has_platid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GWG_FriendRequest::clear_has_platid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GWG_FriendRequest::clear_platid() {
  platid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platid();
}
inline const ::std::string& GWG_FriendRequest::platid() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.platid)
  return platid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GWG_FriendRequest::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GWG_FriendRequest.platid)
}
inline void GWG_FriendRequest::set_platid(const char* value) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GWG_FriendRequest.platid)
}
inline void GWG_FriendRequest::set_platid(const char* value, size_t size) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GWG_FriendRequest.platid)
}
inline ::std::string* GWG_FriendRequest::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:GWG_FriendRequest.platid)
  return platid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GWG_FriendRequest::release_platid() {
  clear_has_platid();
  return platid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GWG_FriendRequest::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platid);
  // @@protoc_insertion_point(field_set_allocated:GWG_FriendRequest.platid)
}

// optional bool is_plat_friend = 6 [default = true];
inline bool GWG_FriendRequest::has_is_plat_friend() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GWG_FriendRequest::set_has_is_plat_friend() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GWG_FriendRequest::clear_has_is_plat_friend() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GWG_FriendRequest::clear_is_plat_friend() {
  is_plat_friend_ = true;
  clear_has_is_plat_friend();
}
inline bool GWG_FriendRequest::is_plat_friend() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.is_plat_friend)
  return is_plat_friend_;
}
inline void GWG_FriendRequest::set_is_plat_friend(bool value) {
  set_has_is_plat_friend();
  is_plat_friend_ = value;
  // @@protoc_insertion_point(field_set:GWG_FriendRequest.is_plat_friend)
}

// optional string action_id = 7 [default = ""];
inline bool GWG_FriendRequest::has_action_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GWG_FriendRequest::set_has_action_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GWG_FriendRequest::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GWG_FriendRequest::clear_action_id() {
  action_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action_id();
}
inline const ::std::string& GWG_FriendRequest::action_id() const {
  // @@protoc_insertion_point(field_get:GWG_FriendRequest.action_id)
  return action_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GWG_FriendRequest::set_action_id(const ::std::string& value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GWG_FriendRequest.action_id)
}
inline void GWG_FriendRequest::set_action_id(const char* value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GWG_FriendRequest.action_id)
}
inline void GWG_FriendRequest::set_action_id(const char* value, size_t size) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GWG_FriendRequest.action_id)
}
inline ::std::string* GWG_FriendRequest::mutable_action_id() {
  set_has_action_id();
  // @@protoc_insertion_point(field_mutable:GWG_FriendRequest.action_id)
  return action_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GWG_FriendRequest::release_action_id() {
  clear_has_action_id();
  return action_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GWG_FriendRequest::set_allocated_action_id(::std::string* action_id) {
  if (action_id != NULL) {
    set_has_action_id();
  } else {
    clear_has_action_id();
  }
  action_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_id);
  // @@protoc_insertion_point(field_set_allocated:GWG_FriendRequest.action_id)
}

// -------------------------------------------------------------------

// ForwardInfo

// optional int64 uid = 1 [default = -1];
inline bool ForwardInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardInfo::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
inline ::google::protobuf::int64 ForwardInfo::uid() const {
  // @@protoc_insertion_point(field_get:ForwardInfo.uid)
  return uid_;
}
inline void ForwardInfo::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ForwardInfo.uid)
}

// optional string platid = 2 [default = "0"];
inline bool ForwardInfo::has_platid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardInfo::set_has_platid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardInfo::clear_has_platid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardInfo::clear_platid() {
  platid_.ClearToDefaultNoArena(_default_platid_);
  clear_has_platid();
}
inline const ::std::string& ForwardInfo::platid() const {
  // @@protoc_insertion_point(field_get:ForwardInfo.platid)
  return platid_.GetNoArena(_default_platid_);
}
inline void ForwardInfo::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.SetNoArena(_default_platid_, value);
  // @@protoc_insertion_point(field_set:ForwardInfo.platid)
}
inline void ForwardInfo::set_platid(const char* value) {
  set_has_platid();
  platid_.SetNoArena(_default_platid_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForwardInfo.platid)
}
inline void ForwardInfo::set_platid(const char* value, size_t size) {
  set_has_platid();
  platid_.SetNoArena(_default_platid_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForwardInfo.platid)
}
inline ::std::string* ForwardInfo::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:ForwardInfo.platid)
  return platid_.MutableNoArena(_default_platid_);
}
inline ::std::string* ForwardInfo::release_platid() {
  clear_has_platid();
  return platid_.ReleaseNoArena(_default_platid_);
}
inline void ForwardInfo::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocatedNoArena(_default_platid_, platid);
  // @@protoc_insertion_point(field_set_allocated:ForwardInfo.platid)
}

// optional int32 ActionSenderPlatType = 3 [default = 0];
inline bool ForwardInfo::has_actionsenderplattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardInfo::set_has_actionsenderplattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardInfo::clear_has_actionsenderplattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardInfo::clear_actionsenderplattype() {
  actionsenderplattype_ = 0;
  clear_has_actionsenderplattype();
}
inline ::google::protobuf::int32 ForwardInfo::actionsenderplattype() const {
  // @@protoc_insertion_point(field_get:ForwardInfo.ActionSenderPlatType)
  return actionsenderplattype_;
}
inline void ForwardInfo::set_actionsenderplattype(::google::protobuf::int32 value) {
  set_has_actionsenderplattype();
  actionsenderplattype_ = value;
  // @@protoc_insertion_point(field_set:ForwardInfo.ActionSenderPlatType)
}

// optional string sendername = 4 [default = ""];
inline bool ForwardInfo::has_sendername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardInfo::set_has_sendername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardInfo::clear_has_sendername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardInfo::clear_sendername() {
  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendername();
}
inline const ::std::string& ForwardInfo::sendername() const {
  // @@protoc_insertion_point(field_get:ForwardInfo.sendername)
  return sendername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardInfo::set_sendername(const ::std::string& value) {
  set_has_sendername();
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ForwardInfo.sendername)
}
inline void ForwardInfo::set_sendername(const char* value) {
  set_has_sendername();
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForwardInfo.sendername)
}
inline void ForwardInfo::set_sendername(const char* value, size_t size) {
  set_has_sendername();
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForwardInfo.sendername)
}
inline ::std::string* ForwardInfo::mutable_sendername() {
  set_has_sendername();
  // @@protoc_insertion_point(field_mutable:ForwardInfo.sendername)
  return sendername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardInfo::release_sendername() {
  clear_has_sendername();
  return sendername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardInfo::set_allocated_sendername(::std::string* sendername) {
  if (sendername != NULL) {
    set_has_sendername();
  } else {
    clear_has_sendername();
  }
  sendername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendername);
  // @@protoc_insertion_point(field_set_allocated:ForwardInfo.sendername)
}

// optional string senderurl = 5 [default = ""];
inline bool ForwardInfo::has_senderurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForwardInfo::set_has_senderurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForwardInfo::clear_has_senderurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForwardInfo::clear_senderurl() {
  senderurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderurl();
}
inline const ::std::string& ForwardInfo::senderurl() const {
  // @@protoc_insertion_point(field_get:ForwardInfo.senderurl)
  return senderurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardInfo::set_senderurl(const ::std::string& value) {
  set_has_senderurl();
  senderurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ForwardInfo.senderurl)
}
inline void ForwardInfo::set_senderurl(const char* value) {
  set_has_senderurl();
  senderurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForwardInfo.senderurl)
}
inline void ForwardInfo::set_senderurl(const char* value, size_t size) {
  set_has_senderurl();
  senderurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForwardInfo.senderurl)
}
inline ::std::string* ForwardInfo::mutable_senderurl() {
  set_has_senderurl();
  // @@protoc_insertion_point(field_mutable:ForwardInfo.senderurl)
  return senderurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardInfo::release_senderurl() {
  clear_has_senderurl();
  return senderurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardInfo::set_allocated_senderurl(::std::string* senderurl) {
  if (senderurl != NULL) {
    set_has_senderurl();
  } else {
    clear_has_senderurl();
  }
  senderurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senderurl);
  // @@protoc_insertion_point(field_set_allocated:ForwardInfo.senderurl)
}

// -------------------------------------------------------------------

// WebFreeGift

// optional int64 uid_from = 1;
inline bool WebFreeGift::has_uid_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebFreeGift::set_has_uid_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebFreeGift::clear_has_uid_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebFreeGift::clear_uid_from() {
  uid_from_ = GOOGLE_LONGLONG(0);
  clear_has_uid_from();
}
inline ::google::protobuf::int64 WebFreeGift::uid_from() const {
  // @@protoc_insertion_point(field_get:WebFreeGift.uid_from)
  return uid_from_;
}
inline void WebFreeGift::set_uid_from(::google::protobuf::int64 value) {
  set_has_uid_from();
  uid_from_ = value;
  // @@protoc_insertion_point(field_set:WebFreeGift.uid_from)
}

// repeated string openid = 2;
inline int WebFreeGift::openid_size() const {
  return openid_.size();
}
inline void WebFreeGift::clear_openid() {
  openid_.Clear();
}
inline const ::std::string& WebFreeGift::openid(int index) const {
  // @@protoc_insertion_point(field_get:WebFreeGift.openid)
  return openid_.Get(index);
}
inline ::std::string* WebFreeGift::mutable_openid(int index) {
  // @@protoc_insertion_point(field_mutable:WebFreeGift.openid)
  return openid_.Mutable(index);
}
inline void WebFreeGift::set_openid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:WebFreeGift.openid)
  openid_.Mutable(index)->assign(value);
}
inline void WebFreeGift::set_openid(int index, const char* value) {
  openid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:WebFreeGift.openid)
}
inline void WebFreeGift::set_openid(int index, const char* value, size_t size) {
  openid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WebFreeGift.openid)
}
inline ::std::string* WebFreeGift::add_openid() {
  return openid_.Add();
}
inline void WebFreeGift::add_openid(const ::std::string& value) {
  openid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:WebFreeGift.openid)
}
inline void WebFreeGift::add_openid(const char* value) {
  openid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:WebFreeGift.openid)
}
inline void WebFreeGift::add_openid(const char* value, size_t size) {
  openid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:WebFreeGift.openid)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WebFreeGift::openid() const {
  // @@protoc_insertion_point(field_list:WebFreeGift.openid)
  return openid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WebFreeGift::mutable_openid() {
  // @@protoc_insertion_point(field_mutable_list:WebFreeGift.openid)
  return &openid_;
}

// repeated int32 item_type_id = 3;
inline int WebFreeGift::item_type_id_size() const {
  return item_type_id_.size();
}
inline void WebFreeGift::clear_item_type_id() {
  item_type_id_.Clear();
}
inline ::google::protobuf::int32 WebFreeGift::item_type_id(int index) const {
  // @@protoc_insertion_point(field_get:WebFreeGift.item_type_id)
  return item_type_id_.Get(index);
}
inline void WebFreeGift::set_item_type_id(int index, ::google::protobuf::int32 value) {
  item_type_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:WebFreeGift.item_type_id)
}
inline void WebFreeGift::add_item_type_id(::google::protobuf::int32 value) {
  item_type_id_.Add(value);
  // @@protoc_insertion_point(field_add:WebFreeGift.item_type_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WebFreeGift::item_type_id() const {
  // @@protoc_insertion_point(field_list:WebFreeGift.item_type_id)
  return item_type_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WebFreeGift::mutable_item_type_id() {
  // @@protoc_insertion_point(field_mutable_list:WebFreeGift.item_type_id)
  return &item_type_id_;
}

// repeated int32 item_num = 4;
inline int WebFreeGift::item_num_size() const {
  return item_num_.size();
}
inline void WebFreeGift::clear_item_num() {
  item_num_.Clear();
}
inline ::google::protobuf::int32 WebFreeGift::item_num(int index) const {
  // @@protoc_insertion_point(field_get:WebFreeGift.item_num)
  return item_num_.Get(index);
}
inline void WebFreeGift::set_item_num(int index, ::google::protobuf::int32 value) {
  item_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:WebFreeGift.item_num)
}
inline void WebFreeGift::add_item_num(::google::protobuf::int32 value) {
  item_num_.Add(value);
  // @@protoc_insertion_point(field_add:WebFreeGift.item_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WebFreeGift::item_num() const {
  // @@protoc_insertion_point(field_list:WebFreeGift.item_num)
  return item_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WebFreeGift::mutable_item_num() {
  // @@protoc_insertion_point(field_mutable_list:WebFreeGift.item_num)
  return &item_num_;
}

// optional int32 ask_type = 5;
inline bool WebFreeGift::has_ask_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebFreeGift::set_has_ask_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebFreeGift::clear_has_ask_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebFreeGift::clear_ask_type() {
  ask_type_ = 0;
  clear_has_ask_type();
}
inline ::google::protobuf::int32 WebFreeGift::ask_type() const {
  // @@protoc_insertion_point(field_get:WebFreeGift.ask_type)
  return ask_type_;
}
inline void WebFreeGift::set_ask_type(::google::protobuf::int32 value) {
  set_has_ask_type();
  ask_type_ = value;
  // @@protoc_insertion_point(field_set:WebFreeGift.ask_type)
}

// optional int32 active = 6;
inline bool WebFreeGift::has_active() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebFreeGift::set_has_active() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebFreeGift::clear_has_active() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebFreeGift::clear_active() {
  active_ = 0;
  clear_has_active();
}
inline ::google::protobuf::int32 WebFreeGift::active() const {
  // @@protoc_insertion_point(field_get:WebFreeGift.active)
  return active_;
}
inline void WebFreeGift::set_active(::google::protobuf::int32 value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:WebFreeGift.active)
}

// optional int32 web_fd = 7;
inline bool WebFreeGift::has_web_fd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebFreeGift::set_has_web_fd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebFreeGift::clear_has_web_fd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebFreeGift::clear_web_fd() {
  web_fd_ = 0;
  clear_has_web_fd();
}
inline ::google::protobuf::int32 WebFreeGift::web_fd() const {
  // @@protoc_insertion_point(field_get:WebFreeGift.web_fd)
  return web_fd_;
}
inline void WebFreeGift::set_web_fd(::google::protobuf::int32 value) {
  set_has_web_fd();
  web_fd_ = value;
  // @@protoc_insertion_point(field_set:WebFreeGift.web_fd)
}

// optional string openid_forward = 8;
inline bool WebFreeGift::has_openid_forward() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebFreeGift::set_has_openid_forward() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebFreeGift::clear_has_openid_forward() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebFreeGift::clear_openid_forward() {
  openid_forward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid_forward();
}
inline const ::std::string& WebFreeGift::openid_forward() const {
  // @@protoc_insertion_point(field_get:WebFreeGift.openid_forward)
  return openid_forward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebFreeGift::set_openid_forward(const ::std::string& value) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebFreeGift.openid_forward)
}
inline void WebFreeGift::set_openid_forward(const char* value) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebFreeGift.openid_forward)
}
inline void WebFreeGift::set_openid_forward(const char* value, size_t size) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebFreeGift.openid_forward)
}
inline ::std::string* WebFreeGift::mutable_openid_forward() {
  set_has_openid_forward();
  // @@protoc_insertion_point(field_mutable:WebFreeGift.openid_forward)
  return openid_forward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebFreeGift::release_openid_forward() {
  clear_has_openid_forward();
  return openid_forward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebFreeGift::set_allocated_openid_forward(::std::string* openid_forward) {
  if (openid_forward != NULL) {
    set_has_openid_forward();
  } else {
    clear_has_openid_forward();
  }
  openid_forward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid_forward);
  // @@protoc_insertion_point(field_set_allocated:WebFreeGift.openid_forward)
}

// optional string openid_from = 9;
inline bool WebFreeGift::has_openid_from() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebFreeGift::set_has_openid_from() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebFreeGift::clear_has_openid_from() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebFreeGift::clear_openid_from() {
  openid_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid_from();
}
inline const ::std::string& WebFreeGift::openid_from() const {
  // @@protoc_insertion_point(field_get:WebFreeGift.openid_from)
  return openid_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebFreeGift::set_openid_from(const ::std::string& value) {
  set_has_openid_from();
  openid_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebFreeGift.openid_from)
}
inline void WebFreeGift::set_openid_from(const char* value) {
  set_has_openid_from();
  openid_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebFreeGift.openid_from)
}
inline void WebFreeGift::set_openid_from(const char* value, size_t size) {
  set_has_openid_from();
  openid_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebFreeGift.openid_from)
}
inline ::std::string* WebFreeGift::mutable_openid_from() {
  set_has_openid_from();
  // @@protoc_insertion_point(field_mutable:WebFreeGift.openid_from)
  return openid_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebFreeGift::release_openid_from() {
  clear_has_openid_from();
  return openid_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebFreeGift::set_allocated_openid_from(::std::string* openid_from) {
  if (openid_from != NULL) {
    set_has_openid_from();
  } else {
    clear_has_openid_from();
  }
  openid_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid_from);
  // @@protoc_insertion_point(field_set_allocated:WebFreeGift.openid_from)
}

// -------------------------------------------------------------------

// WebAskFor

// optional int64 uid_from = 1;
inline bool WebAskFor::has_uid_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebAskFor::set_has_uid_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebAskFor::clear_has_uid_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebAskFor::clear_uid_from() {
  uid_from_ = GOOGLE_LONGLONG(0);
  clear_has_uid_from();
}
inline ::google::protobuf::int64 WebAskFor::uid_from() const {
  // @@protoc_insertion_point(field_get:WebAskFor.uid_from)
  return uid_from_;
}
inline void WebAskFor::set_uid_from(::google::protobuf::int64 value) {
  set_has_uid_from();
  uid_from_ = value;
  // @@protoc_insertion_point(field_set:WebAskFor.uid_from)
}

// repeated string openid_to = 2;
inline int WebAskFor::openid_to_size() const {
  return openid_to_.size();
}
inline void WebAskFor::clear_openid_to() {
  openid_to_.Clear();
}
inline const ::std::string& WebAskFor::openid_to(int index) const {
  // @@protoc_insertion_point(field_get:WebAskFor.openid_to)
  return openid_to_.Get(index);
}
inline ::std::string* WebAskFor::mutable_openid_to(int index) {
  // @@protoc_insertion_point(field_mutable:WebAskFor.openid_to)
  return openid_to_.Mutable(index);
}
inline void WebAskFor::set_openid_to(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:WebAskFor.openid_to)
  openid_to_.Mutable(index)->assign(value);
}
inline void WebAskFor::set_openid_to(int index, const char* value) {
  openid_to_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:WebAskFor.openid_to)
}
inline void WebAskFor::set_openid_to(int index, const char* value, size_t size) {
  openid_to_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WebAskFor.openid_to)
}
inline ::std::string* WebAskFor::add_openid_to() {
  return openid_to_.Add();
}
inline void WebAskFor::add_openid_to(const ::std::string& value) {
  openid_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:WebAskFor.openid_to)
}
inline void WebAskFor::add_openid_to(const char* value) {
  openid_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:WebAskFor.openid_to)
}
inline void WebAskFor::add_openid_to(const char* value, size_t size) {
  openid_to_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:WebAskFor.openid_to)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WebAskFor::openid_to() const {
  // @@protoc_insertion_point(field_list:WebAskFor.openid_to)
  return openid_to_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WebAskFor::mutable_openid_to() {
  // @@protoc_insertion_point(field_mutable_list:WebAskFor.openid_to)
  return &openid_to_;
}

// repeated int32 item_type_id = 3;
inline int WebAskFor::item_type_id_size() const {
  return item_type_id_.size();
}
inline void WebAskFor::clear_item_type_id() {
  item_type_id_.Clear();
}
inline ::google::protobuf::int32 WebAskFor::item_type_id(int index) const {
  // @@protoc_insertion_point(field_get:WebAskFor.item_type_id)
  return item_type_id_.Get(index);
}
inline void WebAskFor::set_item_type_id(int index, ::google::protobuf::int32 value) {
  item_type_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:WebAskFor.item_type_id)
}
inline void WebAskFor::add_item_type_id(::google::protobuf::int32 value) {
  item_type_id_.Add(value);
  // @@protoc_insertion_point(field_add:WebAskFor.item_type_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WebAskFor::item_type_id() const {
  // @@protoc_insertion_point(field_list:WebAskFor.item_type_id)
  return item_type_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WebAskFor::mutable_item_type_id() {
  // @@protoc_insertion_point(field_mutable_list:WebAskFor.item_type_id)
  return &item_type_id_;
}

// repeated int32 item_num = 4;
inline int WebAskFor::item_num_size() const {
  return item_num_.size();
}
inline void WebAskFor::clear_item_num() {
  item_num_.Clear();
}
inline ::google::protobuf::int32 WebAskFor::item_num(int index) const {
  // @@protoc_insertion_point(field_get:WebAskFor.item_num)
  return item_num_.Get(index);
}
inline void WebAskFor::set_item_num(int index, ::google::protobuf::int32 value) {
  item_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:WebAskFor.item_num)
}
inline void WebAskFor::add_item_num(::google::protobuf::int32 value) {
  item_num_.Add(value);
  // @@protoc_insertion_point(field_add:WebAskFor.item_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WebAskFor::item_num() const {
  // @@protoc_insertion_point(field_list:WebAskFor.item_num)
  return item_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WebAskFor::mutable_item_num() {
  // @@protoc_insertion_point(field_mutable_list:WebAskFor.item_num)
  return &item_num_;
}

// optional int32 succ = 5;
inline bool WebAskFor::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebAskFor::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebAskFor::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebAskFor::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 WebAskFor::succ() const {
  // @@protoc_insertion_point(field_get:WebAskFor.succ)
  return succ_;
}
inline void WebAskFor::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebAskFor.succ)
}

// required int32 fd = 6;
inline bool WebAskFor::has_fd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebAskFor::set_has_fd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebAskFor::clear_has_fd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebAskFor::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebAskFor::fd() const {
  // @@protoc_insertion_point(field_get:WebAskFor.fd)
  return fd_;
}
inline void WebAskFor::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebAskFor.fd)
}

// optional string openid_forward = 7;
inline bool WebAskFor::has_openid_forward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebAskFor::set_has_openid_forward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebAskFor::clear_has_openid_forward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebAskFor::clear_openid_forward() {
  openid_forward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid_forward();
}
inline const ::std::string& WebAskFor::openid_forward() const {
  // @@protoc_insertion_point(field_get:WebAskFor.openid_forward)
  return openid_forward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAskFor::set_openid_forward(const ::std::string& value) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebAskFor.openid_forward)
}
inline void WebAskFor::set_openid_forward(const char* value) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebAskFor.openid_forward)
}
inline void WebAskFor::set_openid_forward(const char* value, size_t size) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebAskFor.openid_forward)
}
inline ::std::string* WebAskFor::mutable_openid_forward() {
  set_has_openid_forward();
  // @@protoc_insertion_point(field_mutable:WebAskFor.openid_forward)
  return openid_forward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebAskFor::release_openid_forward() {
  clear_has_openid_forward();
  return openid_forward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAskFor::set_allocated_openid_forward(::std::string* openid_forward) {
  if (openid_forward != NULL) {
    set_has_openid_forward();
  } else {
    clear_has_openid_forward();
  }
  openid_forward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid_forward);
  // @@protoc_insertion_point(field_set_allocated:WebAskFor.openid_forward)
}

// -------------------------------------------------------------------

// WebGiveFor

// optional int64 uid_from = 1;
inline bool WebGiveFor::has_uid_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebGiveFor::set_has_uid_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebGiveFor::clear_has_uid_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebGiveFor::clear_uid_from() {
  uid_from_ = GOOGLE_LONGLONG(0);
  clear_has_uid_from();
}
inline ::google::protobuf::int64 WebGiveFor::uid_from() const {
  // @@protoc_insertion_point(field_get:WebGiveFor.uid_from)
  return uid_from_;
}
inline void WebGiveFor::set_uid_from(::google::protobuf::int64 value) {
  set_has_uid_from();
  uid_from_ = value;
  // @@protoc_insertion_point(field_set:WebGiveFor.uid_from)
}

// repeated string openid_to = 2;
inline int WebGiveFor::openid_to_size() const {
  return openid_to_.size();
}
inline void WebGiveFor::clear_openid_to() {
  openid_to_.Clear();
}
inline const ::std::string& WebGiveFor::openid_to(int index) const {
  // @@protoc_insertion_point(field_get:WebGiveFor.openid_to)
  return openid_to_.Get(index);
}
inline ::std::string* WebGiveFor::mutable_openid_to(int index) {
  // @@protoc_insertion_point(field_mutable:WebGiveFor.openid_to)
  return openid_to_.Mutable(index);
}
inline void WebGiveFor::set_openid_to(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:WebGiveFor.openid_to)
  openid_to_.Mutable(index)->assign(value);
}
inline void WebGiveFor::set_openid_to(int index, const char* value) {
  openid_to_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:WebGiveFor.openid_to)
}
inline void WebGiveFor::set_openid_to(int index, const char* value, size_t size) {
  openid_to_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WebGiveFor.openid_to)
}
inline ::std::string* WebGiveFor::add_openid_to() {
  return openid_to_.Add();
}
inline void WebGiveFor::add_openid_to(const ::std::string& value) {
  openid_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:WebGiveFor.openid_to)
}
inline void WebGiveFor::add_openid_to(const char* value) {
  openid_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:WebGiveFor.openid_to)
}
inline void WebGiveFor::add_openid_to(const char* value, size_t size) {
  openid_to_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:WebGiveFor.openid_to)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WebGiveFor::openid_to() const {
  // @@protoc_insertion_point(field_list:WebGiveFor.openid_to)
  return openid_to_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WebGiveFor::mutable_openid_to() {
  // @@protoc_insertion_point(field_mutable_list:WebGiveFor.openid_to)
  return &openid_to_;
}

// repeated int32 item_type_id = 3;
inline int WebGiveFor::item_type_id_size() const {
  return item_type_id_.size();
}
inline void WebGiveFor::clear_item_type_id() {
  item_type_id_.Clear();
}
inline ::google::protobuf::int32 WebGiveFor::item_type_id(int index) const {
  // @@protoc_insertion_point(field_get:WebGiveFor.item_type_id)
  return item_type_id_.Get(index);
}
inline void WebGiveFor::set_item_type_id(int index, ::google::protobuf::int32 value) {
  item_type_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:WebGiveFor.item_type_id)
}
inline void WebGiveFor::add_item_type_id(::google::protobuf::int32 value) {
  item_type_id_.Add(value);
  // @@protoc_insertion_point(field_add:WebGiveFor.item_type_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WebGiveFor::item_type_id() const {
  // @@protoc_insertion_point(field_list:WebGiveFor.item_type_id)
  return item_type_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WebGiveFor::mutable_item_type_id() {
  // @@protoc_insertion_point(field_mutable_list:WebGiveFor.item_type_id)
  return &item_type_id_;
}

// repeated int32 item_num = 4;
inline int WebGiveFor::item_num_size() const {
  return item_num_.size();
}
inline void WebGiveFor::clear_item_num() {
  item_num_.Clear();
}
inline ::google::protobuf::int32 WebGiveFor::item_num(int index) const {
  // @@protoc_insertion_point(field_get:WebGiveFor.item_num)
  return item_num_.Get(index);
}
inline void WebGiveFor::set_item_num(int index, ::google::protobuf::int32 value) {
  item_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:WebGiveFor.item_num)
}
inline void WebGiveFor::add_item_num(::google::protobuf::int32 value) {
  item_num_.Add(value);
  // @@protoc_insertion_point(field_add:WebGiveFor.item_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WebGiveFor::item_num() const {
  // @@protoc_insertion_point(field_list:WebGiveFor.item_num)
  return item_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WebGiveFor::mutable_item_num() {
  // @@protoc_insertion_point(field_mutable_list:WebGiveFor.item_num)
  return &item_num_;
}

// optional int32 succ = 5;
inline bool WebGiveFor::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebGiveFor::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebGiveFor::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebGiveFor::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 WebGiveFor::succ() const {
  // @@protoc_insertion_point(field_get:WebGiveFor.succ)
  return succ_;
}
inline void WebGiveFor::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebGiveFor.succ)
}

// required int32 fd = 6;
inline bool WebGiveFor::has_fd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebGiveFor::set_has_fd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebGiveFor::clear_has_fd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebGiveFor::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebGiveFor::fd() const {
  // @@protoc_insertion_point(field_get:WebGiveFor.fd)
  return fd_;
}
inline void WebGiveFor::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebGiveFor.fd)
}

// optional string openid_forward = 7;
inline bool WebGiveFor::has_openid_forward() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebGiveFor::set_has_openid_forward() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebGiveFor::clear_has_openid_forward() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebGiveFor::clear_openid_forward() {
  openid_forward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid_forward();
}
inline const ::std::string& WebGiveFor::openid_forward() const {
  // @@protoc_insertion_point(field_get:WebGiveFor.openid_forward)
  return openid_forward_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebGiveFor::set_openid_forward(const ::std::string& value) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebGiveFor.openid_forward)
}
inline void WebGiveFor::set_openid_forward(const char* value) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebGiveFor.openid_forward)
}
inline void WebGiveFor::set_openid_forward(const char* value, size_t size) {
  set_has_openid_forward();
  openid_forward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebGiveFor.openid_forward)
}
inline ::std::string* WebGiveFor::mutable_openid_forward() {
  set_has_openid_forward();
  // @@protoc_insertion_point(field_mutable:WebGiveFor.openid_forward)
  return openid_forward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebGiveFor::release_openid_forward() {
  clear_has_openid_forward();
  return openid_forward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebGiveFor::set_allocated_openid_forward(::std::string* openid_forward) {
  if (openid_forward != NULL) {
    set_has_openid_forward();
  } else {
    clear_has_openid_forward();
  }
  openid_forward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid_forward);
  // @@protoc_insertion_point(field_set_allocated:WebGiveFor.openid_forward)
}

// -------------------------------------------------------------------

// WebInvite

// required string platid = 1;
inline bool WebInvite::has_platid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebInvite::set_has_platid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebInvite::clear_has_platid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebInvite::clear_platid() {
  platid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platid();
}
inline const ::std::string& WebInvite::platid() const {
  // @@protoc_insertion_point(field_get:WebInvite.platid)
  return platid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebInvite::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebInvite.platid)
}
inline void WebInvite::set_platid(const char* value) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebInvite.platid)
}
inline void WebInvite::set_platid(const char* value, size_t size) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebInvite.platid)
}
inline ::std::string* WebInvite::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:WebInvite.platid)
  return platid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebInvite::release_platid() {
  clear_has_platid();
  return platid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebInvite::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platid);
  // @@protoc_insertion_point(field_set_allocated:WebInvite.platid)
}

// required string inviterid = 2;
inline bool WebInvite::has_inviterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebInvite::set_has_inviterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebInvite::clear_has_inviterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebInvite::clear_inviterid() {
  inviterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inviterid();
}
inline const ::std::string& WebInvite::inviterid() const {
  // @@protoc_insertion_point(field_get:WebInvite.inviterid)
  return inviterid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebInvite::set_inviterid(const ::std::string& value) {
  set_has_inviterid();
  inviterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebInvite.inviterid)
}
inline void WebInvite::set_inviterid(const char* value) {
  set_has_inviterid();
  inviterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebInvite.inviterid)
}
inline void WebInvite::set_inviterid(const char* value, size_t size) {
  set_has_inviterid();
  inviterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebInvite.inviterid)
}
inline ::std::string* WebInvite::mutable_inviterid() {
  set_has_inviterid();
  // @@protoc_insertion_point(field_mutable:WebInvite.inviterid)
  return inviterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebInvite::release_inviterid() {
  clear_has_inviterid();
  return inviterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebInvite::set_allocated_inviterid(::std::string* inviterid) {
  if (inviterid != NULL) {
    set_has_inviterid();
  } else {
    clear_has_inviterid();
  }
  inviterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviterid);
  // @@protoc_insertion_point(field_set_allocated:WebInvite.inviterid)
}

// required int32 fd = 3;
inline bool WebInvite::has_fd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebInvite::set_has_fd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebInvite::clear_has_fd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebInvite::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebInvite::fd() const {
  // @@protoc_insertion_point(field_get:WebInvite.fd)
  return fd_;
}
inline void WebInvite::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebInvite.fd)
}

// -------------------------------------------------------------------

// Invite

// required string platid = 1;
inline bool Invite::has_platid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Invite::set_has_platid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Invite::clear_has_platid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Invite::clear_platid() {
  platid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platid();
}
inline const ::std::string& Invite::platid() const {
  // @@protoc_insertion_point(field_get:Invite.platid)
  return platid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Invite::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Invite.platid)
}
inline void Invite::set_platid(const char* value) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Invite.platid)
}
inline void Invite::set_platid(const char* value, size_t size) {
  set_has_platid();
  platid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Invite.platid)
}
inline ::std::string* Invite::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:Invite.platid)
  return platid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Invite::release_platid() {
  clear_has_platid();
  return platid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Invite::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platid);
  // @@protoc_insertion_point(field_set_allocated:Invite.platid)
}

// required string inviterid = 2;
inline bool Invite::has_inviterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Invite::set_has_inviterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Invite::clear_has_inviterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Invite::clear_inviterid() {
  inviterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inviterid();
}
inline const ::std::string& Invite::inviterid() const {
  // @@protoc_insertion_point(field_get:Invite.inviterid)
  return inviterid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Invite::set_inviterid(const ::std::string& value) {
  set_has_inviterid();
  inviterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Invite.inviterid)
}
inline void Invite::set_inviterid(const char* value) {
  set_has_inviterid();
  inviterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Invite.inviterid)
}
inline void Invite::set_inviterid(const char* value, size_t size) {
  set_has_inviterid();
  inviterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Invite.inviterid)
}
inline ::std::string* Invite::mutable_inviterid() {
  set_has_inviterid();
  // @@protoc_insertion_point(field_mutable:Invite.inviterid)
  return inviterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Invite::release_inviterid() {
  clear_has_inviterid();
  return inviterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Invite::set_allocated_inviterid(::std::string* inviterid) {
  if (inviterid != NULL) {
    set_has_inviterid();
  } else {
    clear_has_inviterid();
  }
  inviterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviterid);
  // @@protoc_insertion_point(field_set_allocated:Invite.inviterid)
}

// -------------------------------------------------------------------

// FriendRecallMsg

// required int64 uidMe = 1;
inline bool FriendRecallMsg::has_uidme() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendRecallMsg::set_has_uidme() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendRecallMsg::clear_has_uidme() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendRecallMsg::clear_uidme() {
  uidme_ = GOOGLE_LONGLONG(0);
  clear_has_uidme();
}
inline ::google::protobuf::int64 FriendRecallMsg::uidme() const {
  // @@protoc_insertion_point(field_get:FriendRecallMsg.uidMe)
  return uidme_;
}
inline void FriendRecallMsg::set_uidme(::google::protobuf::int64 value) {
  set_has_uidme();
  uidme_ = value;
  // @@protoc_insertion_point(field_set:FriendRecallMsg.uidMe)
}

// required int64 uidOther = 2;
inline bool FriendRecallMsg::has_uidother() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendRecallMsg::set_has_uidother() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendRecallMsg::clear_has_uidother() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendRecallMsg::clear_uidother() {
  uidother_ = GOOGLE_LONGLONG(0);
  clear_has_uidother();
}
inline ::google::protobuf::int64 FriendRecallMsg::uidother() const {
  // @@protoc_insertion_point(field_get:FriendRecallMsg.uidOther)
  return uidother_;
}
inline void FriendRecallMsg::set_uidother(::google::protobuf::int64 value) {
  set_has_uidother();
  uidother_ = value;
  // @@protoc_insertion_point(field_set:FriendRecallMsg.uidOther)
}

// required int32 level = 3;
inline bool FriendRecallMsg::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendRecallMsg::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendRecallMsg::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendRecallMsg::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FriendRecallMsg::level() const {
  // @@protoc_insertion_point(field_get:FriendRecallMsg.level)
  return level_;
}
inline void FriendRecallMsg::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FriendRecallMsg.level)
}

// required string name = 4;
inline bool FriendRecallMsg::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendRecallMsg::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendRecallMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendRecallMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FriendRecallMsg::name() const {
  // @@protoc_insertion_point(field_get:FriendRecallMsg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendRecallMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendRecallMsg.name)
}
inline void FriendRecallMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendRecallMsg.name)
}
inline void FriendRecallMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendRecallMsg.name)
}
inline ::std::string* FriendRecallMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:FriendRecallMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendRecallMsg::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendRecallMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:FriendRecallMsg.name)
}

// -------------------------------------------------------------------

// MultiLevelFriendPoint

// required int32 kind = 1;
inline bool MultiLevelFriendPoint::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MultiLevelFriendPoint::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MultiLevelFriendPoint::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MultiLevelFriendPoint::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 MultiLevelFriendPoint::kind() const {
  // @@protoc_insertion_point(field_get:MultiLevelFriendPoint.kind)
  return kind_;
}
inline void MultiLevelFriendPoint::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:MultiLevelFriendPoint.kind)
}

// required int32 pointAdd = 2;
inline bool MultiLevelFriendPoint::has_pointadd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MultiLevelFriendPoint::set_has_pointadd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MultiLevelFriendPoint::clear_has_pointadd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MultiLevelFriendPoint::clear_pointadd() {
  pointadd_ = 0;
  clear_has_pointadd();
}
inline ::google::protobuf::int32 MultiLevelFriendPoint::pointadd() const {
  // @@protoc_insertion_point(field_get:MultiLevelFriendPoint.pointAdd)
  return pointadd_;
}
inline void MultiLevelFriendPoint::set_pointadd(::google::protobuf::int32 value) {
  set_has_pointadd();
  pointadd_ = value;
  // @@protoc_insertion_point(field_set:MultiLevelFriendPoint.pointAdd)
}

// required int32 point = 3;
inline bool MultiLevelFriendPoint::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MultiLevelFriendPoint::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MultiLevelFriendPoint::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MultiLevelFriendPoint::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 MultiLevelFriendPoint::point() const {
  // @@protoc_insertion_point(field_get:MultiLevelFriendPoint.point)
  return point_;
}
inline void MultiLevelFriendPoint::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:MultiLevelFriendPoint.point)
}

// required string openid = 4;
inline bool MultiLevelFriendPoint::has_openid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MultiLevelFriendPoint::set_has_openid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MultiLevelFriendPoint::clear_has_openid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MultiLevelFriendPoint::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& MultiLevelFriendPoint::openid() const {
  // @@protoc_insertion_point(field_get:MultiLevelFriendPoint.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MultiLevelFriendPoint::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MultiLevelFriendPoint.openid)
}
inline void MultiLevelFriendPoint::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MultiLevelFriendPoint.openid)
}
inline void MultiLevelFriendPoint::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MultiLevelFriendPoint.openid)
}
inline ::std::string* MultiLevelFriendPoint::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:MultiLevelFriendPoint.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MultiLevelFriendPoint::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MultiLevelFriendPoint::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:MultiLevelFriendPoint.openid)
}

// required int32 level = 5;
inline bool MultiLevelFriendPoint::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MultiLevelFriendPoint::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MultiLevelFriendPoint::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MultiLevelFriendPoint::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MultiLevelFriendPoint::level() const {
  // @@protoc_insertion_point(field_get:MultiLevelFriendPoint.level)
  return level_;
}
inline void MultiLevelFriendPoint::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MultiLevelFriendPoint.level)
}

// -------------------------------------------------------------------

// TalentShow

// required string name = 1;
inline bool TalentShow::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalentShow::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalentShow::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalentShow::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TalentShow::name() const {
  // @@protoc_insertion_point(field_get:TalentShow.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TalentShow::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TalentShow.name)
}
inline void TalentShow::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TalentShow.name)
}
inline void TalentShow::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TalentShow.name)
}
inline ::std::string* TalentShow::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:TalentShow.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TalentShow::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TalentShow::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TalentShow.name)
}

// required int64 uid = 2;
inline bool TalentShow::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalentShow::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalentShow::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalentShow::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 TalentShow::uid() const {
  // @@protoc_insertion_point(field_get:TalentShow.uid)
  return uid_;
}
inline void TalentShow::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:TalentShow.uid)
}

// required int32 weight = 3;
inline bool TalentShow::has_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalentShow::set_has_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalentShow::clear_has_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalentShow::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 TalentShow::weight() const {
  // @@protoc_insertion_point(field_get:TalentShow.weight)
  return weight_;
}
inline void TalentShow::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:TalentShow.weight)
}

// -------------------------------------------------------------------

// TalentShowList

// repeated .TalentShow item = 1;
inline int TalentShowList::item_size() const {
  return item_.size();
}
inline void TalentShowList::clear_item() {
  item_.Clear();
}
inline const ::TalentShow& TalentShowList::item(int index) const {
  // @@protoc_insertion_point(field_get:TalentShowList.item)
  return item_.Get(index);
}
inline ::TalentShow* TalentShowList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:TalentShowList.item)
  return item_.Mutable(index);
}
inline ::TalentShow* TalentShowList::add_item() {
  // @@protoc_insertion_point(field_add:TalentShowList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TalentShow >&
TalentShowList::item() const {
  // @@protoc_insertion_point(field_list:TalentShowList.item)
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TalentShow >*
TalentShowList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:TalentShowList.item)
  return &item_;
}

// -------------------------------------------------------------------

// FriendSendGift

// required int32 itemId = 1;
inline bool FriendSendGift::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendSendGift::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendSendGift::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendSendGift::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 FriendSendGift::itemid() const {
  // @@protoc_insertion_point(field_get:FriendSendGift.itemId)
  return itemid_;
}
inline void FriendSendGift::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:FriendSendGift.itemId)
}

// required string name = 2;
inline bool FriendSendGift::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendSendGift::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendSendGift::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendSendGift::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FriendSendGift::name() const {
  // @@protoc_insertion_point(field_get:FriendSendGift.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendSendGift::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendSendGift.name)
}
inline void FriendSendGift::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendSendGift.name)
}
inline void FriendSendGift::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendSendGift.name)
}
inline ::std::string* FriendSendGift::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:FriendSendGift.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendSendGift::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendSendGift::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:FriendSendGift.name)
}

// required int64 uid = 3;
inline bool FriendSendGift::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendSendGift::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendSendGift::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendSendGift::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 FriendSendGift::uid() const {
  // @@protoc_insertion_point(field_get:FriendSendGift.uid)
  return uid_;
}
inline void FriendSendGift::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:FriendSendGift.uid)
}

// -------------------------------------------------------------------

// FortuneSteal

// required int32 kind = 1;
inline bool FortuneSteal::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FortuneSteal::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FortuneSteal::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FortuneSteal::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 FortuneSteal::kind() const {
  // @@protoc_insertion_point(field_get:FortuneSteal.kind)
  return kind_;
}
inline void FortuneSteal::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:FortuneSteal.kind)
}

// required string nameActive = 2;
inline bool FortuneSteal::has_nameactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FortuneSteal::set_has_nameactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FortuneSteal::clear_has_nameactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FortuneSteal::clear_nameactive() {
  nameactive_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nameactive();
}
inline const ::std::string& FortuneSteal::nameactive() const {
  // @@protoc_insertion_point(field_get:FortuneSteal.nameActive)
  return nameactive_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FortuneSteal::set_nameactive(const ::std::string& value) {
  set_has_nameactive();
  nameactive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FortuneSteal.nameActive)
}
inline void FortuneSteal::set_nameactive(const char* value) {
  set_has_nameactive();
  nameactive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FortuneSteal.nameActive)
}
inline void FortuneSteal::set_nameactive(const char* value, size_t size) {
  set_has_nameactive();
  nameactive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FortuneSteal.nameActive)
}
inline ::std::string* FortuneSteal::mutable_nameactive() {
  set_has_nameactive();
  // @@protoc_insertion_point(field_mutable:FortuneSteal.nameActive)
  return nameactive_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FortuneSteal::release_nameactive() {
  clear_has_nameactive();
  return nameactive_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FortuneSteal::set_allocated_nameactive(::std::string* nameactive) {
  if (nameactive != NULL) {
    set_has_nameactive();
  } else {
    clear_has_nameactive();
  }
  nameactive_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nameactive);
  // @@protoc_insertion_point(field_set_allocated:FortuneSteal.nameActive)
}

// required int64 uidActive = 3;
inline bool FortuneSteal::has_uidactive() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FortuneSteal::set_has_uidactive() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FortuneSteal::clear_has_uidactive() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FortuneSteal::clear_uidactive() {
  uidactive_ = GOOGLE_LONGLONG(0);
  clear_has_uidactive();
}
inline ::google::protobuf::int64 FortuneSteal::uidactive() const {
  // @@protoc_insertion_point(field_get:FortuneSteal.uidActive)
  return uidactive_;
}
inline void FortuneSteal::set_uidactive(::google::protobuf::int64 value) {
  set_has_uidactive();
  uidactive_ = value;
  // @@protoc_insertion_point(field_set:FortuneSteal.uidActive)
}

// required int64 uidPassive = 4;
inline bool FortuneSteal::has_uidpassive() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FortuneSteal::set_has_uidpassive() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FortuneSteal::clear_has_uidpassive() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FortuneSteal::clear_uidpassive() {
  uidpassive_ = GOOGLE_LONGLONG(0);
  clear_has_uidpassive();
}
inline ::google::protobuf::int64 FortuneSteal::uidpassive() const {
  // @@protoc_insertion_point(field_get:FortuneSteal.uidPassive)
  return uidpassive_;
}
inline void FortuneSteal::set_uidpassive(::google::protobuf::int64 value) {
  set_has_uidpassive();
  uidpassive_ = value;
  // @@protoc_insertion_point(field_set:FortuneSteal.uidPassive)
}

// required int32 point = 5;
inline bool FortuneSteal::has_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FortuneSteal::set_has_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FortuneSteal::clear_has_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FortuneSteal::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 FortuneSteal::point() const {
  // @@protoc_insertion_point(field_get:FortuneSteal.point)
  return point_;
}
inline void FortuneSteal::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:FortuneSteal.point)
}

// -------------------------------------------------------------------

// ChiefVote

// required int32 kind = 1;
inline bool ChiefVote::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChiefVote::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChiefVote::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChiefVote::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 ChiefVote::kind() const {
  // @@protoc_insertion_point(field_get:ChiefVote.kind)
  return kind_;
}
inline void ChiefVote::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:ChiefVote.kind)
}

// required string nameActive = 2;
inline bool ChiefVote::has_nameactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChiefVote::set_has_nameactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChiefVote::clear_has_nameactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChiefVote::clear_nameactive() {
  nameactive_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nameactive();
}
inline const ::std::string& ChiefVote::nameactive() const {
  // @@protoc_insertion_point(field_get:ChiefVote.nameActive)
  return nameactive_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChiefVote::set_nameactive(const ::std::string& value) {
  set_has_nameactive();
  nameactive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChiefVote.nameActive)
}
inline void ChiefVote::set_nameactive(const char* value) {
  set_has_nameactive();
  nameactive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChiefVote.nameActive)
}
inline void ChiefVote::set_nameactive(const char* value, size_t size) {
  set_has_nameactive();
  nameactive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChiefVote.nameActive)
}
inline ::std::string* ChiefVote::mutable_nameactive() {
  set_has_nameactive();
  // @@protoc_insertion_point(field_mutable:ChiefVote.nameActive)
  return nameactive_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChiefVote::release_nameactive() {
  clear_has_nameactive();
  return nameactive_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChiefVote::set_allocated_nameactive(::std::string* nameactive) {
  if (nameactive != NULL) {
    set_has_nameactive();
  } else {
    clear_has_nameactive();
  }
  nameactive_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nameactive);
  // @@protoc_insertion_point(field_set_allocated:ChiefVote.nameActive)
}

// required int64 uidActive = 3;
inline bool ChiefVote::has_uidactive() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChiefVote::set_has_uidactive() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChiefVote::clear_has_uidactive() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChiefVote::clear_uidactive() {
  uidactive_ = GOOGLE_LONGLONG(0);
  clear_has_uidactive();
}
inline ::google::protobuf::int64 ChiefVote::uidactive() const {
  // @@protoc_insertion_point(field_get:ChiefVote.uidActive)
  return uidactive_;
}
inline void ChiefVote::set_uidactive(::google::protobuf::int64 value) {
  set_has_uidactive();
  uidactive_ = value;
  // @@protoc_insertion_point(field_set:ChiefVote.uidActive)
}

// required int64 uidPassive = 4;
inline bool ChiefVote::has_uidpassive() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChiefVote::set_has_uidpassive() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChiefVote::clear_has_uidpassive() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChiefVote::clear_uidpassive() {
  uidpassive_ = GOOGLE_LONGLONG(0);
  clear_has_uidpassive();
}
inline ::google::protobuf::int64 ChiefVote::uidpassive() const {
  // @@protoc_insertion_point(field_get:ChiefVote.uidPassive)
  return uidpassive_;
}
inline void ChiefVote::set_uidpassive(::google::protobuf::int64 value) {
  set_has_uidpassive();
  uidpassive_ = value;
  // @@protoc_insertion_point(field_set:ChiefVote.uidPassive)
}

// required int32 num = 5;
inline bool ChiefVote::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChiefVote::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChiefVote::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChiefVote::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ChiefVote::num() const {
  // @@protoc_insertion_point(field_get:ChiefVote.num)
  return num_;
}
inline void ChiefVote::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ChiefVote.num)
}

// required bool succ = 6;
inline bool ChiefVote::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChiefVote::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChiefVote::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChiefVote::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool ChiefVote::succ() const {
  // @@protoc_insertion_point(field_get:ChiefVote.succ)
  return succ_;
}
inline void ChiefVote::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:ChiefVote.succ)
}

// -------------------------------------------------------------------

// LotteryTimer

// required int32 roomid = 1;
inline bool LotteryTimer::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LotteryTimer::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LotteryTimer::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LotteryTimer::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 LotteryTimer::roomid() const {
  // @@protoc_insertion_point(field_get:LotteryTimer.roomid)
  return roomid_;
}
inline void LotteryTimer::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:LotteryTimer.roomid)
}

// -------------------------------------------------------------------

// BeUpdateBattleCnt

// required int32 battleCnt = 1;
inline bool BeUpdateBattleCnt::has_battlecnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeUpdateBattleCnt::set_has_battlecnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeUpdateBattleCnt::clear_has_battlecnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeUpdateBattleCnt::clear_battlecnt() {
  battlecnt_ = 0;
  clear_has_battlecnt();
}
inline ::google::protobuf::int32 BeUpdateBattleCnt::battlecnt() const {
  // @@protoc_insertion_point(field_get:BeUpdateBattleCnt.battleCnt)
  return battlecnt_;
}
inline void BeUpdateBattleCnt::set_battlecnt(::google::protobuf::int32 value) {
  set_has_battlecnt();
  battlecnt_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateBattleCnt.battleCnt)
}

// required int32 todayBattleCnt = 2;
inline bool BeUpdateBattleCnt::has_todaybattlecnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeUpdateBattleCnt::set_has_todaybattlecnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeUpdateBattleCnt::clear_has_todaybattlecnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeUpdateBattleCnt::clear_todaybattlecnt() {
  todaybattlecnt_ = 0;
  clear_has_todaybattlecnt();
}
inline ::google::protobuf::int32 BeUpdateBattleCnt::todaybattlecnt() const {
  // @@protoc_insertion_point(field_get:BeUpdateBattleCnt.todayBattleCnt)
  return todaybattlecnt_;
}
inline void BeUpdateBattleCnt::set_todaybattlecnt(::google::protobuf::int32 value) {
  set_has_todaybattlecnt();
  todaybattlecnt_ = value;
  // @@protoc_insertion_point(field_set:BeUpdateBattleCnt.todayBattleCnt)
}

// -------------------------------------------------------------------

// Admin_AddExp_Req

// required int64 uid = 1;
inline bool Admin_AddExp_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddExp_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddExp_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddExp_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddExp_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Req.uid)
  return uid_;
}
inline void Admin_AddExp_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Req.uid)
}

// required int32 exp = 2;
inline bool Admin_AddExp_Req::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddExp_Req::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddExp_Req::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddExp_Req::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Admin_AddExp_Req::exp() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Req.exp)
  return exp_;
}
inline void Admin_AddExp_Req::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Req.exp)
}

// required int32 gid = 3;
inline bool Admin_AddExp_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddExp_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddExp_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddExp_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddExp_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Req.gid)
  return gid_;
}
inline void Admin_AddExp_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddExp_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddExp_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddExp_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddExp_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddExp_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddExp_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddExp_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddExp_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddExp_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddExp_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddExp_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddExp_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_AddExp_Rsp

// required int64 uid = 1;
inline bool Admin_AddExp_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddExp_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddExp_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddExp_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.uid)
  return uid_;
}
inline void Admin_AddExp_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.uid)
}

// required int32 oldlevel = 2;
inline bool Admin_AddExp_Rsp::has_oldlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_oldlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddExp_Rsp::clear_has_oldlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddExp_Rsp::clear_oldlevel() {
  oldlevel_ = 0;
  clear_has_oldlevel();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::oldlevel() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.oldlevel)
  return oldlevel_;
}
inline void Admin_AddExp_Rsp::set_oldlevel(::google::protobuf::int32 value) {
  set_has_oldlevel();
  oldlevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.oldlevel)
}

// required int32 oldexp = 3;
inline bool Admin_AddExp_Rsp::has_oldexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_oldexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddExp_Rsp::clear_has_oldexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddExp_Rsp::clear_oldexp() {
  oldexp_ = 0;
  clear_has_oldexp();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::oldexp() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.oldexp)
  return oldexp_;
}
inline void Admin_AddExp_Rsp::set_oldexp(::google::protobuf::int32 value) {
  set_has_oldexp();
  oldexp_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.oldexp)
}

// required int32 newlevel = 4;
inline bool Admin_AddExp_Rsp::has_newlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_newlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddExp_Rsp::clear_has_newlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddExp_Rsp::clear_newlevel() {
  newlevel_ = 0;
  clear_has_newlevel();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::newlevel() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.newlevel)
  return newlevel_;
}
inline void Admin_AddExp_Rsp::set_newlevel(::google::protobuf::int32 value) {
  set_has_newlevel();
  newlevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.newlevel)
}

// required int32 newexp = 5;
inline bool Admin_AddExp_Rsp::has_newexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_newexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddExp_Rsp::clear_has_newexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddExp_Rsp::clear_newexp() {
  newexp_ = 0;
  clear_has_newexp();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::newexp() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.newexp)
  return newexp_;
}
inline void Admin_AddExp_Rsp::set_newexp(::google::protobuf::int32 value) {
  set_has_newexp();
  newexp_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.newexp)
}

// required int32 gid = 6;
inline bool Admin_AddExp_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddExp_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddExp_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.gid)
  return gid_;
}
inline void Admin_AddExp_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.gid)
}

// required int32 adminfd = 7;
inline bool Admin_AddExp_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddExp_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddExp_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddExp_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.adminfd)
}

// optional bool fromweb = 8 [default = false];
inline bool Admin_AddExp_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_AddExp_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_AddExp_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddExp_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddExp_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.fromweb)
}

// required int32 succ = 9;
inline bool Admin_AddExp_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_AddExp_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_AddExp_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_AddExp_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddExp_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddExp_Rsp.succ)
  return succ_;
}
inline void Admin_AddExp_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddExp_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddGold_Req

// required int64 uid = 1;
inline bool Admin_AddGold_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddGold_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddGold_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddGold_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddGold_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Req.uid)
  return uid_;
}
inline void Admin_AddGold_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Req.uid)
}

// required int32 gold = 2;
inline bool Admin_AddGold_Req::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddGold_Req::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddGold_Req::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddGold_Req::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Admin_AddGold_Req::gold() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Req.gold)
  return gold_;
}
inline void Admin_AddGold_Req::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Req.gold)
}

// required int32 gid = 3;
inline bool Admin_AddGold_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddGold_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddGold_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddGold_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddGold_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Req.gid)
  return gid_;
}
inline void Admin_AddGold_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddGold_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddGold_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddGold_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddGold_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddGold_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddGold_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddGold_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddGold_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddGold_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddGold_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddGold_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddGold_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_AddGold_Rsp

// required int64 uid = 1;
inline bool Admin_AddGold_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddGold_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddGold_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddGold_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.uid)
  return uid_;
}
inline void Admin_AddGold_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.uid)
}

// required int32 oldgold = 2;
inline bool Admin_AddGold_Rsp::has_oldgold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_oldgold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddGold_Rsp::clear_has_oldgold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddGold_Rsp::clear_oldgold() {
  oldgold_ = 0;
  clear_has_oldgold();
}
inline ::google::protobuf::int32 Admin_AddGold_Rsp::oldgold() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.oldgold)
  return oldgold_;
}
inline void Admin_AddGold_Rsp::set_oldgold(::google::protobuf::int32 value) {
  set_has_oldgold();
  oldgold_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.oldgold)
}

// required int32 newgold = 3;
inline bool Admin_AddGold_Rsp::has_newgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_newgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddGold_Rsp::clear_has_newgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddGold_Rsp::clear_newgold() {
  newgold_ = 0;
  clear_has_newgold();
}
inline ::google::protobuf::int32 Admin_AddGold_Rsp::newgold() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.newgold)
  return newgold_;
}
inline void Admin_AddGold_Rsp::set_newgold(::google::protobuf::int32 value) {
  set_has_newgold();
  newgold_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.newgold)
}

// required int32 gid = 4;
inline bool Admin_AddGold_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddGold_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddGold_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddGold_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.gid)
  return gid_;
}
inline void Admin_AddGold_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_AddGold_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddGold_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddGold_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddGold_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddGold_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.adminfd)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_AddGold_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddGold_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddGold_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddGold_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddGold_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_AddGold_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddGold_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddGold_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddGold_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddGold_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddGold_Rsp.succ)
  return succ_;
}
inline void Admin_AddGold_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGold_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_Clear_Req

// required int64 uid = 1;
inline bool Admin_Clear_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_Clear_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_Clear_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_Clear_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_Clear_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Req.uid)
  return uid_;
}
inline void Admin_Clear_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Req.uid)
}

// required int32 gid = 2;
inline bool Admin_Clear_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_Clear_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_Clear_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_Clear_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_Clear_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Req.gid)
  return gid_;
}
inline void Admin_Clear_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Req.gid)
}

// required int32 adminfd = 3;
inline bool Admin_Clear_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_Clear_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_Clear_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_Clear_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_Clear_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Req.adminfd)
  return adminfd_;
}
inline void Admin_Clear_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Req.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_Clear_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_Clear_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_Clear_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_Clear_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_Clear_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Req.fromweb)
  return fromweb_;
}
inline void Admin_Clear_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_Clear_Rsp

// required int64 uid = 1;
inline bool Admin_Clear_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_Clear_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_Clear_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_Clear_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_Clear_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Rsp.uid)
  return uid_;
}
inline void Admin_Clear_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Rsp.uid)
}

// required int32 gid = 2;
inline bool Admin_Clear_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_Clear_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_Clear_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_Clear_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_Clear_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Rsp.gid)
  return gid_;
}
inline void Admin_Clear_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Rsp.gid)
}

// required int32 adminfd = 3;
inline bool Admin_Clear_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_Clear_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_Clear_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_Clear_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_Clear_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_Clear_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Rsp.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_Clear_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_Clear_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_Clear_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_Clear_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_Clear_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_Clear_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Rsp.fromweb)
}

// required int32 succ = 5;
inline bool Admin_Clear_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_Clear_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_Clear_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_Clear_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_Clear_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_Clear_Rsp.succ)
  return succ_;
}
inline void Admin_Clear_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_Clear_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_SetVal_Req

// required int64 uid = 1;
inline bool Admin_SetVal_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetVal_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetVal_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetVal_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetVal_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.uid)
  return uid_;
}
inline void Admin_SetVal_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.uid)
}

// required int32 gid = 2;
inline bool Admin_SetVal_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetVal_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetVal_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetVal_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetVal_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.gid)
  return gid_;
}
inline void Admin_SetVal_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.gid)
}

// required int32 adminfd = 3;
inline bool Admin_SetVal_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetVal_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetVal_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetVal_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetVal_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.adminfd)
  return adminfd_;
}
inline void Admin_SetVal_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_SetVal_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetVal_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetVal_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetVal_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetVal_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.fromweb)
  return fromweb_;
}
inline void Admin_SetVal_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.fromweb)
}

// optional int32 map_id = 5 [default = 0];
inline bool Admin_SetVal_Req::has_map_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetVal_Req::set_has_map_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetVal_Req::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetVal_Req::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 Admin_SetVal_Req::map_id() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.map_id)
  return map_id_;
}
inline void Admin_SetVal_Req::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.map_id)
}

// optional int32 val_type = 6 [default = 0];
inline bool Admin_SetVal_Req::has_val_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetVal_Req::set_has_val_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetVal_Req::clear_has_val_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetVal_Req::clear_val_type() {
  val_type_ = 0;
  clear_has_val_type();
}
inline ::google::protobuf::int32 Admin_SetVal_Req::val_type() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.val_type)
  return val_type_;
}
inline void Admin_SetVal_Req::set_val_type(::google::protobuf::int32 value) {
  set_has_val_type();
  val_type_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.val_type)
}

// optional int64 val_value = 7 [default = 0];
inline bool Admin_SetVal_Req::has_val_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_SetVal_Req::set_has_val_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_SetVal_Req::clear_has_val_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_SetVal_Req::clear_val_value() {
  val_value_ = GOOGLE_LONGLONG(0);
  clear_has_val_value();
}
inline ::google::protobuf::int64 Admin_SetVal_Req::val_value() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.val_value)
  return val_value_;
}
inline void Admin_SetVal_Req::set_val_value(::google::protobuf::int64 value) {
  set_has_val_value();
  val_value_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.val_value)
}

// optional int64 val_value2 = 8 [default = 0];
inline bool Admin_SetVal_Req::has_val_value2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_SetVal_Req::set_has_val_value2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_SetVal_Req::clear_has_val_value2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_SetVal_Req::clear_val_value2() {
  val_value2_ = GOOGLE_LONGLONG(0);
  clear_has_val_value2();
}
inline ::google::protobuf::int64 Admin_SetVal_Req::val_value2() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Req.val_value2)
  return val_value2_;
}
inline void Admin_SetVal_Req::set_val_value2(::google::protobuf::int64 value) {
  set_has_val_value2();
  val_value2_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Req.val_value2)
}

// -------------------------------------------------------------------

// Admin_SetVal_Rsp

// required int64 uid = 1;
inline bool Admin_SetVal_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetVal_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetVal_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetVal_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.uid)
  return uid_;
}
inline void Admin_SetVal_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.uid)
}

// required int32 gid = 2;
inline bool Admin_SetVal_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetVal_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetVal_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetVal_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.gid)
  return gid_;
}
inline void Admin_SetVal_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.gid)
}

// required int32 adminfd = 3;
inline bool Admin_SetVal_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetVal_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetVal_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetVal_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_SetVal_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_SetVal_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetVal_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetVal_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetVal_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_SetVal_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.fromweb)
}

// required int32 succ = 5;
inline bool Admin_SetVal_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetVal_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetVal_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_SetVal_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.succ)
  return succ_;
}
inline void Admin_SetVal_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.succ)
}

// optional int32 map_id = 6 [default = 0];
inline bool Admin_SetVal_Rsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetVal_Rsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetVal_Rsp::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 Admin_SetVal_Rsp::map_id() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.map_id)
  return map_id_;
}
inline void Admin_SetVal_Rsp::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.map_id)
}

// optional int32 val_type = 7 [default = 0];
inline bool Admin_SetVal_Rsp::has_val_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_val_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_SetVal_Rsp::clear_has_val_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_SetVal_Rsp::clear_val_type() {
  val_type_ = 0;
  clear_has_val_type();
}
inline ::google::protobuf::int32 Admin_SetVal_Rsp::val_type() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.val_type)
  return val_type_;
}
inline void Admin_SetVal_Rsp::set_val_type(::google::protobuf::int32 value) {
  set_has_val_type();
  val_type_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.val_type)
}

// optional int64 val_value = 8 [default = 0];
inline bool Admin_SetVal_Rsp::has_val_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_val_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_SetVal_Rsp::clear_has_val_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_SetVal_Rsp::clear_val_value() {
  val_value_ = GOOGLE_LONGLONG(0);
  clear_has_val_value();
}
inline ::google::protobuf::int64 Admin_SetVal_Rsp::val_value() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.val_value)
  return val_value_;
}
inline void Admin_SetVal_Rsp::set_val_value(::google::protobuf::int64 value) {
  set_has_val_value();
  val_value_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.val_value)
}

// optional int64 val_value2 = 9 [default = 0];
inline bool Admin_SetVal_Rsp::has_val_value2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_SetVal_Rsp::set_has_val_value2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_SetVal_Rsp::clear_has_val_value2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_SetVal_Rsp::clear_val_value2() {
  val_value2_ = GOOGLE_LONGLONG(0);
  clear_has_val_value2();
}
inline ::google::protobuf::int64 Admin_SetVal_Rsp::val_value2() const {
  // @@protoc_insertion_point(field_get:Admin_SetVal_Rsp.val_value2)
  return val_value2_;
}
inline void Admin_SetVal_Rsp::set_val_value2(::google::protobuf::int64 value) {
  set_has_val_value2();
  val_value2_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetVal_Rsp.val_value2)
}

// -------------------------------------------------------------------

// Admin_SetLevel_Req

// required int64 uid = 1;
inline bool Admin_SetLevel_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetLevel_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetLevel_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetLevel_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetLevel_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Req.uid)
  return uid_;
}
inline void Admin_SetLevel_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Req.uid)
}

// required int32 level = 2;
inline bool Admin_SetLevel_Req::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetLevel_Req::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetLevel_Req::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetLevel_Req::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Admin_SetLevel_Req::level() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Req.level)
  return level_;
}
inline void Admin_SetLevel_Req::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Req.level)
}

// required int32 gid = 3;
inline bool Admin_SetLevel_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetLevel_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetLevel_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetLevel_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetLevel_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Req.gid)
  return gid_;
}
inline void Admin_SetLevel_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_SetLevel_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetLevel_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetLevel_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetLevel_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetLevel_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Req.adminfd)
  return adminfd_;
}
inline void Admin_SetLevel_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_SetLevel_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetLevel_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetLevel_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetLevel_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetLevel_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Req.fromweb)
  return fromweb_;
}
inline void Admin_SetLevel_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_SetLevel_Rsp

// required int64 uid = 1;
inline bool Admin_SetLevel_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetLevel_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetLevel_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetLevel_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.uid)
  return uid_;
}
inline void Admin_SetLevel_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.uid)
}

// required int32 oldlevel = 2;
inline bool Admin_SetLevel_Rsp::has_oldlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_oldlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetLevel_Rsp::clear_has_oldlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetLevel_Rsp::clear_oldlevel() {
  oldlevel_ = 0;
  clear_has_oldlevel();
}
inline ::google::protobuf::int32 Admin_SetLevel_Rsp::oldlevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.oldlevel)
  return oldlevel_;
}
inline void Admin_SetLevel_Rsp::set_oldlevel(::google::protobuf::int32 value) {
  set_has_oldlevel();
  oldlevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.oldlevel)
}

// required int32 newlevel = 3;
inline bool Admin_SetLevel_Rsp::has_newlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_newlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetLevel_Rsp::clear_has_newlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetLevel_Rsp::clear_newlevel() {
  newlevel_ = 0;
  clear_has_newlevel();
}
inline ::google::protobuf::int32 Admin_SetLevel_Rsp::newlevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.newlevel)
  return newlevel_;
}
inline void Admin_SetLevel_Rsp::set_newlevel(::google::protobuf::int32 value) {
  set_has_newlevel();
  newlevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.newlevel)
}

// required int32 gid = 4;
inline bool Admin_SetLevel_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetLevel_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetLevel_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetLevel_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.gid)
  return gid_;
}
inline void Admin_SetLevel_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_SetLevel_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetLevel_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetLevel_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetLevel_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_SetLevel_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.adminfd)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_SetLevel_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetLevel_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetLevel_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetLevel_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_SetLevel_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_SetLevel_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_SetLevel_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_SetLevel_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_SetLevel_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_SetLevel_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_SetLevel_Rsp.succ)
  return succ_;
}
inline void Admin_SetLevel_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetLevel_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddProp_Req

// required int64 uid = 1;
inline bool Admin_AddProp_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddProp_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddProp_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddProp_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddProp_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.uid)
  return uid_;
}
inline void Admin_AddProp_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.uid)
}

// required int32 prop = 2;
inline bool Admin_AddProp_Req::has_prop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddProp_Req::set_has_prop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddProp_Req::clear_has_prop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddProp_Req::clear_prop() {
  prop_ = 0;
  clear_has_prop();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::prop() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.prop)
  return prop_;
}
inline void Admin_AddProp_Req::set_prop(::google::protobuf::int32 value) {
  set_has_prop();
  prop_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.prop)
}

// required int32 level = 3;
inline bool Admin_AddProp_Req::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddProp_Req::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddProp_Req::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddProp_Req::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::level() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.level)
  return level_;
}
inline void Admin_AddProp_Req::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.level)
}

// required int32 amount = 4;
inline bool Admin_AddProp_Req::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddProp_Req::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddProp_Req::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddProp_Req::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::amount() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.amount)
  return amount_;
}
inline void Admin_AddProp_Req::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.amount)
}

// required int32 gid = 5;
inline bool Admin_AddProp_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddProp_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddProp_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddProp_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.gid)
  return gid_;
}
inline void Admin_AddProp_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.gid)
}

// required int32 adminfd = 6;
inline bool Admin_AddProp_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddProp_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddProp_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddProp_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddProp_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.adminfd)
}

// optional bool fromweb = 7 [default = false];
inline bool Admin_AddProp_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddProp_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddProp_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddProp_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddProp_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddProp_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.fromweb)
}

// optional int32 activeId = 8;
inline bool Admin_AddProp_Req::has_activeid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_AddProp_Req::set_has_activeid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_AddProp_Req::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_AddProp_Req::clear_activeid() {
  activeid_ = 0;
  clear_has_activeid();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::activeid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.activeId)
  return activeid_;
}
inline void Admin_AddProp_Req::set_activeid(::google::protobuf::int32 value) {
  set_has_activeid();
  activeid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.activeId)
}

// optional int32 sid = 9;
inline bool Admin_AddProp_Req::has_sid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_AddProp_Req::set_has_sid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_AddProp_Req::clear_has_sid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_AddProp_Req::clear_sid() {
  sid_ = 0;
  clear_has_sid();
}
inline ::google::protobuf::int32 Admin_AddProp_Req::sid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Req.sid)
  return sid_;
}
inline void Admin_AddProp_Req::set_sid(::google::protobuf::int32 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Req.sid)
}

// -------------------------------------------------------------------

// Admin_AddProp_Rsp

// required int64 uid = 1;
inline bool Admin_AddProp_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddProp_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddProp_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddProp_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.uid)
  return uid_;
}
inline void Admin_AddProp_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.uid)
}

// required int64 propID = 2;
inline bool Admin_AddProp_Rsp::has_propid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_propid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddProp_Rsp::clear_has_propid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddProp_Rsp::clear_propid() {
  propid_ = GOOGLE_LONGLONG(0);
  clear_has_propid();
}
inline ::google::protobuf::int64 Admin_AddProp_Rsp::propid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.propID)
  return propid_;
}
inline void Admin_AddProp_Rsp::set_propid(::google::protobuf::int64 value) {
  set_has_propid();
  propid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.propID)
}

// required int32 infoID = 3;
inline bool Admin_AddProp_Rsp::has_infoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_infoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddProp_Rsp::clear_has_infoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddProp_Rsp::clear_infoid() {
  infoid_ = 0;
  clear_has_infoid();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::infoid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.infoID)
  return infoid_;
}
inline void Admin_AddProp_Rsp::set_infoid(::google::protobuf::int32 value) {
  set_has_infoid();
  infoid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.infoID)
}

// required int32 level = 4;
inline bool Admin_AddProp_Rsp::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddProp_Rsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddProp_Rsp::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::level() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.level)
  return level_;
}
inline void Admin_AddProp_Rsp::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.level)
}

// required int32 oldamount = 5;
inline bool Admin_AddProp_Rsp::has_oldamount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_oldamount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddProp_Rsp::clear_has_oldamount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddProp_Rsp::clear_oldamount() {
  oldamount_ = 0;
  clear_has_oldamount();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::oldamount() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.oldamount)
  return oldamount_;
}
inline void Admin_AddProp_Rsp::set_oldamount(::google::protobuf::int32 value) {
  set_has_oldamount();
  oldamount_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.oldamount)
}

// required int32 newamount = 6;
inline bool Admin_AddProp_Rsp::has_newamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_newamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddProp_Rsp::clear_has_newamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddProp_Rsp::clear_newamount() {
  newamount_ = 0;
  clear_has_newamount();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::newamount() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.newamount)
  return newamount_;
}
inline void Admin_AddProp_Rsp::set_newamount(::google::protobuf::int32 value) {
  set_has_newamount();
  newamount_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.newamount)
}

// required int32 gid = 7;
inline bool Admin_AddProp_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddProp_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddProp_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.gid)
  return gid_;
}
inline void Admin_AddProp_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.gid)
}

// required int32 adminfd = 8;
inline bool Admin_AddProp_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_AddProp_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_AddProp_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddProp_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.adminfd)
}

// optional bool fromweb = 9 [default = false];
inline bool Admin_AddProp_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_AddProp_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_AddProp_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddProp_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddProp_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.fromweb)
}

// required int32 succ = 10;
inline bool Admin_AddProp_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Admin_AddProp_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Admin_AddProp_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Admin_AddProp_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddProp_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddProp_Rsp.succ)
  return succ_;
}
inline void Admin_AddProp_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddProp_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_SetEquip_Req

// required int64 uid = 1;
inline bool Admin_SetEquip_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetEquip_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetEquip_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetEquip_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetEquip_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.uid)
  return uid_;
}
inline void Admin_SetEquip_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.uid)
}

// required int32 infoID = 2;
inline bool Admin_SetEquip_Req::has_infoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetEquip_Req::set_has_infoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetEquip_Req::clear_has_infoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetEquip_Req::clear_infoid() {
  infoid_ = 0;
  clear_has_infoid();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::infoid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.infoID)
  return infoid_;
}
inline void Admin_SetEquip_Req::set_infoid(::google::protobuf::int32 value) {
  set_has_infoid();
  infoid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.infoID)
}

// required int32 position = 3;
inline bool Admin_SetEquip_Req::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetEquip_Req::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetEquip_Req::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetEquip_Req::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::position() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.position)
  return position_;
}
inline void Admin_SetEquip_Req::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.position)
}

// required int32 equiplevel = 4;
inline bool Admin_SetEquip_Req::has_equiplevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetEquip_Req::set_has_equiplevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetEquip_Req::clear_has_equiplevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetEquip_Req::clear_equiplevel() {
  equiplevel_ = 0;
  clear_has_equiplevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::equiplevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.equiplevel)
  return equiplevel_;
}
inline void Admin_SetEquip_Req::set_equiplevel(::google::protobuf::int32 value) {
  set_has_equiplevel();
  equiplevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.equiplevel)
}

// required int32 atklevel = 5;
inline bool Admin_SetEquip_Req::has_atklevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetEquip_Req::set_has_atklevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetEquip_Req::clear_has_atklevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetEquip_Req::clear_atklevel() {
  atklevel_ = 0;
  clear_has_atklevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::atklevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.atklevel)
  return atklevel_;
}
inline void Admin_SetEquip_Req::set_atklevel(::google::protobuf::int32 value) {
  set_has_atklevel();
  atklevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.atklevel)
}

// required int32 deflevel = 6;
inline bool Admin_SetEquip_Req::has_deflevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetEquip_Req::set_has_deflevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetEquip_Req::clear_has_deflevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetEquip_Req::clear_deflevel() {
  deflevel_ = 0;
  clear_has_deflevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::deflevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.deflevel)
  return deflevel_;
}
inline void Admin_SetEquip_Req::set_deflevel(::google::protobuf::int32 value) {
  set_has_deflevel();
  deflevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.deflevel)
}

// required int32 agilitylevel = 7;
inline bool Admin_SetEquip_Req::has_agilitylevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_SetEquip_Req::set_has_agilitylevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_SetEquip_Req::clear_has_agilitylevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_SetEquip_Req::clear_agilitylevel() {
  agilitylevel_ = 0;
  clear_has_agilitylevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::agilitylevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.agilitylevel)
  return agilitylevel_;
}
inline void Admin_SetEquip_Req::set_agilitylevel(::google::protobuf::int32 value) {
  set_has_agilitylevel();
  agilitylevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.agilitylevel)
}

// required int32 luckylevel = 8;
inline bool Admin_SetEquip_Req::has_luckylevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_SetEquip_Req::set_has_luckylevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_SetEquip_Req::clear_has_luckylevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_SetEquip_Req::clear_luckylevel() {
  luckylevel_ = 0;
  clear_has_luckylevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::luckylevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.luckylevel)
  return luckylevel_;
}
inline void Admin_SetEquip_Req::set_luckylevel(::google::protobuf::int32 value) {
  set_has_luckylevel();
  luckylevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.luckylevel)
}

// required int32 gid = 9;
inline bool Admin_SetEquip_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_SetEquip_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_SetEquip_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_SetEquip_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.gid)
  return gid_;
}
inline void Admin_SetEquip_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.gid)
}

// required int32 adminfd = 10;
inline bool Admin_SetEquip_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Admin_SetEquip_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Admin_SetEquip_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Admin_SetEquip_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetEquip_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.adminfd)
  return adminfd_;
}
inline void Admin_SetEquip_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.adminfd)
}

// optional bool fromweb = 11 [default = false];
inline bool Admin_SetEquip_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Admin_SetEquip_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Admin_SetEquip_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Admin_SetEquip_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetEquip_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Req.fromweb)
  return fromweb_;
}
inline void Admin_SetEquip_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_SetEquip_Rsp

// required int64 uid = 1;
inline bool Admin_SetEquip_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetEquip_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetEquip_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetEquip_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.uid)
  return uid_;
}
inline void Admin_SetEquip_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.uid)
}

// required int64 equipID = 2;
inline bool Admin_SetEquip_Rsp::has_equipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_equipid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetEquip_Rsp::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetEquip_Rsp::clear_equipid() {
  equipid_ = GOOGLE_LONGLONG(0);
  clear_has_equipid();
}
inline ::google::protobuf::int64 Admin_SetEquip_Rsp::equipid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.equipID)
  return equipid_;
}
inline void Admin_SetEquip_Rsp::set_equipid(::google::protobuf::int64 value) {
  set_has_equipid();
  equipid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.equipID)
}

// required int32 infoID = 3;
inline bool Admin_SetEquip_Rsp::has_infoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_infoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetEquip_Rsp::clear_has_infoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetEquip_Rsp::clear_infoid() {
  infoid_ = 0;
  clear_has_infoid();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::infoid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.infoID)
  return infoid_;
}
inline void Admin_SetEquip_Rsp::set_infoid(::google::protobuf::int32 value) {
  set_has_infoid();
  infoid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.infoID)
}

// required int32 position = 4;
inline bool Admin_SetEquip_Rsp::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetEquip_Rsp::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetEquip_Rsp::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::position() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.position)
  return position_;
}
inline void Admin_SetEquip_Rsp::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.position)
}

// required int32 equiplevel = 5;
inline bool Admin_SetEquip_Rsp::has_equiplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_equiplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetEquip_Rsp::clear_has_equiplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetEquip_Rsp::clear_equiplevel() {
  equiplevel_ = 0;
  clear_has_equiplevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::equiplevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.equiplevel)
  return equiplevel_;
}
inline void Admin_SetEquip_Rsp::set_equiplevel(::google::protobuf::int32 value) {
  set_has_equiplevel();
  equiplevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.equiplevel)
}

// required int32 atklevel = 6;
inline bool Admin_SetEquip_Rsp::has_atklevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_atklevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetEquip_Rsp::clear_has_atklevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetEquip_Rsp::clear_atklevel() {
  atklevel_ = 0;
  clear_has_atklevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::atklevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.atklevel)
  return atklevel_;
}
inline void Admin_SetEquip_Rsp::set_atklevel(::google::protobuf::int32 value) {
  set_has_atklevel();
  atklevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.atklevel)
}

// required int32 deflevel = 7;
inline bool Admin_SetEquip_Rsp::has_deflevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_deflevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_SetEquip_Rsp::clear_has_deflevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_SetEquip_Rsp::clear_deflevel() {
  deflevel_ = 0;
  clear_has_deflevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::deflevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.deflevel)
  return deflevel_;
}
inline void Admin_SetEquip_Rsp::set_deflevel(::google::protobuf::int32 value) {
  set_has_deflevel();
  deflevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.deflevel)
}

// required int32 agilitylevel = 8;
inline bool Admin_SetEquip_Rsp::has_agilitylevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_agilitylevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_SetEquip_Rsp::clear_has_agilitylevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_SetEquip_Rsp::clear_agilitylevel() {
  agilitylevel_ = 0;
  clear_has_agilitylevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::agilitylevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.agilitylevel)
  return agilitylevel_;
}
inline void Admin_SetEquip_Rsp::set_agilitylevel(::google::protobuf::int32 value) {
  set_has_agilitylevel();
  agilitylevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.agilitylevel)
}

// required int32 luckylevel = 9;
inline bool Admin_SetEquip_Rsp::has_luckylevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_luckylevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_SetEquip_Rsp::clear_has_luckylevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_SetEquip_Rsp::clear_luckylevel() {
  luckylevel_ = 0;
  clear_has_luckylevel();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::luckylevel() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.luckylevel)
  return luckylevel_;
}
inline void Admin_SetEquip_Rsp::set_luckylevel(::google::protobuf::int32 value) {
  set_has_luckylevel();
  luckylevel_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.luckylevel)
}

// required int32 gid = 10;
inline bool Admin_SetEquip_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Admin_SetEquip_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Admin_SetEquip_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.gid)
  return gid_;
}
inline void Admin_SetEquip_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.gid)
}

// required int32 adminfd = 11;
inline bool Admin_SetEquip_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Admin_SetEquip_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Admin_SetEquip_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_SetEquip_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.adminfd)
}

// optional bool fromweb = 12 [default = false];
inline bool Admin_SetEquip_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Admin_SetEquip_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Admin_SetEquip_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetEquip_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_SetEquip_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.fromweb)
}

// required int32 succ = 13;
inline bool Admin_SetEquip_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Admin_SetEquip_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Admin_SetEquip_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Admin_SetEquip_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_SetEquip_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_SetEquip_Rsp.succ)
  return succ_;
}
inline void Admin_SetEquip_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetEquip_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_UserInfo_Req

// required int64 uid = 1;
inline bool Admin_UserInfo_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_UserInfo_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_UserInfo_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_UserInfo_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_UserInfo_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Req.uid)
  return uid_;
}
inline void Admin_UserInfo_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Req.uid)
}

// required int32 gid = 2;
inline bool Admin_UserInfo_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_UserInfo_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_UserInfo_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_UserInfo_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_UserInfo_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Req.gid)
  return gid_;
}
inline void Admin_UserInfo_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Req.gid)
}

// required int32 adminfd = 3;
inline bool Admin_UserInfo_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_UserInfo_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_UserInfo_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_UserInfo_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_UserInfo_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Req.adminfd)
  return adminfd_;
}
inline void Admin_UserInfo_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Req.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_UserInfo_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_UserInfo_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_UserInfo_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_UserInfo_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_UserInfo_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Req.fromweb)
  return fromweb_;
}
inline void Admin_UserInfo_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_UserInfo_Rsp

// required int64 uid = 1;
inline bool Admin_UserInfo_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_UserInfo_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_UserInfo_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_UserInfo_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_UserInfo_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Rsp.uid)
  return uid_;
}
inline void Admin_UserInfo_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Rsp.uid)
}

// required int32 gid = 6;
inline bool Admin_UserInfo_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_UserInfo_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_UserInfo_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_UserInfo_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_UserInfo_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Rsp.gid)
  return gid_;
}
inline void Admin_UserInfo_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Rsp.gid)
}

// required int32 adminfd = 7;
inline bool Admin_UserInfo_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_UserInfo_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_UserInfo_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_UserInfo_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_UserInfo_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_UserInfo_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Rsp.adminfd)
}

// optional bool fromweb = 8 [default = false];
inline bool Admin_UserInfo_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_UserInfo_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_UserInfo_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_UserInfo_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_UserInfo_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_UserInfo_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Rsp.fromweb)
}

// required int32 succ = 9;
inline bool Admin_UserInfo_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_UserInfo_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_UserInfo_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_UserInfo_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_UserInfo_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_UserInfo_Rsp.succ)
  return succ_;
}
inline void Admin_UserInfo_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_UserInfo_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddGuest_Req

// required int64 uid = 1;
inline bool Admin_AddGuest_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddGuest_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddGuest_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddGuest_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddGuest_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Req.uid)
  return uid_;
}
inline void Admin_AddGuest_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Req.uid)
}

// required int32 group_cnt = 2;
inline bool Admin_AddGuest_Req::has_group_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddGuest_Req::set_has_group_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddGuest_Req::clear_has_group_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddGuest_Req::clear_group_cnt() {
  group_cnt_ = 0;
  clear_has_group_cnt();
}
inline ::google::protobuf::int32 Admin_AddGuest_Req::group_cnt() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Req.group_cnt)
  return group_cnt_;
}
inline void Admin_AddGuest_Req::set_group_cnt(::google::protobuf::int32 value) {
  set_has_group_cnt();
  group_cnt_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Req.group_cnt)
}

// required int32 gid = 3;
inline bool Admin_AddGuest_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddGuest_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddGuest_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddGuest_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddGuest_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Req.gid)
  return gid_;
}
inline void Admin_AddGuest_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddGuest_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddGuest_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddGuest_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddGuest_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddGuest_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddGuest_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddGuest_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddGuest_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddGuest_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddGuest_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddGuest_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddGuest_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Req.fromweb)
}

// optional int32 map_id = 6;
inline bool Admin_AddGuest_Req::has_map_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddGuest_Req::set_has_map_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddGuest_Req::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddGuest_Req::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 Admin_AddGuest_Req::map_id() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Req.map_id)
  return map_id_;
}
inline void Admin_AddGuest_Req::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Req.map_id)
}

// -------------------------------------------------------------------

// Admin_AddGuest_Rsp

// required int64 uid = 1;
inline bool Admin_AddGuest_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddGuest_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddGuest_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddGuest_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.uid)
  return uid_;
}
inline void Admin_AddGuest_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.uid)
}

// required int32 current_group_cnt = 2;
inline bool Admin_AddGuest_Rsp::has_current_group_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_current_group_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddGuest_Rsp::clear_has_current_group_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddGuest_Rsp::clear_current_group_cnt() {
  current_group_cnt_ = 0;
  clear_has_current_group_cnt();
}
inline ::google::protobuf::int32 Admin_AddGuest_Rsp::current_group_cnt() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.current_group_cnt)
  return current_group_cnt_;
}
inline void Admin_AddGuest_Rsp::set_current_group_cnt(::google::protobuf::int32 value) {
  set_has_current_group_cnt();
  current_group_cnt_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.current_group_cnt)
}

// required int32 gid = 3;
inline bool Admin_AddGuest_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddGuest_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddGuest_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddGuest_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.gid)
  return gid_;
}
inline void Admin_AddGuest_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddGuest_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddGuest_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddGuest_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddGuest_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddGuest_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddGuest_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddGuest_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddGuest_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddGuest_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddGuest_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.fromweb)
}

// required int32 succ = 6;
inline bool Admin_AddGuest_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddGuest_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddGuest_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddGuest_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.succ)
  return succ_;
}
inline void Admin_AddGuest_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.succ)
}

// optional int32 map_id = 7;
inline bool Admin_AddGuest_Rsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddGuest_Rsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddGuest_Rsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddGuest_Rsp::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 Admin_AddGuest_Rsp::map_id() const {
  // @@protoc_insertion_point(field_get:Admin_AddGuest_Rsp.map_id)
  return map_id_;
}
inline void Admin_AddGuest_Rsp::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGuest_Rsp.map_id)
}

// -------------------------------------------------------------------

// Admin_SetPublicPraise_Req

// required int64 uid = 1;
inline bool Admin_SetPublicPraise_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetPublicPraise_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetPublicPraise_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetPublicPraise_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetPublicPraise_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Req.uid)
  return uid_;
}
inline void Admin_SetPublicPraise_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Req.uid)
}

// required int32 public_praise = 2;
inline bool Admin_SetPublicPraise_Req::has_public_praise() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetPublicPraise_Req::set_has_public_praise() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetPublicPraise_Req::clear_has_public_praise() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetPublicPraise_Req::clear_public_praise() {
  public_praise_ = 0;
  clear_has_public_praise();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Req::public_praise() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Req.public_praise)
  return public_praise_;
}
inline void Admin_SetPublicPraise_Req::set_public_praise(::google::protobuf::int32 value) {
  set_has_public_praise();
  public_praise_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Req.public_praise)
}

// required int32 gid = 3;
inline bool Admin_SetPublicPraise_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetPublicPraise_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetPublicPraise_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetPublicPraise_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Req.gid)
  return gid_;
}
inline void Admin_SetPublicPraise_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_SetPublicPraise_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetPublicPraise_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetPublicPraise_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetPublicPraise_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Req.adminfd)
  return adminfd_;
}
inline void Admin_SetPublicPraise_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_SetPublicPraise_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetPublicPraise_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetPublicPraise_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetPublicPraise_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetPublicPraise_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Req.fromweb)
  return fromweb_;
}
inline void Admin_SetPublicPraise_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Req.fromweb)
}

// optional int32 map_id = 6;
inline bool Admin_SetPublicPraise_Req::has_map_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetPublicPraise_Req::set_has_map_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetPublicPraise_Req::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetPublicPraise_Req::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Req::map_id() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Req.map_id)
  return map_id_;
}
inline void Admin_SetPublicPraise_Req::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Req.map_id)
}

// -------------------------------------------------------------------

// Admin_SetPublicPraise_Rsp

// required int64 uid = 1;
inline bool Admin_SetPublicPraise_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_SetPublicPraise_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_SetPublicPraise_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.uid)
  return uid_;
}
inline void Admin_SetPublicPraise_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.uid)
}

// required int32 public_praise = 2;
inline bool Admin_SetPublicPraise_Rsp::has_public_praise() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_public_praise() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_public_praise() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_SetPublicPraise_Rsp::clear_public_praise() {
  public_praise_ = 0;
  clear_has_public_praise();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Rsp::public_praise() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.public_praise)
  return public_praise_;
}
inline void Admin_SetPublicPraise_Rsp::set_public_praise(::google::protobuf::int32 value) {
  set_has_public_praise();
  public_praise_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.public_praise)
}

// required int32 gid = 3;
inline bool Admin_SetPublicPraise_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_SetPublicPraise_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.gid)
  return gid_;
}
inline void Admin_SetPublicPraise_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.gid)
}

// required int32 adminfd = 4;
inline bool Admin_SetPublicPraise_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_SetPublicPraise_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_SetPublicPraise_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_SetPublicPraise_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_SetPublicPraise_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_SetPublicPraise_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_SetPublicPraise_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.fromweb)
}

// required int32 succ = 6;
inline bool Admin_SetPublicPraise_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_SetPublicPraise_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.succ)
  return succ_;
}
inline void Admin_SetPublicPraise_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.succ)
}

// optional int32 map_id = 7;
inline bool Admin_SetPublicPraise_Rsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_SetPublicPraise_Rsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_SetPublicPraise_Rsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_SetPublicPraise_Rsp::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 Admin_SetPublicPraise_Rsp::map_id() const {
  // @@protoc_insertion_point(field_get:Admin_SetPublicPraise_Rsp.map_id)
  return map_id_;
}
inline void Admin_SetPublicPraise_Rsp::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_SetPublicPraise_Rsp.map_id)
}

// -------------------------------------------------------------------

// Admin_DelGoods_Req

// required int64 uid = 1;
inline bool Admin_DelGoods_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_DelGoods_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_DelGoods_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_DelGoods_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_DelGoods_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Req.uid)
  return uid_;
}
inline void Admin_DelGoods_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Req.uid)
}

// required int32 goods_id = 2;
inline bool Admin_DelGoods_Req::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_DelGoods_Req::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_DelGoods_Req::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_DelGoods_Req::clear_goods_id() {
  goods_id_ = 0;
  clear_has_goods_id();
}
inline ::google::protobuf::int32 Admin_DelGoods_Req::goods_id() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Req.goods_id)
  return goods_id_;
}
inline void Admin_DelGoods_Req::set_goods_id(::google::protobuf::int32 value) {
  set_has_goods_id();
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Req.goods_id)
}

// required int32 gid = 3;
inline bool Admin_DelGoods_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_DelGoods_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_DelGoods_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_DelGoods_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_DelGoods_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Req.gid)
  return gid_;
}
inline void Admin_DelGoods_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_DelGoods_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_DelGoods_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_DelGoods_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_DelGoods_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_DelGoods_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Req.adminfd)
  return adminfd_;
}
inline void Admin_DelGoods_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_DelGoods_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_DelGoods_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_DelGoods_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_DelGoods_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_DelGoods_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Req.fromweb)
  return fromweb_;
}
inline void Admin_DelGoods_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Req.fromweb)
}

// required int32 goods_amount = 6;
inline bool Admin_DelGoods_Req::has_goods_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_DelGoods_Req::set_has_goods_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_DelGoods_Req::clear_has_goods_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_DelGoods_Req::clear_goods_amount() {
  goods_amount_ = 0;
  clear_has_goods_amount();
}
inline ::google::protobuf::int32 Admin_DelGoods_Req::goods_amount() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Req.goods_amount)
  return goods_amount_;
}
inline void Admin_DelGoods_Req::set_goods_amount(::google::protobuf::int32 value) {
  set_has_goods_amount();
  goods_amount_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Req.goods_amount)
}

// -------------------------------------------------------------------

// Admin_DelGoods_Rsp

// required int64 uid = 1;
inline bool Admin_DelGoods_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_DelGoods_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_DelGoods_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_DelGoods_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.uid)
  return uid_;
}
inline void Admin_DelGoods_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.uid)
}

// required int32 goods_id = 2;
inline bool Admin_DelGoods_Rsp::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_DelGoods_Rsp::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_DelGoods_Rsp::clear_goods_id() {
  goods_id_ = 0;
  clear_has_goods_id();
}
inline ::google::protobuf::int32 Admin_DelGoods_Rsp::goods_id() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.goods_id)
  return goods_id_;
}
inline void Admin_DelGoods_Rsp::set_goods_id(::google::protobuf::int32 value) {
  set_has_goods_id();
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.goods_id)
}

// required int32 goods_current_amount = 3;
inline bool Admin_DelGoods_Rsp::has_goods_current_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_goods_current_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_DelGoods_Rsp::clear_has_goods_current_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_DelGoods_Rsp::clear_goods_current_amount() {
  goods_current_amount_ = 0;
  clear_has_goods_current_amount();
}
inline ::google::protobuf::int32 Admin_DelGoods_Rsp::goods_current_amount() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.goods_current_amount)
  return goods_current_amount_;
}
inline void Admin_DelGoods_Rsp::set_goods_current_amount(::google::protobuf::int32 value) {
  set_has_goods_current_amount();
  goods_current_amount_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.goods_current_amount)
}

// required int32 adminfd = 4;
inline bool Admin_DelGoods_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_DelGoods_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_DelGoods_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_DelGoods_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_DelGoods_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.adminfd)
}

// required int32 gid = 5;
inline bool Admin_DelGoods_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_DelGoods_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_DelGoods_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_DelGoods_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.gid)
  return gid_;
}
inline void Admin_DelGoods_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.gid)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_DelGoods_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_DelGoods_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_DelGoods_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_DelGoods_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_DelGoods_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_DelGoods_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_DelGoods_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_DelGoods_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_DelGoods_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_DelGoods_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_DelGoods_Rsp.succ)
  return succ_;
}
inline void Admin_DelGoods_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelGoods_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddGoods_Req

// required int64 uid = 1;
inline bool Admin_AddGoods_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddGoods_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddGoods_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddGoods_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddGoods_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Req.uid)
  return uid_;
}
inline void Admin_AddGoods_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Req.uid)
}

// required int32 goods_id = 2;
inline bool Admin_AddGoods_Req::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddGoods_Req::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddGoods_Req::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddGoods_Req::clear_goods_id() {
  goods_id_ = 0;
  clear_has_goods_id();
}
inline ::google::protobuf::int32 Admin_AddGoods_Req::goods_id() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Req.goods_id)
  return goods_id_;
}
inline void Admin_AddGoods_Req::set_goods_id(::google::protobuf::int32 value) {
  set_has_goods_id();
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Req.goods_id)
}

// required int32 gid = 3;
inline bool Admin_AddGoods_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddGoods_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddGoods_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddGoods_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddGoods_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Req.gid)
  return gid_;
}
inline void Admin_AddGoods_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddGoods_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddGoods_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddGoods_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddGoods_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddGoods_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddGoods_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddGoods_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddGoods_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddGoods_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddGoods_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddGoods_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddGoods_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Req.fromweb)
}

// required int32 goods_amount = 6;
inline bool Admin_AddGoods_Req::has_goods_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddGoods_Req::set_has_goods_amount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddGoods_Req::clear_has_goods_amount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddGoods_Req::clear_goods_amount() {
  goods_amount_ = 0;
  clear_has_goods_amount();
}
inline ::google::protobuf::int32 Admin_AddGoods_Req::goods_amount() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Req.goods_amount)
  return goods_amount_;
}
inline void Admin_AddGoods_Req::set_goods_amount(::google::protobuf::int32 value) {
  set_has_goods_amount();
  goods_amount_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Req.goods_amount)
}

// -------------------------------------------------------------------

// Admin_AddGoods_Rsp

// required int64 uid = 1;
inline bool Admin_AddGoods_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddGoods_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddGoods_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddGoods_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.uid)
  return uid_;
}
inline void Admin_AddGoods_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.uid)
}

// required int32 goods_id = 2;
inline bool Admin_AddGoods_Rsp::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddGoods_Rsp::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddGoods_Rsp::clear_goods_id() {
  goods_id_ = 0;
  clear_has_goods_id();
}
inline ::google::protobuf::int32 Admin_AddGoods_Rsp::goods_id() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.goods_id)
  return goods_id_;
}
inline void Admin_AddGoods_Rsp::set_goods_id(::google::protobuf::int32 value) {
  set_has_goods_id();
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.goods_id)
}

// required int32 goods_current_amount = 3;
inline bool Admin_AddGoods_Rsp::has_goods_current_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_goods_current_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddGoods_Rsp::clear_has_goods_current_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddGoods_Rsp::clear_goods_current_amount() {
  goods_current_amount_ = 0;
  clear_has_goods_current_amount();
}
inline ::google::protobuf::int32 Admin_AddGoods_Rsp::goods_current_amount() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.goods_current_amount)
  return goods_current_amount_;
}
inline void Admin_AddGoods_Rsp::set_goods_current_amount(::google::protobuf::int32 value) {
  set_has_goods_current_amount();
  goods_current_amount_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.goods_current_amount)
}

// required int32 adminfd = 4;
inline bool Admin_AddGoods_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddGoods_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddGoods_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddGoods_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddGoods_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.adminfd)
}

// required int32 gid = 5;
inline bool Admin_AddGoods_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddGoods_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddGoods_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddGoods_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.gid)
  return gid_;
}
inline void Admin_AddGoods_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.gid)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_AddGoods_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddGoods_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddGoods_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddGoods_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddGoods_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_AddGoods_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddGoods_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddGoods_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddGoods_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddGoods_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddGoods_Rsp.succ)
  return succ_;
}
inline void Admin_AddGoods_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddGoods_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_Common_Req

// required string func = 1;
inline bool Admin_Common_Req::has_func() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_Common_Req::set_has_func() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_Common_Req::clear_has_func() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_Common_Req::clear_func() {
  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_func();
}
inline const ::std::string& Admin_Common_Req::func() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.func)
  return func_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_func(const ::std::string& value) {
  set_has_func();
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Req.func)
}
inline void Admin_Common_Req::set_func(const char* value) {
  set_has_func();
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Req.func)
}
inline void Admin_Common_Req::set_func(const char* value, size_t size) {
  set_has_func();
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Req.func)
}
inline ::std::string* Admin_Common_Req::mutable_func() {
  set_has_func();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Req.func)
  return func_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Req::release_func() {
  clear_has_func();
  return func_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_allocated_func(::std::string* func) {
  if (func != NULL) {
    set_has_func();
  } else {
    clear_has_func();
  }
  func_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), func);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Req.func)
}

// required int64 uid = 2;
inline bool Admin_Common_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_Common_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_Common_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_Common_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_Common_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.uid)
  return uid_;
}
inline void Admin_Common_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Req.uid)
}

// required string arg1 = 3;
inline bool Admin_Common_Req::has_arg1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_Common_Req::set_has_arg1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_Common_Req::clear_has_arg1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_Common_Req::clear_arg1() {
  arg1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg1();
}
inline const ::std::string& Admin_Common_Req::arg1() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.arg1)
  return arg1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_arg1(const ::std::string& value) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Req.arg1)
}
inline void Admin_Common_Req::set_arg1(const char* value) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Req.arg1)
}
inline void Admin_Common_Req::set_arg1(const char* value, size_t size) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Req.arg1)
}
inline ::std::string* Admin_Common_Req::mutable_arg1() {
  set_has_arg1();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Req.arg1)
  return arg1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Req::release_arg1() {
  clear_has_arg1();
  return arg1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_allocated_arg1(::std::string* arg1) {
  if (arg1 != NULL) {
    set_has_arg1();
  } else {
    clear_has_arg1();
  }
  arg1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg1);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Req.arg1)
}

// required string arg2 = 4;
inline bool Admin_Common_Req::has_arg2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_Common_Req::set_has_arg2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_Common_Req::clear_has_arg2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_Common_Req::clear_arg2() {
  arg2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg2();
}
inline const ::std::string& Admin_Common_Req::arg2() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.arg2)
  return arg2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_arg2(const ::std::string& value) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Req.arg2)
}
inline void Admin_Common_Req::set_arg2(const char* value) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Req.arg2)
}
inline void Admin_Common_Req::set_arg2(const char* value, size_t size) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Req.arg2)
}
inline ::std::string* Admin_Common_Req::mutable_arg2() {
  set_has_arg2();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Req.arg2)
  return arg2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Req::release_arg2() {
  clear_has_arg2();
  return arg2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_allocated_arg2(::std::string* arg2) {
  if (arg2 != NULL) {
    set_has_arg2();
  } else {
    clear_has_arg2();
  }
  arg2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg2);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Req.arg2)
}

// required string arg3 = 5;
inline bool Admin_Common_Req::has_arg3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_Common_Req::set_has_arg3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_Common_Req::clear_has_arg3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_Common_Req::clear_arg3() {
  arg3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg3();
}
inline const ::std::string& Admin_Common_Req::arg3() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.arg3)
  return arg3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_arg3(const ::std::string& value) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Req.arg3)
}
inline void Admin_Common_Req::set_arg3(const char* value) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Req.arg3)
}
inline void Admin_Common_Req::set_arg3(const char* value, size_t size) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Req.arg3)
}
inline ::std::string* Admin_Common_Req::mutable_arg3() {
  set_has_arg3();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Req.arg3)
  return arg3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Req::release_arg3() {
  clear_has_arg3();
  return arg3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_allocated_arg3(::std::string* arg3) {
  if (arg3 != NULL) {
    set_has_arg3();
  } else {
    clear_has_arg3();
  }
  arg3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg3);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Req.arg3)
}

// required string arg4 = 6;
inline bool Admin_Common_Req::has_arg4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_Common_Req::set_has_arg4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_Common_Req::clear_has_arg4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_Common_Req::clear_arg4() {
  arg4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg4();
}
inline const ::std::string& Admin_Common_Req::arg4() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.arg4)
  return arg4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_arg4(const ::std::string& value) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Req.arg4)
}
inline void Admin_Common_Req::set_arg4(const char* value) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Req.arg4)
}
inline void Admin_Common_Req::set_arg4(const char* value, size_t size) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Req.arg4)
}
inline ::std::string* Admin_Common_Req::mutable_arg4() {
  set_has_arg4();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Req.arg4)
  return arg4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Req::release_arg4() {
  clear_has_arg4();
  return arg4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Req::set_allocated_arg4(::std::string* arg4) {
  if (arg4 != NULL) {
    set_has_arg4();
  } else {
    clear_has_arg4();
  }
  arg4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg4);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Req.arg4)
}

// required int32 adminfd = 7;
inline bool Admin_Common_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_Common_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_Common_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_Common_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_Common_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.adminfd)
  return adminfd_;
}
inline void Admin_Common_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Req.adminfd)
}

// required int32 gid = 8;
inline bool Admin_Common_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_Common_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_Common_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_Common_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_Common_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Req.gid)
  return gid_;
}
inline void Admin_Common_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Req.gid)
}

// -------------------------------------------------------------------

// Admin_Common_Rsp

// required string func = 1;
inline bool Admin_Common_Rsp::has_func() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_Common_Rsp::set_has_func() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_Common_Rsp::clear_has_func() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_Common_Rsp::clear_func() {
  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_func();
}
inline const ::std::string& Admin_Common_Rsp::func() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.func)
  return func_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_func(const ::std::string& value) {
  set_has_func();
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.func)
}
inline void Admin_Common_Rsp::set_func(const char* value) {
  set_has_func();
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Rsp.func)
}
inline void Admin_Common_Rsp::set_func(const char* value, size_t size) {
  set_has_func();
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Rsp.func)
}
inline ::std::string* Admin_Common_Rsp::mutable_func() {
  set_has_func();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Rsp.func)
  return func_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Rsp::release_func() {
  clear_has_func();
  return func_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_allocated_func(::std::string* func) {
  if (func != NULL) {
    set_has_func();
  } else {
    clear_has_func();
  }
  func_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), func);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Rsp.func)
}

// required int64 uid = 2;
inline bool Admin_Common_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_Common_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_Common_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_Common_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_Common_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.uid)
  return uid_;
}
inline void Admin_Common_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.uid)
}

// required int32 succ = 3;
inline bool Admin_Common_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_Common_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_Common_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_Common_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_Common_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.succ)
  return succ_;
}
inline void Admin_Common_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.succ)
}

// required string arg1 = 4;
inline bool Admin_Common_Rsp::has_arg1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_Common_Rsp::set_has_arg1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_Common_Rsp::clear_has_arg1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_Common_Rsp::clear_arg1() {
  arg1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg1();
}
inline const ::std::string& Admin_Common_Rsp::arg1() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.arg1)
  return arg1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_arg1(const ::std::string& value) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.arg1)
}
inline void Admin_Common_Rsp::set_arg1(const char* value) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Rsp.arg1)
}
inline void Admin_Common_Rsp::set_arg1(const char* value, size_t size) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Rsp.arg1)
}
inline ::std::string* Admin_Common_Rsp::mutable_arg1() {
  set_has_arg1();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Rsp.arg1)
  return arg1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Rsp::release_arg1() {
  clear_has_arg1();
  return arg1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_allocated_arg1(::std::string* arg1) {
  if (arg1 != NULL) {
    set_has_arg1();
  } else {
    clear_has_arg1();
  }
  arg1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg1);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Rsp.arg1)
}

// required string arg2 = 5;
inline bool Admin_Common_Rsp::has_arg2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_Common_Rsp::set_has_arg2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_Common_Rsp::clear_has_arg2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_Common_Rsp::clear_arg2() {
  arg2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg2();
}
inline const ::std::string& Admin_Common_Rsp::arg2() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.arg2)
  return arg2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_arg2(const ::std::string& value) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.arg2)
}
inline void Admin_Common_Rsp::set_arg2(const char* value) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Rsp.arg2)
}
inline void Admin_Common_Rsp::set_arg2(const char* value, size_t size) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Rsp.arg2)
}
inline ::std::string* Admin_Common_Rsp::mutable_arg2() {
  set_has_arg2();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Rsp.arg2)
  return arg2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Rsp::release_arg2() {
  clear_has_arg2();
  return arg2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_allocated_arg2(::std::string* arg2) {
  if (arg2 != NULL) {
    set_has_arg2();
  } else {
    clear_has_arg2();
  }
  arg2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg2);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Rsp.arg2)
}

// required string arg3 = 6;
inline bool Admin_Common_Rsp::has_arg3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_Common_Rsp::set_has_arg3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_Common_Rsp::clear_has_arg3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_Common_Rsp::clear_arg3() {
  arg3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg3();
}
inline const ::std::string& Admin_Common_Rsp::arg3() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.arg3)
  return arg3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_arg3(const ::std::string& value) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.arg3)
}
inline void Admin_Common_Rsp::set_arg3(const char* value) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Rsp.arg3)
}
inline void Admin_Common_Rsp::set_arg3(const char* value, size_t size) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Rsp.arg3)
}
inline ::std::string* Admin_Common_Rsp::mutable_arg3() {
  set_has_arg3();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Rsp.arg3)
  return arg3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Rsp::release_arg3() {
  clear_has_arg3();
  return arg3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_allocated_arg3(::std::string* arg3) {
  if (arg3 != NULL) {
    set_has_arg3();
  } else {
    clear_has_arg3();
  }
  arg3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg3);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Rsp.arg3)
}

// required string arg4 = 7;
inline bool Admin_Common_Rsp::has_arg4() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_Common_Rsp::set_has_arg4() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_Common_Rsp::clear_has_arg4() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_Common_Rsp::clear_arg4() {
  arg4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg4();
}
inline const ::std::string& Admin_Common_Rsp::arg4() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.arg4)
  return arg4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_arg4(const ::std::string& value) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.arg4)
}
inline void Admin_Common_Rsp::set_arg4(const char* value) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_Common_Rsp.arg4)
}
inline void Admin_Common_Rsp::set_arg4(const char* value, size_t size) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_Common_Rsp.arg4)
}
inline ::std::string* Admin_Common_Rsp::mutable_arg4() {
  set_has_arg4();
  // @@protoc_insertion_point(field_mutable:Admin_Common_Rsp.arg4)
  return arg4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_Common_Rsp::release_arg4() {
  clear_has_arg4();
  return arg4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_Common_Rsp::set_allocated_arg4(::std::string* arg4) {
  if (arg4 != NULL) {
    set_has_arg4();
  } else {
    clear_has_arg4();
  }
  arg4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg4);
  // @@protoc_insertion_point(field_set_allocated:Admin_Common_Rsp.arg4)
}

// required int32 adminfd = 8;
inline bool Admin_Common_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_Common_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_Common_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_Common_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_Common_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_Common_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.adminfd)
}

// required int32 gid = 9;
inline bool Admin_Common_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_Common_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_Common_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_Common_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_Common_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_Common_Rsp.gid)
  return gid_;
}
inline void Admin_Common_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Common_Rsp.gid)
}

// -------------------------------------------------------------------

// Admin_DelProp_Req

// required int64 uid = 1;
inline bool Admin_DelProp_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_DelProp_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_DelProp_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_DelProp_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_DelProp_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Req.uid)
  return uid_;
}
inline void Admin_DelProp_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Req.uid)
}

// required int32 position = 2;
inline bool Admin_DelProp_Req::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_DelProp_Req::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_DelProp_Req::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_DelProp_Req::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 Admin_DelProp_Req::position() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Req.position)
  return position_;
}
inline void Admin_DelProp_Req::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Req.position)
}

// required int32 gid = 3;
inline bool Admin_DelProp_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_DelProp_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_DelProp_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_DelProp_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_DelProp_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Req.gid)
  return gid_;
}
inline void Admin_DelProp_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_DelProp_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_DelProp_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_DelProp_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_DelProp_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_DelProp_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Req.adminfd)
  return adminfd_;
}
inline void Admin_DelProp_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_DelProp_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_DelProp_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_DelProp_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_DelProp_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_DelProp_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Req.fromweb)
  return fromweb_;
}
inline void Admin_DelProp_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Req.fromweb)
}

// required int64 propID = 6;
inline bool Admin_DelProp_Req::has_propid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_DelProp_Req::set_has_propid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_DelProp_Req::clear_has_propid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_DelProp_Req::clear_propid() {
  propid_ = GOOGLE_LONGLONG(0);
  clear_has_propid();
}
inline ::google::protobuf::int64 Admin_DelProp_Req::propid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Req.propID)
  return propid_;
}
inline void Admin_DelProp_Req::set_propid(::google::protobuf::int64 value) {
  set_has_propid();
  propid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Req.propID)
}

// -------------------------------------------------------------------

// Admin_DelProp_Rsp

// required int64 uid = 1;
inline bool Admin_DelProp_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_DelProp_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_DelProp_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_DelProp_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.uid)
  return uid_;
}
inline void Admin_DelProp_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.uid)
}

// required int64 propID = 2;
inline bool Admin_DelProp_Rsp::has_propid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_propid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_DelProp_Rsp::clear_has_propid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_DelProp_Rsp::clear_propid() {
  propid_ = GOOGLE_LONGLONG(0);
  clear_has_propid();
}
inline ::google::protobuf::int64 Admin_DelProp_Rsp::propid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.propID)
  return propid_;
}
inline void Admin_DelProp_Rsp::set_propid(::google::protobuf::int64 value) {
  set_has_propid();
  propid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.propID)
}

// required int32 infoID = 3;
inline bool Admin_DelProp_Rsp::has_infoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_infoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_DelProp_Rsp::clear_has_infoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_DelProp_Rsp::clear_infoid() {
  infoid_ = 0;
  clear_has_infoid();
}
inline ::google::protobuf::int32 Admin_DelProp_Rsp::infoid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.infoID)
  return infoid_;
}
inline void Admin_DelProp_Rsp::set_infoid(::google::protobuf::int32 value) {
  set_has_infoid();
  infoid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.infoID)
}

// required int32 level = 4;
inline bool Admin_DelProp_Rsp::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_DelProp_Rsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_DelProp_Rsp::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Admin_DelProp_Rsp::level() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.level)
  return level_;
}
inline void Admin_DelProp_Rsp::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.level)
}

// required int32 delamount = 5;
inline bool Admin_DelProp_Rsp::has_delamount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_delamount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_DelProp_Rsp::clear_has_delamount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_DelProp_Rsp::clear_delamount() {
  delamount_ = 0;
  clear_has_delamount();
}
inline ::google::protobuf::int32 Admin_DelProp_Rsp::delamount() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.delamount)
  return delamount_;
}
inline void Admin_DelProp_Rsp::set_delamount(::google::protobuf::int32 value) {
  set_has_delamount();
  delamount_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.delamount)
}

// required int32 gid = 6;
inline bool Admin_DelProp_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_DelProp_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_DelProp_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_DelProp_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.gid)
  return gid_;
}
inline void Admin_DelProp_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.gid)
}

// required int32 adminfd = 7;
inline bool Admin_DelProp_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_DelProp_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_DelProp_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_DelProp_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_DelProp_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.adminfd)
}

// optional bool fromweb = 8 [default = false];
inline bool Admin_DelProp_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_DelProp_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_DelProp_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_DelProp_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_DelProp_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.fromweb)
}

// required int32 succ = 9;
inline bool Admin_DelProp_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_DelProp_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_DelProp_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_DelProp_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_DelProp_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_DelProp_Rsp.succ)
  return succ_;
}
inline void Admin_DelProp_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_DelProp_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_RunTask_Req

// required int64 uid = 1;
inline bool Admin_RunTask_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_RunTask_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_RunTask_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_RunTask_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_RunTask_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Req.uid)
  return uid_;
}
inline void Admin_RunTask_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Req.uid)
}

// required int32 taskid = 2;
inline bool Admin_RunTask_Req::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_RunTask_Req::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_RunTask_Req::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_RunTask_Req::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 Admin_RunTask_Req::taskid() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Req.taskid)
  return taskid_;
}
inline void Admin_RunTask_Req::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Req.taskid)
}

// required int32 step = 3;
inline bool Admin_RunTask_Req::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_RunTask_Req::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_RunTask_Req::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_RunTask_Req::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 Admin_RunTask_Req::step() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Req.step)
  return step_;
}
inline void Admin_RunTask_Req::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Req.step)
}

// required int32 gid = 4;
inline bool Admin_RunTask_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_RunTask_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_RunTask_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_RunTask_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_RunTask_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Req.gid)
  return gid_;
}
inline void Admin_RunTask_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Req.gid)
}

// required int32 adminfd = 5;
inline bool Admin_RunTask_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_RunTask_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_RunTask_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_RunTask_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_RunTask_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Req.adminfd)
  return adminfd_;
}
inline void Admin_RunTask_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Req.adminfd)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_RunTask_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_RunTask_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_RunTask_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_RunTask_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_RunTask_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Req.fromweb)
  return fromweb_;
}
inline void Admin_RunTask_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_RunTask_Rsp

// required int64 uid = 1;
inline bool Admin_RunTask_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_RunTask_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_RunTask_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_RunTask_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.uid)
  return uid_;
}
inline void Admin_RunTask_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.uid)
}

// required int32 taskid = 2;
inline bool Admin_RunTask_Rsp::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_RunTask_Rsp::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_RunTask_Rsp::clear_taskid() {
  taskid_ = 0;
  clear_has_taskid();
}
inline ::google::protobuf::int32 Admin_RunTask_Rsp::taskid() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.taskid)
  return taskid_;
}
inline void Admin_RunTask_Rsp::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.taskid)
}

// required int32 step = 3;
inline bool Admin_RunTask_Rsp::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_RunTask_Rsp::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_RunTask_Rsp::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 Admin_RunTask_Rsp::step() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.step)
  return step_;
}
inline void Admin_RunTask_Rsp::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.step)
}

// required int32 gid = 4;
inline bool Admin_RunTask_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_RunTask_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_RunTask_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_RunTask_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.gid)
  return gid_;
}
inline void Admin_RunTask_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_RunTask_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_RunTask_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_RunTask_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_RunTask_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_RunTask_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.adminfd)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_RunTask_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_RunTask_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_RunTask_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_RunTask_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_RunTask_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_RunTask_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_RunTask_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_RunTask_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_RunTask_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_RunTask_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_RunTask_Rsp.succ)
  return succ_;
}
inline void Admin_RunTask_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_RunTask_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_BroadCast_Req

// required string msg = 1;
inline bool Admin_BroadCast_Req::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_BroadCast_Req::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_BroadCast_Req::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_BroadCast_Req::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& Admin_BroadCast_Req::msg() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Req.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BroadCast_Req::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Req.msg)
}
inline void Admin_BroadCast_Req::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_BroadCast_Req.msg)
}
inline void Admin_BroadCast_Req::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_BroadCast_Req.msg)
}
inline ::std::string* Admin_BroadCast_Req::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:Admin_BroadCast_Req.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_BroadCast_Req::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BroadCast_Req::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Admin_BroadCast_Req.msg)
}

// required int32 gid = 2;
inline bool Admin_BroadCast_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_BroadCast_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_BroadCast_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_BroadCast_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_BroadCast_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Req.gid)
  return gid_;
}
inline void Admin_BroadCast_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Req.gid)
}

// required int32 adminfd = 3;
inline bool Admin_BroadCast_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_BroadCast_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_BroadCast_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_BroadCast_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_BroadCast_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Req.adminfd)
  return adminfd_;
}
inline void Admin_BroadCast_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Req.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_BroadCast_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_BroadCast_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_BroadCast_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_BroadCast_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_BroadCast_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Req.fromweb)
  return fromweb_;
}
inline void Admin_BroadCast_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_BroadCast_Rsp

// required string msg = 1;
inline bool Admin_BroadCast_Rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_BroadCast_Rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_BroadCast_Rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_BroadCast_Rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& Admin_BroadCast_Rsp::msg() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BroadCast_Rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Rsp.msg)
}
inline void Admin_BroadCast_Rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_BroadCast_Rsp.msg)
}
inline void Admin_BroadCast_Rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_BroadCast_Rsp.msg)
}
inline ::std::string* Admin_BroadCast_Rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:Admin_BroadCast_Rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_BroadCast_Rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BroadCast_Rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Admin_BroadCast_Rsp.msg)
}

// required int32 gid = 2;
inline bool Admin_BroadCast_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_BroadCast_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_BroadCast_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_BroadCast_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_BroadCast_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Rsp.gid)
  return gid_;
}
inline void Admin_BroadCast_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Rsp.gid)
}

// required int32 adminfd = 3;
inline bool Admin_BroadCast_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_BroadCast_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_BroadCast_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_BroadCast_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_BroadCast_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_BroadCast_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Rsp.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_BroadCast_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_BroadCast_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_BroadCast_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_BroadCast_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_BroadCast_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_BroadCast_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Rsp.fromweb)
}

// required int32 succ = 5;
inline bool Admin_BroadCast_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_BroadCast_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_BroadCast_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_BroadCast_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_BroadCast_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_BroadCast_Rsp.succ)
  return succ_;
}
inline void Admin_BroadCast_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_BroadCast_Rsp.succ)
}

// -------------------------------------------------------------------

// FluentPriceItem

// optional int32 type_id = 1;
inline bool FluentPriceItem::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FluentPriceItem::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FluentPriceItem::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FluentPriceItem::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 FluentPriceItem::type_id() const {
  // @@protoc_insertion_point(field_get:FluentPriceItem.type_id)
  return type_id_;
}
inline void FluentPriceItem::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:FluentPriceItem.type_id)
}

// optional int32 price = 2;
inline bool FluentPriceItem::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FluentPriceItem::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FluentPriceItem::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FluentPriceItem::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 FluentPriceItem::price() const {
  // @@protoc_insertion_point(field_get:FluentPriceItem.price)
  return price_;
}
inline void FluentPriceItem::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:FluentPriceItem.price)
}

// optional int32 rand_n1 = 3 [default = 0];
inline bool FluentPriceItem::has_rand_n1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FluentPriceItem::set_has_rand_n1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FluentPriceItem::clear_has_rand_n1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FluentPriceItem::clear_rand_n1() {
  rand_n1_ = 0;
  clear_has_rand_n1();
}
inline ::google::protobuf::int32 FluentPriceItem::rand_n1() const {
  // @@protoc_insertion_point(field_get:FluentPriceItem.rand_n1)
  return rand_n1_;
}
inline void FluentPriceItem::set_rand_n1(::google::protobuf::int32 value) {
  set_has_rand_n1();
  rand_n1_ = value;
  // @@protoc_insertion_point(field_set:FluentPriceItem.rand_n1)
}

// optional int32 rand_n2 = 4 [default = 0];
inline bool FluentPriceItem::has_rand_n2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FluentPriceItem::set_has_rand_n2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FluentPriceItem::clear_has_rand_n2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FluentPriceItem::clear_rand_n2() {
  rand_n2_ = 0;
  clear_has_rand_n2();
}
inline ::google::protobuf::int32 FluentPriceItem::rand_n2() const {
  // @@protoc_insertion_point(field_get:FluentPriceItem.rand_n2)
  return rand_n2_;
}
inline void FluentPriceItem::set_rand_n2(::google::protobuf::int32 value) {
  set_has_rand_n2();
  rand_n2_ = value;
  // @@protoc_insertion_point(field_set:FluentPriceItem.rand_n2)
}

// -------------------------------------------------------------------

// Admin_FluentPrice_Req

// required int32 adminfd = 1;
inline bool Admin_FluentPrice_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_FluentPrice_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_FluentPrice_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_FluentPrice_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_FluentPrice_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Req.adminfd)
  return adminfd_;
}
inline void Admin_FluentPrice_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_FluentPrice_Req.adminfd)
}

// optional bool fromweb = 2 [default = false];
inline bool Admin_FluentPrice_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_FluentPrice_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_FluentPrice_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_FluentPrice_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_FluentPrice_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Req.fromweb)
  return fromweb_;
}
inline void Admin_FluentPrice_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_FluentPrice_Req.fromweb)
}

// repeated .FluentPriceItem price_item = 3;
inline int Admin_FluentPrice_Req::price_item_size() const {
  return price_item_.size();
}
inline void Admin_FluentPrice_Req::clear_price_item() {
  price_item_.Clear();
}
inline const ::FluentPriceItem& Admin_FluentPrice_Req::price_item(int index) const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Req.price_item)
  return price_item_.Get(index);
}
inline ::FluentPriceItem* Admin_FluentPrice_Req::mutable_price_item(int index) {
  // @@protoc_insertion_point(field_mutable:Admin_FluentPrice_Req.price_item)
  return price_item_.Mutable(index);
}
inline ::FluentPriceItem* Admin_FluentPrice_Req::add_price_item() {
  // @@protoc_insertion_point(field_add:Admin_FluentPrice_Req.price_item)
  return price_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >&
Admin_FluentPrice_Req::price_item() const {
  // @@protoc_insertion_point(field_list:Admin_FluentPrice_Req.price_item)
  return price_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >*
Admin_FluentPrice_Req::mutable_price_item() {
  // @@protoc_insertion_point(field_mutable_list:Admin_FluentPrice_Req.price_item)
  return &price_item_;
}

// -------------------------------------------------------------------

// Admin_FluentPrice_Rsp

// required int32 adminfd = 1;
inline bool Admin_FluentPrice_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_FluentPrice_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_FluentPrice_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_FluentPrice_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_FluentPrice_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_FluentPrice_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_FluentPrice_Rsp.adminfd)
}

// optional bool fromweb = 2 [default = false];
inline bool Admin_FluentPrice_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_FluentPrice_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_FluentPrice_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_FluentPrice_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_FluentPrice_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_FluentPrice_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_FluentPrice_Rsp.fromweb)
}

// required int32 succ = 3;
inline bool Admin_FluentPrice_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_FluentPrice_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_FluentPrice_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_FluentPrice_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_FluentPrice_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Rsp.succ)
  return succ_;
}
inline void Admin_FluentPrice_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_FluentPrice_Rsp.succ)
}

// repeated .FluentPriceItem price_item = 4;
inline int Admin_FluentPrice_Rsp::price_item_size() const {
  return price_item_.size();
}
inline void Admin_FluentPrice_Rsp::clear_price_item() {
  price_item_.Clear();
}
inline const ::FluentPriceItem& Admin_FluentPrice_Rsp::price_item(int index) const {
  // @@protoc_insertion_point(field_get:Admin_FluentPrice_Rsp.price_item)
  return price_item_.Get(index);
}
inline ::FluentPriceItem* Admin_FluentPrice_Rsp::mutable_price_item(int index) {
  // @@protoc_insertion_point(field_mutable:Admin_FluentPrice_Rsp.price_item)
  return price_item_.Mutable(index);
}
inline ::FluentPriceItem* Admin_FluentPrice_Rsp::add_price_item() {
  // @@protoc_insertion_point(field_add:Admin_FluentPrice_Rsp.price_item)
  return price_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >&
Admin_FluentPrice_Rsp::price_item() const {
  // @@protoc_insertion_point(field_list:Admin_FluentPrice_Rsp.price_item)
  return price_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::FluentPriceItem >*
Admin_FluentPrice_Rsp::mutable_price_item() {
  // @@protoc_insertion_point(field_mutable_list:Admin_FluentPrice_Rsp.price_item)
  return &price_item_;
}

// -------------------------------------------------------------------

// Admin_StatisticsOnLinePeople_Req

// required int32 adminfd = 1;
inline bool Admin_StatisticsOnLinePeople_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_StatisticsOnLinePeople_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_StatisticsOnLinePeople_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_StatisticsOnLinePeople_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Req.adminfd)
  return adminfd_;
}
inline void Admin_StatisticsOnLinePeople_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Req.adminfd)
}

// optional bool fromweb = 2 [default = false];
inline bool Admin_StatisticsOnLinePeople_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_StatisticsOnLinePeople_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_StatisticsOnLinePeople_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_StatisticsOnLinePeople_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Req.fromweb)
  return fromweb_;
}
inline void Admin_StatisticsOnLinePeople_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Req.fromweb)
}

// optional int32 gid = 3 [default = 0];
inline bool Admin_StatisticsOnLinePeople_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_StatisticsOnLinePeople_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_StatisticsOnLinePeople_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_StatisticsOnLinePeople_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Req.gid)
  return gid_;
}
inline void Admin_StatisticsOnLinePeople_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Req.gid)
}

// -------------------------------------------------------------------

// Admin_StatisticsOnLinePeople_Rsp

// required int32 adminfd = 1;
inline bool Admin_StatisticsOnLinePeople_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_StatisticsOnLinePeople_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Rsp.adminfd)
}

// optional bool fromweb = 2 [default = false];
inline bool Admin_StatisticsOnLinePeople_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_StatisticsOnLinePeople_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Rsp.fromweb)
}

// required int32 succ = 3;
inline bool Admin_StatisticsOnLinePeople_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_StatisticsOnLinePeople_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Rsp.succ)
  return succ_;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Rsp.succ)
}

// optional int32 online_num = 4 [default = 0];
inline bool Admin_StatisticsOnLinePeople_Rsp::has_online_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_has_online_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_has_online_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_online_num() {
  online_num_ = 0;
  clear_has_online_num();
}
inline ::google::protobuf::int32 Admin_StatisticsOnLinePeople_Rsp::online_num() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Rsp.online_num)
  return online_num_;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_online_num(::google::protobuf::int32 value) {
  set_has_online_num();
  online_num_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Rsp.online_num)
}

// optional int32 gid = 5 [default = 0];
inline bool Admin_StatisticsOnLinePeople_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_StatisticsOnLinePeople_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_StatisticsOnLinePeople_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_StatisticsOnLinePeople_Rsp.gid)
  return gid_;
}
inline void Admin_StatisticsOnLinePeople_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_StatisticsOnLinePeople_Rsp.gid)
}

// -------------------------------------------------------------------

// Admin_KickPlayer_Req

// required int32 adminfd = 1;
inline bool Admin_KickPlayer_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_KickPlayer_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_KickPlayer_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_KickPlayer_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_KickPlayer_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Req.adminfd)
  return adminfd_;
}
inline void Admin_KickPlayer_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Req.adminfd)
}

// optional bool fromweb = 2 [default = false];
inline bool Admin_KickPlayer_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_KickPlayer_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_KickPlayer_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_KickPlayer_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_KickPlayer_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Req.fromweb)
  return fromweb_;
}
inline void Admin_KickPlayer_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Req.fromweb)
}

// optional int64 uid = 3 [default = 0];
inline bool Admin_KickPlayer_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_KickPlayer_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_KickPlayer_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_KickPlayer_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_KickPlayer_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Req.uid)
  return uid_;
}
inline void Admin_KickPlayer_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Req.uid)
}

// -------------------------------------------------------------------

// Admin_KickPlayer_Rsp

// required int32 adminfd = 1;
inline bool Admin_KickPlayer_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_KickPlayer_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_KickPlayer_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_KickPlayer_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_KickPlayer_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_KickPlayer_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Rsp.adminfd)
}

// optional bool fromweb = 2 [default = false];
inline bool Admin_KickPlayer_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_KickPlayer_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_KickPlayer_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_KickPlayer_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_KickPlayer_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_KickPlayer_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Rsp.fromweb)
}

// required int32 succ = 3;
inline bool Admin_KickPlayer_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_KickPlayer_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_KickPlayer_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_KickPlayer_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_KickPlayer_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Rsp.succ)
  return succ_;
}
inline void Admin_KickPlayer_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Rsp.succ)
}

// optional int64 uid = 4 [default = 0];
inline bool Admin_KickPlayer_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_KickPlayer_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_KickPlayer_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_KickPlayer_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_KickPlayer_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_KickPlayer_Rsp.uid)
  return uid_;
}
inline void Admin_KickPlayer_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_KickPlayer_Rsp.uid)
}

// -------------------------------------------------------------------

// Admin_STR_Req

// required int32 adminfd = 1;
inline bool Admin_STR_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_STR_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_STR_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_STR_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_STR_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Req.adminfd)
  return adminfd_;
}
inline void Admin_STR_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_STR_Req.adminfd)
}

// optional int64 uid = 3 [default = 0];
inline bool Admin_STR_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_STR_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_STR_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_STR_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_STR_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Req.uid)
  return uid_;
}
inline void Admin_STR_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_STR_Req.uid)
}

// optional string str = 4;
inline bool Admin_STR_Req::has_str() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_STR_Req::set_has_str() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_STR_Req::clear_has_str() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_STR_Req::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Admin_STR_Req::str() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Req.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Req::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_STR_Req.str)
}
inline void Admin_STR_Req::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_STR_Req.str)
}
inline void Admin_STR_Req::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_STR_Req.str)
}
inline ::std::string* Admin_STR_Req::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:Admin_STR_Req.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_STR_Req::release_str() {
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Req::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:Admin_STR_Req.str)
}

// optional string openid = 5;
inline bool Admin_STR_Req::has_openid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_STR_Req::set_has_openid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_STR_Req::clear_has_openid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_STR_Req::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Admin_STR_Req::openid() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Req.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Req::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_STR_Req.openid)
}
inline void Admin_STR_Req::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_STR_Req.openid)
}
inline void Admin_STR_Req::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_STR_Req.openid)
}
inline ::std::string* Admin_STR_Req::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Admin_STR_Req.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_STR_Req::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Req::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Admin_STR_Req.openid)
}

// -------------------------------------------------------------------

// Admin_STR_Rsp

// required int32 adminfd = 1;
inline bool Admin_STR_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_STR_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_STR_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_STR_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_STR_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_STR_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_STR_Rsp.adminfd)
}

// optional int64 uid = 2 [default = 0];
inline bool Admin_STR_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_STR_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_STR_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_STR_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_STR_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Rsp.uid)
  return uid_;
}
inline void Admin_STR_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_STR_Rsp.uid)
}

// required int32 succ = 3;
inline bool Admin_STR_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_STR_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_STR_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_STR_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_STR_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Rsp.succ)
  return succ_;
}
inline void Admin_STR_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_STR_Rsp.succ)
}

// optional string str = 4;
inline bool Admin_STR_Rsp::has_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_STR_Rsp::set_has_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_STR_Rsp::clear_has_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_STR_Rsp::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Admin_STR_Rsp::str() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Rsp.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Rsp::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_STR_Rsp.str)
}
inline void Admin_STR_Rsp::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_STR_Rsp.str)
}
inline void Admin_STR_Rsp::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_STR_Rsp.str)
}
inline ::std::string* Admin_STR_Rsp::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:Admin_STR_Rsp.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_STR_Rsp::release_str() {
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Rsp::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:Admin_STR_Rsp.str)
}

// optional string openid = 5;
inline bool Admin_STR_Rsp::has_openid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_STR_Rsp::set_has_openid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_STR_Rsp::clear_has_openid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_STR_Rsp::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Admin_STR_Rsp::openid() const {
  // @@protoc_insertion_point(field_get:Admin_STR_Rsp.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Rsp::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_STR_Rsp.openid)
}
inline void Admin_STR_Rsp::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_STR_Rsp.openid)
}
inline void Admin_STR_Rsp::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_STR_Rsp.openid)
}
inline ::std::string* Admin_STR_Rsp::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Admin_STR_Rsp.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_STR_Rsp::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_STR_Rsp::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Admin_STR_Rsp.openid)
}

// -------------------------------------------------------------------

// WebUnlock

// required int64 uid = 1;
inline bool WebUnlock::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebUnlock::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebUnlock::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebUnlock::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 WebUnlock::uid() const {
  // @@protoc_insertion_point(field_get:WebUnlock.uid)
  return uid_;
}
inline void WebUnlock::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WebUnlock.uid)
}

// required int32 type = 2;
inline bool WebUnlock::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebUnlock::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebUnlock::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebUnlock::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WebUnlock::type() const {
  // @@protoc_insertion_point(field_get:WebUnlock.type)
  return type_;
}
inline void WebUnlock::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:WebUnlock.type)
}

// required int32 balance = 3;
inline bool WebUnlock::has_balance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebUnlock::set_has_balance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebUnlock::clear_has_balance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebUnlock::clear_balance() {
  balance_ = 0;
  clear_has_balance();
}
inline ::google::protobuf::int32 WebUnlock::balance() const {
  // @@protoc_insertion_point(field_get:WebUnlock.balance)
  return balance_;
}
inline void WebUnlock::set_balance(::google::protobuf::int32 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:WebUnlock.balance)
}

// required int32 pos = 4;
inline bool WebUnlock::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebUnlock::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebUnlock::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebUnlock::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 WebUnlock::pos() const {
  // @@protoc_insertion_point(field_get:WebUnlock.pos)
  return pos_;
}
inline void WebUnlock::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:WebUnlock.pos)
}

// required string sid = 5;
inline bool WebUnlock::has_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebUnlock::set_has_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebUnlock::clear_has_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebUnlock::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebUnlock::sid() const {
  // @@protoc_insertion_point(field_get:WebUnlock.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebUnlock::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebUnlock.sid)
}
inline void WebUnlock::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebUnlock.sid)
}
inline void WebUnlock::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebUnlock.sid)
}
inline ::std::string* WebUnlock::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebUnlock.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebUnlock::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebUnlock::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebUnlock.sid)
}

// optional bool succ = 7 [default = false];
inline bool WebUnlock::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebUnlock::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebUnlock::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebUnlock::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool WebUnlock::succ() const {
  // @@protoc_insertion_point(field_get:WebUnlock.succ)
  return succ_;
}
inline void WebUnlock::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebUnlock.succ)
}

// optional string infodetail = 8 [default = ""];
inline bool WebUnlock::has_infodetail() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebUnlock::set_has_infodetail() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebUnlock::clear_has_infodetail() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebUnlock::clear_infodetail() {
  infodetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infodetail();
}
inline const ::std::string& WebUnlock::infodetail() const {
  // @@protoc_insertion_point(field_get:WebUnlock.infodetail)
  return infodetail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebUnlock::set_infodetail(const ::std::string& value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebUnlock.infodetail)
}
inline void WebUnlock::set_infodetail(const char* value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebUnlock.infodetail)
}
inline void WebUnlock::set_infodetail(const char* value, size_t size) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebUnlock.infodetail)
}
inline ::std::string* WebUnlock::mutable_infodetail() {
  set_has_infodetail();
  // @@protoc_insertion_point(field_mutable:WebUnlock.infodetail)
  return infodetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebUnlock::release_infodetail() {
  clear_has_infodetail();
  return infodetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebUnlock::set_allocated_infodetail(::std::string* infodetail) {
  if (infodetail != NULL) {
    set_has_infodetail();
  } else {
    clear_has_infodetail();
  }
  infodetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infodetail);
  // @@protoc_insertion_point(field_set_allocated:WebUnlock.infodetail)
}

// required int32 fd = 9;
inline bool WebUnlock::has_fd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebUnlock::set_has_fd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebUnlock::clear_has_fd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebUnlock::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebUnlock::fd() const {
  // @@protoc_insertion_point(field_get:WebUnlock.fd)
  return fd_;
}
inline void WebUnlock::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebUnlock.fd)
}

// required string key = 10;
inline bool WebUnlock::has_key() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebUnlock::set_has_key() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebUnlock::clear_has_key() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebUnlock::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& WebUnlock::key() const {
  // @@protoc_insertion_point(field_get:WebUnlock.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebUnlock::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebUnlock.key)
}
inline void WebUnlock::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebUnlock.key)
}
inline void WebUnlock::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebUnlock.key)
}
inline ::std::string* WebUnlock::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:WebUnlock.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebUnlock::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebUnlock::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:WebUnlock.key)
}

// -------------------------------------------------------------------

// WebAddEmployee

// required int64 uid = 1;
inline bool WebAddEmployee::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebAddEmployee::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebAddEmployee::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebAddEmployee::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 WebAddEmployee::uid() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.uid)
  return uid_;
}
inline void WebAddEmployee::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.uid)
}

// required int32 type = 2;
inline bool WebAddEmployee::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebAddEmployee::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebAddEmployee::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebAddEmployee::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WebAddEmployee::type() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.type)
  return type_;
}
inline void WebAddEmployee::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.type)
}

// required int32 balance = 3;
inline bool WebAddEmployee::has_balance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebAddEmployee::set_has_balance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebAddEmployee::clear_has_balance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebAddEmployee::clear_balance() {
  balance_ = 0;
  clear_has_balance();
}
inline ::google::protobuf::int32 WebAddEmployee::balance() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.balance)
  return balance_;
}
inline void WebAddEmployee::set_balance(::google::protobuf::int32 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.balance)
}

// required int32 hiretype = 4;
inline bool WebAddEmployee::has_hiretype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebAddEmployee::set_has_hiretype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebAddEmployee::clear_has_hiretype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebAddEmployee::clear_hiretype() {
  hiretype_ = 0;
  clear_has_hiretype();
}
inline ::google::protobuf::int32 WebAddEmployee::hiretype() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.hiretype)
  return hiretype_;
}
inline void WebAddEmployee::set_hiretype(::google::protobuf::int32 value) {
  set_has_hiretype();
  hiretype_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.hiretype)
}

// required int32 index = 5;
inline bool WebAddEmployee::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebAddEmployee::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebAddEmployee::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebAddEmployee::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 WebAddEmployee::index() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.index)
  return index_;
}
inline void WebAddEmployee::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.index)
}

// required string sid = 6;
inline bool WebAddEmployee::has_sid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebAddEmployee::set_has_sid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebAddEmployee::clear_has_sid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebAddEmployee::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebAddEmployee::sid() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAddEmployee::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebAddEmployee.sid)
}
inline void WebAddEmployee::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebAddEmployee.sid)
}
inline void WebAddEmployee::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebAddEmployee.sid)
}
inline ::std::string* WebAddEmployee::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebAddEmployee.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebAddEmployee::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAddEmployee::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebAddEmployee.sid)
}

// optional bool succ = 7 [default = false];
inline bool WebAddEmployee::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebAddEmployee::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebAddEmployee::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebAddEmployee::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool WebAddEmployee::succ() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.succ)
  return succ_;
}
inline void WebAddEmployee::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.succ)
}

// optional string infodetail = 8 [default = ""];
inline bool WebAddEmployee::has_infodetail() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebAddEmployee::set_has_infodetail() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebAddEmployee::clear_has_infodetail() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebAddEmployee::clear_infodetail() {
  infodetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infodetail();
}
inline const ::std::string& WebAddEmployee::infodetail() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.infodetail)
  return infodetail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAddEmployee::set_infodetail(const ::std::string& value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebAddEmployee.infodetail)
}
inline void WebAddEmployee::set_infodetail(const char* value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebAddEmployee.infodetail)
}
inline void WebAddEmployee::set_infodetail(const char* value, size_t size) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebAddEmployee.infodetail)
}
inline ::std::string* WebAddEmployee::mutable_infodetail() {
  set_has_infodetail();
  // @@protoc_insertion_point(field_mutable:WebAddEmployee.infodetail)
  return infodetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebAddEmployee::release_infodetail() {
  clear_has_infodetail();
  return infodetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAddEmployee::set_allocated_infodetail(::std::string* infodetail) {
  if (infodetail != NULL) {
    set_has_infodetail();
  } else {
    clear_has_infodetail();
  }
  infodetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infodetail);
  // @@protoc_insertion_point(field_set_allocated:WebAddEmployee.infodetail)
}

// required int32 fd = 9;
inline bool WebAddEmployee::has_fd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebAddEmployee::set_has_fd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebAddEmployee::clear_has_fd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebAddEmployee::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebAddEmployee::fd() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.fd)
  return fd_;
}
inline void WebAddEmployee::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebAddEmployee.fd)
}

// required string key = 10;
inline bool WebAddEmployee::has_key() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WebAddEmployee::set_has_key() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WebAddEmployee::clear_has_key() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WebAddEmployee::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& WebAddEmployee::key() const {
  // @@protoc_insertion_point(field_get:WebAddEmployee.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAddEmployee::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebAddEmployee.key)
}
inline void WebAddEmployee::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebAddEmployee.key)
}
inline void WebAddEmployee::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebAddEmployee.key)
}
inline ::std::string* WebAddEmployee::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:WebAddEmployee.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebAddEmployee::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebAddEmployee::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:WebAddEmployee.key)
}

// -------------------------------------------------------------------

// WebBuyDetail

// required int64 shopid = 1;
inline bool WebBuyDetail::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebBuyDetail::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebBuyDetail::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebBuyDetail::clear_shopid() {
  shopid_ = GOOGLE_LONGLONG(0);
  clear_has_shopid();
}
inline ::google::protobuf::int64 WebBuyDetail::shopid() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.shopid)
  return shopid_;
}
inline void WebBuyDetail::set_shopid(::google::protobuf::int64 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.shopid)
}

// required int32 count = 2;
inline bool WebBuyDetail::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebBuyDetail::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebBuyDetail::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebBuyDetail::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 WebBuyDetail::count() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.count)
  return count_;
}
inline void WebBuyDetail::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.count)
}

// required int32 indate = 3;
inline bool WebBuyDetail::has_indate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebBuyDetail::set_has_indate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebBuyDetail::clear_has_indate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebBuyDetail::clear_indate() {
  indate_ = 0;
  clear_has_indate();
}
inline ::google::protobuf::int32 WebBuyDetail::indate() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.indate)
  return indate_;
}
inline void WebBuyDetail::set_indate(::google::protobuf::int32 value) {
  set_has_indate();
  indate_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.indate)
}

// required int32 price = 4;
inline bool WebBuyDetail::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebBuyDetail::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebBuyDetail::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebBuyDetail::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 WebBuyDetail::price() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.price)
  return price_;
}
inline void WebBuyDetail::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.price)
}

// optional int32 posx = 5;
inline bool WebBuyDetail::has_posx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebBuyDetail::set_has_posx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebBuyDetail::clear_has_posx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebBuyDetail::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 WebBuyDetail::posx() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.posx)
  return posx_;
}
inline void WebBuyDetail::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.posx)
}

// optional int32 posy = 6;
inline bool WebBuyDetail::has_posy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebBuyDetail::set_has_posy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebBuyDetail::clear_has_posy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebBuyDetail::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline ::google::protobuf::int32 WebBuyDetail::posy() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.posy)
  return posy_;
}
inline void WebBuyDetail::set_posy(::google::protobuf::int32 value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.posy)
}

// optional int32 direction = 7;
inline bool WebBuyDetail::has_direction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebBuyDetail::set_has_direction() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebBuyDetail::clear_has_direction() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebBuyDetail::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 WebBuyDetail::direction() const {
  // @@protoc_insertion_point(field_get:WebBuyDetail.direction)
  return direction_;
}
inline void WebBuyDetail::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:WebBuyDetail.direction)
}

// -------------------------------------------------------------------

// WebBuy

// required int64 uid = 1;
inline bool WebBuy::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebBuy::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebBuy::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebBuy::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 WebBuy::uid() const {
  // @@protoc_insertion_point(field_get:WebBuy.uid)
  return uid_;
}
inline void WebBuy::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.uid)
}

// required int32 leftcoin = 2;
inline bool WebBuy::has_leftcoin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebBuy::set_has_leftcoin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebBuy::clear_has_leftcoin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebBuy::clear_leftcoin() {
  leftcoin_ = 0;
  clear_has_leftcoin();
}
inline ::google::protobuf::int32 WebBuy::leftcoin() const {
  // @@protoc_insertion_point(field_get:WebBuy.leftcoin)
  return leftcoin_;
}
inline void WebBuy::set_leftcoin(::google::protobuf::int32 value) {
  set_has_leftcoin();
  leftcoin_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.leftcoin)
}

// required int32 bandcoincost = 3;
inline bool WebBuy::has_bandcoincost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebBuy::set_has_bandcoincost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebBuy::clear_has_bandcoincost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebBuy::clear_bandcoincost() {
  bandcoincost_ = 0;
  clear_has_bandcoincost();
}
inline ::google::protobuf::int32 WebBuy::bandcoincost() const {
  // @@protoc_insertion_point(field_get:WebBuy.bandcoincost)
  return bandcoincost_;
}
inline void WebBuy::set_bandcoincost(::google::protobuf::int32 value) {
  set_has_bandcoincost();
  bandcoincost_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.bandcoincost)
}

// repeated .WebBuyDetail items = 4;
inline int WebBuy::items_size() const {
  return items_.size();
}
inline void WebBuy::clear_items() {
  items_.Clear();
}
inline const ::WebBuyDetail& WebBuy::items(int index) const {
  // @@protoc_insertion_point(field_get:WebBuy.items)
  return items_.Get(index);
}
inline ::WebBuyDetail* WebBuy::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:WebBuy.items)
  return items_.Mutable(index);
}
inline ::WebBuyDetail* WebBuy::add_items() {
  // @@protoc_insertion_point(field_add:WebBuy.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WebBuyDetail >&
WebBuy::items() const {
  // @@protoc_insertion_point(field_list:WebBuy.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::WebBuyDetail >*
WebBuy::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:WebBuy.items)
  return &items_;
}

// required string sid = 5;
inline bool WebBuy::has_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebBuy::set_has_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebBuy::clear_has_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebBuy::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebBuy::sid() const {
  // @@protoc_insertion_point(field_get:WebBuy.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy.sid)
}
inline void WebBuy::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy.sid)
}
inline void WebBuy::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy.sid)
}
inline ::std::string* WebBuy::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebBuy.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebBuy.sid)
}

// optional bool succ = 6 [default = false];
inline bool WebBuy::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebBuy::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebBuy::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebBuy::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool WebBuy::succ() const {
  // @@protoc_insertion_point(field_get:WebBuy.succ)
  return succ_;
}
inline void WebBuy::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.succ)
}

// optional string infodetail = 7 [default = ""];
inline bool WebBuy::has_infodetail() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebBuy::set_has_infodetail() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebBuy::clear_has_infodetail() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebBuy::clear_infodetail() {
  infodetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infodetail();
}
inline const ::std::string& WebBuy::infodetail() const {
  // @@protoc_insertion_point(field_get:WebBuy.infodetail)
  return infodetail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_infodetail(const ::std::string& value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy.infodetail)
}
inline void WebBuy::set_infodetail(const char* value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy.infodetail)
}
inline void WebBuy::set_infodetail(const char* value, size_t size) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy.infodetail)
}
inline ::std::string* WebBuy::mutable_infodetail() {
  set_has_infodetail();
  // @@protoc_insertion_point(field_mutable:WebBuy.infodetail)
  return infodetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy::release_infodetail() {
  clear_has_infodetail();
  return infodetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_allocated_infodetail(::std::string* infodetail) {
  if (infodetail != NULL) {
    set_has_infodetail();
  } else {
    clear_has_infodetail();
  }
  infodetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infodetail);
  // @@protoc_insertion_point(field_set_allocated:WebBuy.infodetail)
}

// required int32 fd = 8;
inline bool WebBuy::has_fd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebBuy::set_has_fd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebBuy::clear_has_fd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebBuy::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebBuy::fd() const {
  // @@protoc_insertion_point(field_get:WebBuy.fd)
  return fd_;
}
inline void WebBuy::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.fd)
}

// required string key = 9;
inline bool WebBuy::has_key() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebBuy::set_has_key() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebBuy::clear_has_key() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebBuy::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& WebBuy::key() const {
  // @@protoc_insertion_point(field_get:WebBuy.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy.key)
}
inline void WebBuy::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy.key)
}
inline void WebBuy::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy.key)
}
inline ::std::string* WebBuy::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:WebBuy.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:WebBuy.key)
}

// optional bool directgive = 10 [default = false];
inline bool WebBuy::has_directgive() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WebBuy::set_has_directgive() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WebBuy::clear_has_directgive() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WebBuy::clear_directgive() {
  directgive_ = false;
  clear_has_directgive();
}
inline bool WebBuy::directgive() const {
  // @@protoc_insertion_point(field_get:WebBuy.directgive)
  return directgive_;
}
inline void WebBuy::set_directgive(bool value) {
  set_has_directgive();
  directgive_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.directgive)
}

// optional bool limited = 11 [default = false];
inline bool WebBuy::has_limited() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WebBuy::set_has_limited() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WebBuy::clear_has_limited() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WebBuy::clear_limited() {
  limited_ = false;
  clear_has_limited();
}
inline bool WebBuy::limited() const {
  // @@protoc_insertion_point(field_get:WebBuy.limited)
  return limited_;
}
inline void WebBuy::set_limited(bool value) {
  set_has_limited();
  limited_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.limited)
}

// optional string openid = 12 [default = ""];
inline bool WebBuy::has_openid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WebBuy::set_has_openid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WebBuy::clear_has_openid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WebBuy::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& WebBuy::openid() const {
  // @@protoc_insertion_point(field_get:WebBuy.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy.openid)
}
inline void WebBuy::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy.openid)
}
inline void WebBuy::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy.openid)
}
inline ::std::string* WebBuy::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:WebBuy.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:WebBuy.openid)
}

// optional bool use_openid = 13 [default = false];
inline bool WebBuy::has_use_openid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WebBuy::set_has_use_openid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WebBuy::clear_has_use_openid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WebBuy::clear_use_openid() {
  use_openid_ = false;
  clear_has_use_openid();
}
inline bool WebBuy::use_openid() const {
  // @@protoc_insertion_point(field_get:WebBuy.use_openid)
  return use_openid_;
}
inline void WebBuy::set_use_openid(bool value) {
  set_has_use_openid();
  use_openid_ = value;
  // @@protoc_insertion_point(field_set:WebBuy.use_openid)
}

// -------------------------------------------------------------------

// WebBuy3

// required int64 uid = 1;
inline bool WebBuy3::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebBuy3::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebBuy3::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebBuy3::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 WebBuy3::uid() const {
  // @@protoc_insertion_point(field_get:WebBuy3.uid)
  return uid_;
}
inline void WebBuy3::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WebBuy3.uid)
}

// required int32 type = 2;
inline bool WebBuy3::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebBuy3::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebBuy3::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebBuy3::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WebBuy3::type() const {
  // @@protoc_insertion_point(field_get:WebBuy3.type)
  return type_;
}
inline void WebBuy3::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:WebBuy3.type)
}

// required string valueA = 3;
inline bool WebBuy3::has_valuea() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebBuy3::set_has_valuea() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebBuy3::clear_has_valuea() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebBuy3::clear_valuea() {
  valuea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valuea();
}
inline const ::std::string& WebBuy3::valuea() const {
  // @@protoc_insertion_point(field_get:WebBuy3.valueA)
  return valuea_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy3::set_valuea(const ::std::string& value) {
  set_has_valuea();
  valuea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy3.valueA)
}
inline void WebBuy3::set_valuea(const char* value) {
  set_has_valuea();
  valuea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy3.valueA)
}
inline void WebBuy3::set_valuea(const char* value, size_t size) {
  set_has_valuea();
  valuea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy3.valueA)
}
inline ::std::string* WebBuy3::mutable_valuea() {
  set_has_valuea();
  // @@protoc_insertion_point(field_mutable:WebBuy3.valueA)
  return valuea_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy3::release_valuea() {
  clear_has_valuea();
  return valuea_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy3::set_allocated_valuea(::std::string* valuea) {
  if (valuea != NULL) {
    set_has_valuea();
  } else {
    clear_has_valuea();
  }
  valuea_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valuea);
  // @@protoc_insertion_point(field_set_allocated:WebBuy3.valueA)
}

// required string valueB = 4;
inline bool WebBuy3::has_valueb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebBuy3::set_has_valueb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebBuy3::clear_has_valueb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebBuy3::clear_valueb() {
  valueb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valueb();
}
inline const ::std::string& WebBuy3::valueb() const {
  // @@protoc_insertion_point(field_get:WebBuy3.valueB)
  return valueb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy3::set_valueb(const ::std::string& value) {
  set_has_valueb();
  valueb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy3.valueB)
}
inline void WebBuy3::set_valueb(const char* value) {
  set_has_valueb();
  valueb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy3.valueB)
}
inline void WebBuy3::set_valueb(const char* value, size_t size) {
  set_has_valueb();
  valueb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy3.valueB)
}
inline ::std::string* WebBuy3::mutable_valueb() {
  set_has_valueb();
  // @@protoc_insertion_point(field_mutable:WebBuy3.valueB)
  return valueb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy3::release_valueb() {
  clear_has_valueb();
  return valueb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy3::set_allocated_valueb(::std::string* valueb) {
  if (valueb != NULL) {
    set_has_valueb();
  } else {
    clear_has_valueb();
  }
  valueb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valueb);
  // @@protoc_insertion_point(field_set_allocated:WebBuy3.valueB)
}

// required string sid = 5;
inline bool WebBuy3::has_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebBuy3::set_has_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebBuy3::clear_has_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebBuy3::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebBuy3::sid() const {
  // @@protoc_insertion_point(field_get:WebBuy3.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy3::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuy3.sid)
}
inline void WebBuy3::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuy3.sid)
}
inline void WebBuy3::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuy3.sid)
}
inline ::std::string* WebBuy3::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebBuy3.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuy3::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuy3::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebBuy3.sid)
}

// required int32 fd = 6;
inline bool WebBuy3::has_fd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebBuy3::set_has_fd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebBuy3::clear_has_fd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebBuy3::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebBuy3::fd() const {
  // @@protoc_insertion_point(field_get:WebBuy3.fd)
  return fd_;
}
inline void WebBuy3::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebBuy3.fd)
}

// optional int32 succ = 7;
inline bool WebBuy3::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebBuy3::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebBuy3::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebBuy3::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 WebBuy3::succ() const {
  // @@protoc_insertion_point(field_get:WebBuy3.succ)
  return succ_;
}
inline void WebBuy3::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebBuy3.succ)
}

// -------------------------------------------------------------------

// WebLengthenIndateDetail

// required int64 shopid = 1;
inline bool WebLengthenIndateDetail::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebLengthenIndateDetail::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebLengthenIndateDetail::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebLengthenIndateDetail::clear_shopid() {
  shopid_ = GOOGLE_LONGLONG(0);
  clear_has_shopid();
}
inline ::google::protobuf::int64 WebLengthenIndateDetail::shopid() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndateDetail.shopid)
  return shopid_;
}
inline void WebLengthenIndateDetail::set_shopid(::google::protobuf::int64 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndateDetail.shopid)
}

// required int32 bagpos = 2;
inline bool WebLengthenIndateDetail::has_bagpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebLengthenIndateDetail::set_has_bagpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebLengthenIndateDetail::clear_has_bagpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebLengthenIndateDetail::clear_bagpos() {
  bagpos_ = 0;
  clear_has_bagpos();
}
inline ::google::protobuf::int32 WebLengthenIndateDetail::bagpos() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndateDetail.bagpos)
  return bagpos_;
}
inline void WebLengthenIndateDetail::set_bagpos(::google::protobuf::int32 value) {
  set_has_bagpos();
  bagpos_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndateDetail.bagpos)
}

// required string id = 3;
inline bool WebLengthenIndateDetail::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebLengthenIndateDetail::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebLengthenIndateDetail::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebLengthenIndateDetail::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& WebLengthenIndateDetail::id() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndateDetail.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebLengthenIndateDetail::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebLengthenIndateDetail.id)
}
inline void WebLengthenIndateDetail::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebLengthenIndateDetail.id)
}
inline void WebLengthenIndateDetail::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebLengthenIndateDetail.id)
}
inline ::std::string* WebLengthenIndateDetail::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:WebLengthenIndateDetail.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebLengthenIndateDetail::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebLengthenIndateDetail::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:WebLengthenIndateDetail.id)
}

// required int32 indate = 4;
inline bool WebLengthenIndateDetail::has_indate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebLengthenIndateDetail::set_has_indate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebLengthenIndateDetail::clear_has_indate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebLengthenIndateDetail::clear_indate() {
  indate_ = 0;
  clear_has_indate();
}
inline ::google::protobuf::int32 WebLengthenIndateDetail::indate() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndateDetail.indate)
  return indate_;
}
inline void WebLengthenIndateDetail::set_indate(::google::protobuf::int32 value) {
  set_has_indate();
  indate_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndateDetail.indate)
}

// -------------------------------------------------------------------

// WebLengthenIndate

// required int64 uid = 1;
inline bool WebLengthenIndate::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebLengthenIndate::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebLengthenIndate::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebLengthenIndate::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 WebLengthenIndate::uid() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.uid)
  return uid_;
}
inline void WebLengthenIndate::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndate.uid)
}

// required int32 leftcoin = 2;
inline bool WebLengthenIndate::has_leftcoin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebLengthenIndate::set_has_leftcoin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebLengthenIndate::clear_has_leftcoin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebLengthenIndate::clear_leftcoin() {
  leftcoin_ = 0;
  clear_has_leftcoin();
}
inline ::google::protobuf::int32 WebLengthenIndate::leftcoin() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.leftcoin)
  return leftcoin_;
}
inline void WebLengthenIndate::set_leftcoin(::google::protobuf::int32 value) {
  set_has_leftcoin();
  leftcoin_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndate.leftcoin)
}

// required int32 bandcoincost = 3;
inline bool WebLengthenIndate::has_bandcoincost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebLengthenIndate::set_has_bandcoincost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebLengthenIndate::clear_has_bandcoincost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebLengthenIndate::clear_bandcoincost() {
  bandcoincost_ = 0;
  clear_has_bandcoincost();
}
inline ::google::protobuf::int32 WebLengthenIndate::bandcoincost() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.bandcoincost)
  return bandcoincost_;
}
inline void WebLengthenIndate::set_bandcoincost(::google::protobuf::int32 value) {
  set_has_bandcoincost();
  bandcoincost_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndate.bandcoincost)
}

// repeated .WebLengthenIndateDetail items = 4;
inline int WebLengthenIndate::items_size() const {
  return items_.size();
}
inline void WebLengthenIndate::clear_items() {
  items_.Clear();
}
inline const ::WebLengthenIndateDetail& WebLengthenIndate::items(int index) const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.items)
  return items_.Get(index);
}
inline ::WebLengthenIndateDetail* WebLengthenIndate::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:WebLengthenIndate.items)
  return items_.Mutable(index);
}
inline ::WebLengthenIndateDetail* WebLengthenIndate::add_items() {
  // @@protoc_insertion_point(field_add:WebLengthenIndate.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WebLengthenIndateDetail >&
WebLengthenIndate::items() const {
  // @@protoc_insertion_point(field_list:WebLengthenIndate.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::WebLengthenIndateDetail >*
WebLengthenIndate::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:WebLengthenIndate.items)
  return &items_;
}

// required string sid = 5;
inline bool WebLengthenIndate::has_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebLengthenIndate::set_has_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebLengthenIndate::clear_has_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebLengthenIndate::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebLengthenIndate::sid() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebLengthenIndate::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebLengthenIndate.sid)
}
inline void WebLengthenIndate::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebLengthenIndate.sid)
}
inline void WebLengthenIndate::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebLengthenIndate.sid)
}
inline ::std::string* WebLengthenIndate::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebLengthenIndate.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebLengthenIndate::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebLengthenIndate::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebLengthenIndate.sid)
}

// optional bool succ = 6 [default = false];
inline bool WebLengthenIndate::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebLengthenIndate::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebLengthenIndate::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebLengthenIndate::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool WebLengthenIndate::succ() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.succ)
  return succ_;
}
inline void WebLengthenIndate::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndate.succ)
}

// optional string infodetail = 7 [default = ""];
inline bool WebLengthenIndate::has_infodetail() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebLengthenIndate::set_has_infodetail() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebLengthenIndate::clear_has_infodetail() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebLengthenIndate::clear_infodetail() {
  infodetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infodetail();
}
inline const ::std::string& WebLengthenIndate::infodetail() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.infodetail)
  return infodetail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebLengthenIndate::set_infodetail(const ::std::string& value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebLengthenIndate.infodetail)
}
inline void WebLengthenIndate::set_infodetail(const char* value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebLengthenIndate.infodetail)
}
inline void WebLengthenIndate::set_infodetail(const char* value, size_t size) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebLengthenIndate.infodetail)
}
inline ::std::string* WebLengthenIndate::mutable_infodetail() {
  set_has_infodetail();
  // @@protoc_insertion_point(field_mutable:WebLengthenIndate.infodetail)
  return infodetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebLengthenIndate::release_infodetail() {
  clear_has_infodetail();
  return infodetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebLengthenIndate::set_allocated_infodetail(::std::string* infodetail) {
  if (infodetail != NULL) {
    set_has_infodetail();
  } else {
    clear_has_infodetail();
  }
  infodetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infodetail);
  // @@protoc_insertion_point(field_set_allocated:WebLengthenIndate.infodetail)
}

// required int32 fd = 8;
inline bool WebLengthenIndate::has_fd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebLengthenIndate::set_has_fd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebLengthenIndate::clear_has_fd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebLengthenIndate::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebLengthenIndate::fd() const {
  // @@protoc_insertion_point(field_get:WebLengthenIndate.fd)
  return fd_;
}
inline void WebLengthenIndate::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebLengthenIndate.fd)
}

// -------------------------------------------------------------------

// WebCheckBandCoin

// required string openid = 1;
inline bool WebCheckBandCoin::has_openid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebCheckBandCoin::set_has_openid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebCheckBandCoin::clear_has_openid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebCheckBandCoin::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& WebCheckBandCoin::openid() const {
  // @@protoc_insertion_point(field_get:WebCheckBandCoin.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebCheckBandCoin::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebCheckBandCoin.openid)
}
inline void WebCheckBandCoin::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebCheckBandCoin.openid)
}
inline void WebCheckBandCoin::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebCheckBandCoin.openid)
}
inline ::std::string* WebCheckBandCoin::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:WebCheckBandCoin.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebCheckBandCoin::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebCheckBandCoin::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:WebCheckBandCoin.openid)
}

// optional int32 value = 2 [default = 0];
inline bool WebCheckBandCoin::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebCheckBandCoin::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebCheckBandCoin::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebCheckBandCoin::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 WebCheckBandCoin::value() const {
  // @@protoc_insertion_point(field_get:WebCheckBandCoin.value)
  return value_;
}
inline void WebCheckBandCoin::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:WebCheckBandCoin.value)
}

// required int32 fd = 3;
inline bool WebCheckBandCoin::has_fd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebCheckBandCoin::set_has_fd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebCheckBandCoin::clear_has_fd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebCheckBandCoin::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebCheckBandCoin::fd() const {
  // @@protoc_insertion_point(field_get:WebCheckBandCoin.fd)
  return fd_;
}
inline void WebCheckBandCoin::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebCheckBandCoin.fd)
}

// required string sid = 4;
inline bool WebCheckBandCoin::has_sid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebCheckBandCoin::set_has_sid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebCheckBandCoin::clear_has_sid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebCheckBandCoin::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebCheckBandCoin::sid() const {
  // @@protoc_insertion_point(field_get:WebCheckBandCoin.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebCheckBandCoin::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebCheckBandCoin.sid)
}
inline void WebCheckBandCoin::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebCheckBandCoin.sid)
}
inline void WebCheckBandCoin::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebCheckBandCoin.sid)
}
inline ::std::string* WebCheckBandCoin::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebCheckBandCoin.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebCheckBandCoin::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebCheckBandCoin::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebCheckBandCoin.sid)
}

// -------------------------------------------------------------------

// WebBuyCfm

// required int64 uid = 1;
inline bool WebBuyCfm::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebBuyCfm::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebBuyCfm::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebBuyCfm::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 WebBuyCfm::uid() const {
  // @@protoc_insertion_point(field_get:WebBuyCfm.uid)
  return uid_;
}
inline void WebBuyCfm::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WebBuyCfm.uid)
}

// required string sid = 5;
inline bool WebBuyCfm::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebBuyCfm::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebBuyCfm::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebBuyCfm::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& WebBuyCfm::sid() const {
  // @@protoc_insertion_point(field_get:WebBuyCfm.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuyCfm::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuyCfm.sid)
}
inline void WebBuyCfm::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuyCfm.sid)
}
inline void WebBuyCfm::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuyCfm.sid)
}
inline ::std::string* WebBuyCfm::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:WebBuyCfm.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuyCfm::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuyCfm::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:WebBuyCfm.sid)
}

// optional bool succ = 6 [default = false];
inline bool WebBuyCfm::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebBuyCfm::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebBuyCfm::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebBuyCfm::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool WebBuyCfm::succ() const {
  // @@protoc_insertion_point(field_get:WebBuyCfm.succ)
  return succ_;
}
inline void WebBuyCfm::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:WebBuyCfm.succ)
}

// optional string infodetail = 7 [default = ""];
inline bool WebBuyCfm::has_infodetail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebBuyCfm::set_has_infodetail() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebBuyCfm::clear_has_infodetail() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebBuyCfm::clear_infodetail() {
  infodetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_infodetail();
}
inline const ::std::string& WebBuyCfm::infodetail() const {
  // @@protoc_insertion_point(field_get:WebBuyCfm.infodetail)
  return infodetail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuyCfm::set_infodetail(const ::std::string& value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuyCfm.infodetail)
}
inline void WebBuyCfm::set_infodetail(const char* value) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuyCfm.infodetail)
}
inline void WebBuyCfm::set_infodetail(const char* value, size_t size) {
  set_has_infodetail();
  infodetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuyCfm.infodetail)
}
inline ::std::string* WebBuyCfm::mutable_infodetail() {
  set_has_infodetail();
  // @@protoc_insertion_point(field_mutable:WebBuyCfm.infodetail)
  return infodetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuyCfm::release_infodetail() {
  clear_has_infodetail();
  return infodetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuyCfm::set_allocated_infodetail(::std::string* infodetail) {
  if (infodetail != NULL) {
    set_has_infodetail();
  } else {
    clear_has_infodetail();
  }
  infodetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), infodetail);
  // @@protoc_insertion_point(field_set_allocated:WebBuyCfm.infodetail)
}

// required int32 fd = 8;
inline bool WebBuyCfm::has_fd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebBuyCfm::set_has_fd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebBuyCfm::clear_has_fd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebBuyCfm::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 WebBuyCfm::fd() const {
  // @@protoc_insertion_point(field_get:WebBuyCfm.fd)
  return fd_;
}
inline void WebBuyCfm::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:WebBuyCfm.fd)
}

// required string key = 9;
inline bool WebBuyCfm::has_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebBuyCfm::set_has_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebBuyCfm::clear_has_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebBuyCfm::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& WebBuyCfm::key() const {
  // @@protoc_insertion_point(field_get:WebBuyCfm.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuyCfm::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebBuyCfm.key)
}
inline void WebBuyCfm::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebBuyCfm.key)
}
inline void WebBuyCfm::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebBuyCfm.key)
}
inline ::std::string* WebBuyCfm::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:WebBuyCfm.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebBuyCfm::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebBuyCfm::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:WebBuyCfm.key)
}

// -------------------------------------------------------------------

// Admin_BanChat_Req

// required int64 uid = 1;
inline bool Admin_BanChat_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_BanChat_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_BanChat_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_BanChat_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_BanChat_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.uid)
  return uid_;
}
inline void Admin_BanChat_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.uid)
}

// required bool isban = 2;
inline bool Admin_BanChat_Req::has_isban() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_BanChat_Req::set_has_isban() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_BanChat_Req::clear_has_isban() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_BanChat_Req::clear_isban() {
  isban_ = false;
  clear_has_isban();
}
inline bool Admin_BanChat_Req::isban() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.isban)
  return isban_;
}
inline void Admin_BanChat_Req::set_isban(bool value) {
  set_has_isban();
  isban_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.isban)
}

// required int32 time = 3;
inline bool Admin_BanChat_Req::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_BanChat_Req::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_BanChat_Req::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_BanChat_Req::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Admin_BanChat_Req::time() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.time)
  return time_;
}
inline void Admin_BanChat_Req::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.time)
}

// required int32 gid = 4;
inline bool Admin_BanChat_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_BanChat_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_BanChat_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_BanChat_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_BanChat_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.gid)
  return gid_;
}
inline void Admin_BanChat_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.gid)
}

// required int32 adminfd = 5;
inline bool Admin_BanChat_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_BanChat_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_BanChat_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_BanChat_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_BanChat_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.adminfd)
  return adminfd_;
}
inline void Admin_BanChat_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.adminfd)
}

// optional string openid = 6;
inline bool Admin_BanChat_Req::has_openid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_BanChat_Req::set_has_openid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_BanChat_Req::clear_has_openid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_BanChat_Req::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Admin_BanChat_Req::openid() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanChat_Req::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.openid)
}
inline void Admin_BanChat_Req::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_BanChat_Req.openid)
}
inline void Admin_BanChat_Req::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_BanChat_Req.openid)
}
inline ::std::string* Admin_BanChat_Req::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Admin_BanChat_Req.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_BanChat_Req::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanChat_Req::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Admin_BanChat_Req.openid)
}

// optional bool fromweb = 7 [default = false];
inline bool Admin_BanChat_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_BanChat_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_BanChat_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_BanChat_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_BanChat_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Req.fromweb)
  return fromweb_;
}
inline void Admin_BanChat_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_BanChat_Rsp

// required int64 uid = 1;
inline bool Admin_BanChat_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_BanChat_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_BanChat_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_BanChat_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.uid)
  return uid_;
}
inline void Admin_BanChat_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.uid)
}

// required bool isban = 2;
inline bool Admin_BanChat_Rsp::has_isban() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_isban() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_BanChat_Rsp::clear_has_isban() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_BanChat_Rsp::clear_isban() {
  isban_ = false;
  clear_has_isban();
}
inline bool Admin_BanChat_Rsp::isban() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.isban)
  return isban_;
}
inline void Admin_BanChat_Rsp::set_isban(bool value) {
  set_has_isban();
  isban_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.isban)
}

// required int32 time = 3;
inline bool Admin_BanChat_Rsp::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_BanChat_Rsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_BanChat_Rsp::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Admin_BanChat_Rsp::time() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.time)
  return time_;
}
inline void Admin_BanChat_Rsp::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.time)
}

// required int32 gid = 4;
inline bool Admin_BanChat_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_BanChat_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_BanChat_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_BanChat_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.gid)
  return gid_;
}
inline void Admin_BanChat_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_BanChat_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_BanChat_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_BanChat_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_BanChat_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_BanChat_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.adminfd)
}

// optional string openid = 6;
inline bool Admin_BanChat_Rsp::has_openid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_openid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_BanChat_Rsp::clear_has_openid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_BanChat_Rsp::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Admin_BanChat_Rsp::openid() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanChat_Rsp::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.openid)
}
inline void Admin_BanChat_Rsp::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_BanChat_Rsp.openid)
}
inline void Admin_BanChat_Rsp::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_BanChat_Rsp.openid)
}
inline ::std::string* Admin_BanChat_Rsp::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Admin_BanChat_Rsp.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_BanChat_Rsp::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanChat_Rsp::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Admin_BanChat_Rsp.openid)
}

// optional bool fromweb = 7 [default = false];
inline bool Admin_BanChat_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_BanChat_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_BanChat_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_BanChat_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_BanChat_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.fromweb)
}

// required int32 succ = 8;
inline bool Admin_BanChat_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_BanChat_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_BanChat_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_BanChat_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_BanChat_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_BanChat_Rsp.succ)
  return succ_;
}
inline void Admin_BanChat_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanChat_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_BanLogin_Req

// required int64 uid = 1;
inline bool Admin_BanLogin_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_BanLogin_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_BanLogin_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_BanLogin_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_BanLogin_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.uid)
  return uid_;
}
inline void Admin_BanLogin_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.uid)
}

// required bool isban = 2;
inline bool Admin_BanLogin_Req::has_isban() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_BanLogin_Req::set_has_isban() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_BanLogin_Req::clear_has_isban() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_BanLogin_Req::clear_isban() {
  isban_ = false;
  clear_has_isban();
}
inline bool Admin_BanLogin_Req::isban() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.isban)
  return isban_;
}
inline void Admin_BanLogin_Req::set_isban(bool value) {
  set_has_isban();
  isban_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.isban)
}

// required int32 time = 3;
inline bool Admin_BanLogin_Req::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_BanLogin_Req::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_BanLogin_Req::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_BanLogin_Req::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Admin_BanLogin_Req::time() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.time)
  return time_;
}
inline void Admin_BanLogin_Req::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.time)
}

// required int32 gid = 4;
inline bool Admin_BanLogin_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_BanLogin_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_BanLogin_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_BanLogin_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_BanLogin_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.gid)
  return gid_;
}
inline void Admin_BanLogin_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.gid)
}

// required int32 adminfd = 5;
inline bool Admin_BanLogin_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_BanLogin_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_BanLogin_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_BanLogin_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_BanLogin_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.adminfd)
  return adminfd_;
}
inline void Admin_BanLogin_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.adminfd)
}

// optional string openid = 6;
inline bool Admin_BanLogin_Req::has_openid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_BanLogin_Req::set_has_openid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_BanLogin_Req::clear_has_openid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_BanLogin_Req::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Admin_BanLogin_Req::openid() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanLogin_Req::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.openid)
}
inline void Admin_BanLogin_Req::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_BanLogin_Req.openid)
}
inline void Admin_BanLogin_Req::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_BanLogin_Req.openid)
}
inline ::std::string* Admin_BanLogin_Req::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Admin_BanLogin_Req.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_BanLogin_Req::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanLogin_Req::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Admin_BanLogin_Req.openid)
}

// optional bool fromweb = 7 [default = false];
inline bool Admin_BanLogin_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_BanLogin_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_BanLogin_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_BanLogin_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_BanLogin_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Req.fromweb)
  return fromweb_;
}
inline void Admin_BanLogin_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_BanLogin_Rsp

// required int64 uid = 1;
inline bool Admin_BanLogin_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_BanLogin_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_BanLogin_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_BanLogin_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.uid)
  return uid_;
}
inline void Admin_BanLogin_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.uid)
}

// required bool isban = 2;
inline bool Admin_BanLogin_Rsp::has_isban() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_isban() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_BanLogin_Rsp::clear_has_isban() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_BanLogin_Rsp::clear_isban() {
  isban_ = false;
  clear_has_isban();
}
inline bool Admin_BanLogin_Rsp::isban() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.isban)
  return isban_;
}
inline void Admin_BanLogin_Rsp::set_isban(bool value) {
  set_has_isban();
  isban_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.isban)
}

// required int32 time = 3;
inline bool Admin_BanLogin_Rsp::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_BanLogin_Rsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_BanLogin_Rsp::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Admin_BanLogin_Rsp::time() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.time)
  return time_;
}
inline void Admin_BanLogin_Rsp::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.time)
}

// required int32 gid = 4;
inline bool Admin_BanLogin_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_BanLogin_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_BanLogin_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_BanLogin_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.gid)
  return gid_;
}
inline void Admin_BanLogin_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_BanLogin_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_BanLogin_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_BanLogin_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_BanLogin_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_BanLogin_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.adminfd)
}

// optional string openid = 6;
inline bool Admin_BanLogin_Rsp::has_openid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_openid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_BanLogin_Rsp::clear_has_openid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_BanLogin_Rsp::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Admin_BanLogin_Rsp::openid() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanLogin_Rsp::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.openid)
}
inline void Admin_BanLogin_Rsp::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Admin_BanLogin_Rsp.openid)
}
inline void Admin_BanLogin_Rsp::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Admin_BanLogin_Rsp.openid)
}
inline ::std::string* Admin_BanLogin_Rsp::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Admin_BanLogin_Rsp.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Admin_BanLogin_Rsp::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Admin_BanLogin_Rsp::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Admin_BanLogin_Rsp.openid)
}

// optional bool fromweb = 7 [default = false];
inline bool Admin_BanLogin_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_BanLogin_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_BanLogin_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_BanLogin_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_BanLogin_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.fromweb)
}

// required int32 succ = 8;
inline bool Admin_BanLogin_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_BanLogin_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_BanLogin_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_BanLogin_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_BanLogin_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_BanLogin_Rsp.succ)
  return succ_;
}
inline void Admin_BanLogin_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_BanLogin_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddPoint_Req

// required int64 uid = 1;
inline bool Admin_AddPoint_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddPoint_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddPoint_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddPoint_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddPoint_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Req.uid)
  return uid_;
}
inline void Admin_AddPoint_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Req.uid)
}

// required int32 point = 2;
inline bool Admin_AddPoint_Req::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddPoint_Req::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddPoint_Req::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddPoint_Req::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 Admin_AddPoint_Req::point() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Req.point)
  return point_;
}
inline void Admin_AddPoint_Req::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Req.point)
}

// required int32 gid = 3;
inline bool Admin_AddPoint_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddPoint_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddPoint_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddPoint_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddPoint_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Req.gid)
  return gid_;
}
inline void Admin_AddPoint_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddPoint_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddPoint_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddPoint_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddPoint_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddPoint_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddPoint_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddPoint_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddPoint_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddPoint_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddPoint_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddPoint_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddPoint_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_AddPoint_Rsp

// required int64 uid = 1;
inline bool Admin_AddPoint_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddPoint_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddPoint_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddPoint_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.uid)
  return uid_;
}
inline void Admin_AddPoint_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.uid)
}

// required int32 oldpoint = 2;
inline bool Admin_AddPoint_Rsp::has_oldpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_oldpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddPoint_Rsp::clear_has_oldpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddPoint_Rsp::clear_oldpoint() {
  oldpoint_ = 0;
  clear_has_oldpoint();
}
inline ::google::protobuf::int32 Admin_AddPoint_Rsp::oldpoint() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.oldpoint)
  return oldpoint_;
}
inline void Admin_AddPoint_Rsp::set_oldpoint(::google::protobuf::int32 value) {
  set_has_oldpoint();
  oldpoint_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.oldpoint)
}

// required int32 newpoint = 3;
inline bool Admin_AddPoint_Rsp::has_newpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_newpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddPoint_Rsp::clear_has_newpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddPoint_Rsp::clear_newpoint() {
  newpoint_ = 0;
  clear_has_newpoint();
}
inline ::google::protobuf::int32 Admin_AddPoint_Rsp::newpoint() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.newpoint)
  return newpoint_;
}
inline void Admin_AddPoint_Rsp::set_newpoint(::google::protobuf::int32 value) {
  set_has_newpoint();
  newpoint_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.newpoint)
}

// required int32 gid = 4;
inline bool Admin_AddPoint_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddPoint_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddPoint_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddPoint_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.gid)
  return gid_;
}
inline void Admin_AddPoint_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_AddPoint_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddPoint_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddPoint_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddPoint_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddPoint_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.adminfd)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_AddPoint_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddPoint_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddPoint_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddPoint_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddPoint_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_AddPoint_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddPoint_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddPoint_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddPoint_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddPoint_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddPoint_Rsp.succ)
  return succ_;
}
inline void Admin_AddPoint_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddPoint_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddIndate_Req

// required int64 uid = 1;
inline bool Admin_AddIndate_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddIndate_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddIndate_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddIndate_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddIndate_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.uid)
  return uid_;
}
inline void Admin_AddIndate_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.uid)
}

// required int32 infoID = 2;
inline bool Admin_AddIndate_Req::has_infoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddIndate_Req::set_has_infoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddIndate_Req::clear_has_infoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddIndate_Req::clear_infoid() {
  infoid_ = 0;
  clear_has_infoid();
}
inline ::google::protobuf::int32 Admin_AddIndate_Req::infoid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.infoID)
  return infoid_;
}
inline void Admin_AddIndate_Req::set_infoid(::google::protobuf::int32 value) {
  set_has_infoid();
  infoid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.infoID)
}

// required int32 position = 3;
inline bool Admin_AddIndate_Req::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddIndate_Req::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddIndate_Req::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddIndate_Req::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 Admin_AddIndate_Req::position() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.position)
  return position_;
}
inline void Admin_AddIndate_Req::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.position)
}

// required int32 hour = 4;
inline bool Admin_AddIndate_Req::has_hour() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddIndate_Req::set_has_hour() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddIndate_Req::clear_has_hour() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddIndate_Req::clear_hour() {
  hour_ = 0;
  clear_has_hour();
}
inline ::google::protobuf::int32 Admin_AddIndate_Req::hour() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.hour)
  return hour_;
}
inline void Admin_AddIndate_Req::set_hour(::google::protobuf::int32 value) {
  set_has_hour();
  hour_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.hour)
}

// required int32 gid = 5;
inline bool Admin_AddIndate_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddIndate_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddIndate_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddIndate_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddIndate_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.gid)
  return gid_;
}
inline void Admin_AddIndate_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.gid)
}

// required int32 adminfd = 6;
inline bool Admin_AddIndate_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddIndate_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddIndate_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddIndate_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddIndate_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddIndate_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.adminfd)
}

// optional bool fromweb = 7 [default = false];
inline bool Admin_AddIndate_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddIndate_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddIndate_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddIndate_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddIndate_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddIndate_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_AddIndate_Rsp

// required int64 uid = 1;
inline bool Admin_AddIndate_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddIndate_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddIndate_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddIndate_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.uid)
  return uid_;
}
inline void Admin_AddIndate_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.uid)
}

// required int64 itemID = 2;
inline bool Admin_AddIndate_Rsp::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddIndate_Rsp::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddIndate_Rsp::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 Admin_AddIndate_Rsp::itemid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.itemID)
  return itemid_;
}
inline void Admin_AddIndate_Rsp::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.itemID)
}

// required int32 infoID = 3;
inline bool Admin_AddIndate_Rsp::has_infoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_infoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddIndate_Rsp::clear_has_infoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddIndate_Rsp::clear_infoid() {
  infoid_ = 0;
  clear_has_infoid();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::infoid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.infoID)
  return infoid_;
}
inline void Admin_AddIndate_Rsp::set_infoid(::google::protobuf::int32 value) {
  set_has_infoid();
  infoid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.infoID)
}

// required int32 position = 4;
inline bool Admin_AddIndate_Rsp::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddIndate_Rsp::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddIndate_Rsp::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::position() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.position)
  return position_;
}
inline void Admin_AddIndate_Rsp::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.position)
}

// required int32 oldindate = 5;
inline bool Admin_AddIndate_Rsp::has_oldindate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_oldindate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddIndate_Rsp::clear_has_oldindate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddIndate_Rsp::clear_oldindate() {
  oldindate_ = 0;
  clear_has_oldindate();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::oldindate() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.oldindate)
  return oldindate_;
}
inline void Admin_AddIndate_Rsp::set_oldindate(::google::protobuf::int32 value) {
  set_has_oldindate();
  oldindate_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.oldindate)
}

// required int32 newindate = 6;
inline bool Admin_AddIndate_Rsp::has_newindate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_newindate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddIndate_Rsp::clear_has_newindate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddIndate_Rsp::clear_newindate() {
  newindate_ = 0;
  clear_has_newindate();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::newindate() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.newindate)
  return newindate_;
}
inline void Admin_AddIndate_Rsp::set_newindate(::google::protobuf::int32 value) {
  set_has_newindate();
  newindate_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.newindate)
}

// required int32 gid = 7;
inline bool Admin_AddIndate_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddIndate_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddIndate_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.gid)
  return gid_;
}
inline void Admin_AddIndate_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.gid)
}

// required int32 adminfd = 8;
inline bool Admin_AddIndate_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Admin_AddIndate_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Admin_AddIndate_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddIndate_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.adminfd)
}

// optional bool fromweb = 9 [default = false];
inline bool Admin_AddIndate_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Admin_AddIndate_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Admin_AddIndate_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddIndate_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddIndate_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.fromweb)
}

// required int32 succ = 10;
inline bool Admin_AddIndate_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Admin_AddIndate_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Admin_AddIndate_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Admin_AddIndate_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddIndate_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddIndate_Rsp.succ)
  return succ_;
}
inline void Admin_AddIndate_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddIndate_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_FreshUser_Req

// required int64 uid = 1;
inline bool Admin_FreshUser_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_FreshUser_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_FreshUser_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_FreshUser_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_FreshUser_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Req.uid)
  return uid_;
}
inline void Admin_FreshUser_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Req.uid)
}

// required int32 gid = 2;
inline bool Admin_FreshUser_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_FreshUser_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_FreshUser_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_FreshUser_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_FreshUser_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Req.gid)
  return gid_;
}
inline void Admin_FreshUser_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Req.gid)
}

// required int32 adminfd = 3;
inline bool Admin_FreshUser_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_FreshUser_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_FreshUser_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_FreshUser_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_FreshUser_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Req.adminfd)
  return adminfd_;
}
inline void Admin_FreshUser_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Req.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_FreshUser_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_FreshUser_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_FreshUser_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_FreshUser_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_FreshUser_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Req.fromweb)
  return fromweb_;
}
inline void Admin_FreshUser_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_FreshUser_Rsp

// required int64 uid = 1;
inline bool Admin_FreshUser_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_FreshUser_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_FreshUser_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_FreshUser_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_FreshUser_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Rsp.uid)
  return uid_;
}
inline void Admin_FreshUser_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Rsp.uid)
}

// required int32 gid = 2;
inline bool Admin_FreshUser_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_FreshUser_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_FreshUser_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_FreshUser_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_FreshUser_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Rsp.gid)
  return gid_;
}
inline void Admin_FreshUser_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Rsp.gid)
}

// required int32 adminfd = 3;
inline bool Admin_FreshUser_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_FreshUser_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_FreshUser_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_FreshUser_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_FreshUser_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_FreshUser_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Rsp.adminfd)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_FreshUser_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_FreshUser_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_FreshUser_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_FreshUser_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_FreshUser_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_FreshUser_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Rsp.fromweb)
}

// required int32 succ = 5;
inline bool Admin_FreshUser_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_FreshUser_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_FreshUser_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_FreshUser_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_FreshUser_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_FreshUser_Rsp.succ)
  return succ_;
}
inline void Admin_FreshUser_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_FreshUser_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_AddMedal_Req

// required int64 uid = 1;
inline bool Admin_AddMedal_Req::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddMedal_Req::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddMedal_Req::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddMedal_Req::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddMedal_Req::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Req.uid)
  return uid_;
}
inline void Admin_AddMedal_Req::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Req.uid)
}

// required int32 medal = 2;
inline bool Admin_AddMedal_Req::has_medal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddMedal_Req::set_has_medal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddMedal_Req::clear_has_medal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddMedal_Req::clear_medal() {
  medal_ = 0;
  clear_has_medal();
}
inline ::google::protobuf::int32 Admin_AddMedal_Req::medal() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Req.medal)
  return medal_;
}
inline void Admin_AddMedal_Req::set_medal(::google::protobuf::int32 value) {
  set_has_medal();
  medal_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Req.medal)
}

// required int32 gid = 3;
inline bool Admin_AddMedal_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddMedal_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddMedal_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddMedal_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddMedal_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Req.gid)
  return gid_;
}
inline void Admin_AddMedal_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Req.gid)
}

// required int32 adminfd = 4;
inline bool Admin_AddMedal_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddMedal_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddMedal_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddMedal_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddMedal_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Req.adminfd)
  return adminfd_;
}
inline void Admin_AddMedal_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Req.adminfd)
}

// optional bool fromweb = 5 [default = false];
inline bool Admin_AddMedal_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddMedal_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddMedal_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddMedal_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddMedal_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Req.fromweb)
  return fromweb_;
}
inline void Admin_AddMedal_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_AddMedal_Rsp

// required int64 uid = 1;
inline bool Admin_AddMedal_Rsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_AddMedal_Rsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_AddMedal_Rsp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Admin_AddMedal_Rsp::uid() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.uid)
  return uid_;
}
inline void Admin_AddMedal_Rsp::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.uid)
}

// required int32 oldmedal = 2;
inline bool Admin_AddMedal_Rsp::has_oldmedal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_oldmedal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_AddMedal_Rsp::clear_has_oldmedal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_AddMedal_Rsp::clear_oldmedal() {
  oldmedal_ = 0;
  clear_has_oldmedal();
}
inline ::google::protobuf::int32 Admin_AddMedal_Rsp::oldmedal() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.oldmedal)
  return oldmedal_;
}
inline void Admin_AddMedal_Rsp::set_oldmedal(::google::protobuf::int32 value) {
  set_has_oldmedal();
  oldmedal_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.oldmedal)
}

// required int32 newmedal = 3;
inline bool Admin_AddMedal_Rsp::has_newmedal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_newmedal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_AddMedal_Rsp::clear_has_newmedal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_AddMedal_Rsp::clear_newmedal() {
  newmedal_ = 0;
  clear_has_newmedal();
}
inline ::google::protobuf::int32 Admin_AddMedal_Rsp::newmedal() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.newmedal)
  return newmedal_;
}
inline void Admin_AddMedal_Rsp::set_newmedal(::google::protobuf::int32 value) {
  set_has_newmedal();
  newmedal_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.newmedal)
}

// required int32 gid = 4;
inline bool Admin_AddMedal_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_AddMedal_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_AddMedal_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_AddMedal_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.gid)
  return gid_;
}
inline void Admin_AddMedal_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.gid)
}

// required int32 adminfd = 5;
inline bool Admin_AddMedal_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Admin_AddMedal_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Admin_AddMedal_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_AddMedal_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_AddMedal_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.adminfd)
}

// optional bool fromweb = 6 [default = false];
inline bool Admin_AddMedal_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Admin_AddMedal_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Admin_AddMedal_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_AddMedal_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_AddMedal_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.fromweb)
}

// required int32 succ = 7;
inline bool Admin_AddMedal_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Admin_AddMedal_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Admin_AddMedal_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Admin_AddMedal_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_AddMedal_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_AddMedal_Rsp.succ)
  return succ_;
}
inline void Admin_AddMedal_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_AddMedal_Rsp.succ)
}

// -------------------------------------------------------------------

// Admin_Reload_Req

// required int32 gid = 1;
inline bool Admin_Reload_Req::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_Reload_Req::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_Reload_Req::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_Reload_Req::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_Reload_Req::gid() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Req.gid)
  return gid_;
}
inline void Admin_Reload_Req::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Req.gid)
}

// required int32 adminfd = 2;
inline bool Admin_Reload_Req::has_adminfd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_Reload_Req::set_has_adminfd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_Reload_Req::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_Reload_Req::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_Reload_Req::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Req.adminfd)
  return adminfd_;
}
inline void Admin_Reload_Req::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Req.adminfd)
}

// optional bool fromweb = 3 [default = false];
inline bool Admin_Reload_Req::has_fromweb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_Reload_Req::set_has_fromweb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_Reload_Req::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_Reload_Req::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_Reload_Req::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Req.fromweb)
  return fromweb_;
}
inline void Admin_Reload_Req::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Req.fromweb)
}

// -------------------------------------------------------------------

// Admin_Reload_Rsp

// required int32 gid = 1;
inline bool Admin_Reload_Rsp::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Admin_Reload_Rsp::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Admin_Reload_Rsp::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Admin_Reload_Rsp::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 Admin_Reload_Rsp::gid() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Rsp.gid)
  return gid_;
}
inline void Admin_Reload_Rsp::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Rsp.gid)
}

// required int32 adminfd = 2;
inline bool Admin_Reload_Rsp::has_adminfd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Admin_Reload_Rsp::set_has_adminfd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Admin_Reload_Rsp::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Admin_Reload_Rsp::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 Admin_Reload_Rsp::adminfd() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Rsp.adminfd)
  return adminfd_;
}
inline void Admin_Reload_Rsp::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Rsp.adminfd)
}

// required int32 succ = 3;
inline bool Admin_Reload_Rsp::has_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Admin_Reload_Rsp::set_has_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Admin_Reload_Rsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Admin_Reload_Rsp::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Admin_Reload_Rsp::succ() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Rsp.succ)
  return succ_;
}
inline void Admin_Reload_Rsp::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Rsp.succ)
}

// optional bool fromweb = 4 [default = false];
inline bool Admin_Reload_Rsp::has_fromweb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Admin_Reload_Rsp::set_has_fromweb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Admin_Reload_Rsp::clear_has_fromweb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Admin_Reload_Rsp::clear_fromweb() {
  fromweb_ = false;
  clear_has_fromweb();
}
inline bool Admin_Reload_Rsp::fromweb() const {
  // @@protoc_insertion_point(field_get:Admin_Reload_Rsp.fromweb)
  return fromweb_;
}
inline void Admin_Reload_Rsp::set_fromweb(bool value) {
  set_has_fromweb();
  fromweb_ = value;
  // @@protoc_insertion_point(field_set:Admin_Reload_Rsp.fromweb)
}

// -------------------------------------------------------------------

// UpdateGuestNumber

// optional int64 uid = 1;
inline bool UpdateGuestNumber::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGuestNumber::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGuestNumber::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGuestNumber::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 UpdateGuestNumber::uid() const {
  // @@protoc_insertion_point(field_get:UpdateGuestNumber.uid)
  return uid_;
}
inline void UpdateGuestNumber::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:UpdateGuestNumber.uid)
}

// optional int32 guest_num = 2;
inline bool UpdateGuestNumber::has_guest_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGuestNumber::set_has_guest_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGuestNumber::clear_has_guest_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGuestNumber::clear_guest_num() {
  guest_num_ = 0;
  clear_has_guest_num();
}
inline ::google::protobuf::int32 UpdateGuestNumber::guest_num() const {
  // @@protoc_insertion_point(field_get:UpdateGuestNumber.guest_num)
  return guest_num_;
}
inline void UpdateGuestNumber::set_guest_num(::google::protobuf::int32 value) {
  set_has_guest_num();
  guest_num_ = value;
  // @@protoc_insertion_point(field_set:UpdateGuestNumber.guest_num)
}

// optional int64 time = 3;
inline bool UpdateGuestNumber::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGuestNumber::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGuestNumber::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGuestNumber::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 UpdateGuestNumber::time() const {
  // @@protoc_insertion_point(field_get:UpdateGuestNumber.time)
  return time_;
}
inline void UpdateGuestNumber::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:UpdateGuestNumber.time)
}

// -------------------------------------------------------------------

// QQUnionCheckKey

// required int32 adminfd = 2;
inline bool QQUnionCheckKey::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QQUnionCheckKey::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QQUnionCheckKey::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QQUnionCheckKey::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 QQUnionCheckKey::adminfd() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckKey.adminfd)
  return adminfd_;
}
inline void QQUnionCheckKey::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:QQUnionCheckKey.adminfd)
}

// required int64 id = 1;
inline bool QQUnionCheckKey::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QQUnionCheckKey::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QQUnionCheckKey::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QQUnionCheckKey::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 QQUnionCheckKey::id() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckKey.id)
  return id_;
}
inline void QQUnionCheckKey::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:QQUnionCheckKey.id)
}

// required string key = 3;
inline bool QQUnionCheckKey::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QQUnionCheckKey::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QQUnionCheckKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QQUnionCheckKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& QQUnionCheckKey::key() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckKey.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QQUnionCheckKey::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QQUnionCheckKey.key)
}
inline void QQUnionCheckKey::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QQUnionCheckKey.key)
}
inline void QQUnionCheckKey::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QQUnionCheckKey.key)
}
inline ::std::string* QQUnionCheckKey::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:QQUnionCheckKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QQUnionCheckKey::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QQUnionCheckKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:QQUnionCheckKey.key)
}

// optional bool succ = 4;
inline bool QQUnionCheckKey::has_succ() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QQUnionCheckKey::set_has_succ() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QQUnionCheckKey::clear_has_succ() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QQUnionCheckKey::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool QQUnionCheckKey::succ() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckKey.succ)
  return succ_;
}
inline void QQUnionCheckKey::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:QQUnionCheckKey.succ)
}

// -------------------------------------------------------------------

// QQUnionCheckOpenId

// required int32 adminfd = 2;
inline bool QQUnionCheckOpenId::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QQUnionCheckOpenId::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QQUnionCheckOpenId::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QQUnionCheckOpenId::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 QQUnionCheckOpenId::adminfd() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckOpenId.adminfd)
  return adminfd_;
}
inline void QQUnionCheckOpenId::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:QQUnionCheckOpenId.adminfd)
}

// required int64 id = 1;
inline bool QQUnionCheckOpenId::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QQUnionCheckOpenId::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QQUnionCheckOpenId::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QQUnionCheckOpenId::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 QQUnionCheckOpenId::id() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckOpenId.id)
  return id_;
}
inline void QQUnionCheckOpenId::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:QQUnionCheckOpenId.id)
}

// required string openid = 3;
inline bool QQUnionCheckOpenId::has_openid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QQUnionCheckOpenId::set_has_openid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QQUnionCheckOpenId::clear_has_openid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QQUnionCheckOpenId::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& QQUnionCheckOpenId::openid() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckOpenId.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QQUnionCheckOpenId::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QQUnionCheckOpenId.openid)
}
inline void QQUnionCheckOpenId::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QQUnionCheckOpenId.openid)
}
inline void QQUnionCheckOpenId::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QQUnionCheckOpenId.openid)
}
inline ::std::string* QQUnionCheckOpenId::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:QQUnionCheckOpenId.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QQUnionCheckOpenId::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QQUnionCheckOpenId::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:QQUnionCheckOpenId.openid)
}

// optional bool succ = 4;
inline bool QQUnionCheckOpenId::has_succ() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QQUnionCheckOpenId::set_has_succ() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QQUnionCheckOpenId::clear_has_succ() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QQUnionCheckOpenId::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool QQUnionCheckOpenId::succ() const {
  // @@protoc_insertion_point(field_get:QQUnionCheckOpenId.succ)
  return succ_;
}
inline void QQUnionCheckOpenId::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:QQUnionCheckOpenId.succ)
}

// -------------------------------------------------------------------

// QQUnionAddItem

// required int32 adminfd = 2;
inline bool QQUnionAddItem::has_adminfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QQUnionAddItem::set_has_adminfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QQUnionAddItem::clear_has_adminfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QQUnionAddItem::clear_adminfd() {
  adminfd_ = 0;
  clear_has_adminfd();
}
inline ::google::protobuf::int32 QQUnionAddItem::adminfd() const {
  // @@protoc_insertion_point(field_get:QQUnionAddItem.adminfd)
  return adminfd_;
}
inline void QQUnionAddItem::set_adminfd(::google::protobuf::int32 value) {
  set_has_adminfd();
  adminfd_ = value;
  // @@protoc_insertion_point(field_set:QQUnionAddItem.adminfd)
}

// required int64 id = 1;
inline bool QQUnionAddItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QQUnionAddItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QQUnionAddItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QQUnionAddItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 QQUnionAddItem::id() const {
  // @@protoc_insertion_point(field_get:QQUnionAddItem.id)
  return id_;
}
inline void QQUnionAddItem::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:QQUnionAddItem.id)
}

// required int32 typeid = 4;
inline bool QQUnionAddItem::has_typeid_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QQUnionAddItem::set_has_typeid_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QQUnionAddItem::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QQUnionAddItem::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 QQUnionAddItem::typeid_() const {
  // @@protoc_insertion_point(field_get:QQUnionAddItem.typeid)
  return typeid__;
}
inline void QQUnionAddItem::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:QQUnionAddItem.typeid)
}

// required int32 num = 5;
inline bool QQUnionAddItem::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QQUnionAddItem::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QQUnionAddItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QQUnionAddItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 QQUnionAddItem::num() const {
  // @@protoc_insertion_point(field_get:QQUnionAddItem.num)
  return num_;
}
inline void QQUnionAddItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:QQUnionAddItem.num)
}

// required string key = 6;
inline bool QQUnionAddItem::has_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QQUnionAddItem::set_has_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QQUnionAddItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QQUnionAddItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& QQUnionAddItem::key() const {
  // @@protoc_insertion_point(field_get:QQUnionAddItem.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QQUnionAddItem::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QQUnionAddItem.key)
}
inline void QQUnionAddItem::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QQUnionAddItem.key)
}
inline void QQUnionAddItem::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QQUnionAddItem.key)
}
inline ::std::string* QQUnionAddItem::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:QQUnionAddItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QQUnionAddItem::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QQUnionAddItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:QQUnionAddItem.key)
}

// optional bool succ = 7;
inline bool QQUnionAddItem::has_succ() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QQUnionAddItem::set_has_succ() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QQUnionAddItem::clear_has_succ() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QQUnionAddItem::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool QQUnionAddItem::succ() const {
  // @@protoc_insertion_point(field_get:QQUnionAddItem.succ)
  return succ_;
}
inline void QQUnionAddItem::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:QQUnionAddItem.succ)
}

// -------------------------------------------------------------------

// Wap_Str_Request

// optional int32 fd = 1;
inline bool Wap_Str_Request::has_fd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Wap_Str_Request::set_has_fd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Wap_Str_Request::clear_has_fd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Wap_Str_Request::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 Wap_Str_Request::fd() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Request.fd)
  return fd_;
}
inline void Wap_Str_Request::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Request.fd)
}

// optional int64 uid = 2;
inline bool Wap_Str_Request::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Wap_Str_Request::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Wap_Str_Request::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Wap_Str_Request::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Wap_Str_Request::uid() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Request.uid)
  return uid_;
}
inline void Wap_Str_Request::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Request.uid)
}

// optional int64 secret = 3;
inline bool Wap_Str_Request::has_secret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Wap_Str_Request::set_has_secret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Wap_Str_Request::clear_has_secret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Wap_Str_Request::clear_secret() {
  secret_ = GOOGLE_LONGLONG(0);
  clear_has_secret();
}
inline ::google::protobuf::int64 Wap_Str_Request::secret() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Request.secret)
  return secret_;
}
inline void Wap_Str_Request::set_secret(::google::protobuf::int64 value) {
  set_has_secret();
  secret_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Request.secret)
}

// optional string cmd = 4;
inline bool Wap_Str_Request::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Wap_Str_Request::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Wap_Str_Request::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Wap_Str_Request::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& Wap_Str_Request::cmd() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Request.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Wap_Str_Request::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wap_Str_Request.cmd)
}
inline void Wap_Str_Request::set_cmd(const char* value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wap_Str_Request.cmd)
}
inline void Wap_Str_Request::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wap_Str_Request.cmd)
}
inline ::std::string* Wap_Str_Request::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:Wap_Str_Request.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Wap_Str_Request::release_cmd() {
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Wap_Str_Request::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:Wap_Str_Request.cmd)
}

// -------------------------------------------------------------------

// Wap_Str_Response

// optional int32 fd = 1;
inline bool Wap_Str_Response::has_fd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Wap_Str_Response::set_has_fd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Wap_Str_Response::clear_has_fd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Wap_Str_Response::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 Wap_Str_Response::fd() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Response.fd)
  return fd_;
}
inline void Wap_Str_Response::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Response.fd)
}

// optional int64 uid = 2;
inline bool Wap_Str_Response::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Wap_Str_Response::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Wap_Str_Response::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Wap_Str_Response::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Wap_Str_Response::uid() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Response.uid)
  return uid_;
}
inline void Wap_Str_Response::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Response.uid)
}

// optional int64 secret = 3;
inline bool Wap_Str_Response::has_secret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Wap_Str_Response::set_has_secret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Wap_Str_Response::clear_has_secret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Wap_Str_Response::clear_secret() {
  secret_ = GOOGLE_LONGLONG(0);
  clear_has_secret();
}
inline ::google::protobuf::int64 Wap_Str_Response::secret() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Response.secret)
  return secret_;
}
inline void Wap_Str_Response::set_secret(::google::protobuf::int64 value) {
  set_has_secret();
  secret_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Response.secret)
}

// optional string cmd = 4;
inline bool Wap_Str_Response::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Wap_Str_Response::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Wap_Str_Response::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Wap_Str_Response::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& Wap_Str_Response::cmd() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Response.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Wap_Str_Response::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wap_Str_Response.cmd)
}
inline void Wap_Str_Response::set_cmd(const char* value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wap_Str_Response.cmd)
}
inline void Wap_Str_Response::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wap_Str_Response.cmd)
}
inline ::std::string* Wap_Str_Response::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:Wap_Str_Response.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Wap_Str_Response::release_cmd() {
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Wap_Str_Response::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:Wap_Str_Response.cmd)
}

// optional int32 succ = 5;
inline bool Wap_Str_Response::has_succ() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Wap_Str_Response::set_has_succ() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Wap_Str_Response::clear_has_succ() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Wap_Str_Response::clear_succ() {
  succ_ = 0;
  clear_has_succ();
}
inline ::google::protobuf::int32 Wap_Str_Response::succ() const {
  // @@protoc_insertion_point(field_get:Wap_Str_Response.succ)
  return succ_;
}
inline void Wap_Str_Response::set_succ(::google::protobuf::int32 value) {
  set_has_succ();
  succ_ = value;
  // @@protoc_insertion_point(field_set:Wap_Str_Response.succ)
}

// -------------------------------------------------------------------

// HttpRequestV3

// optional string url = 1 [default = ""];
inline bool HttpRequestV3::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpRequestV3::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpRequestV3::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpRequestV3::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& HttpRequestV3::url() const {
  // @@protoc_insertion_point(field_get:HttpRequestV3.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestV3::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpRequestV3.url)
}
inline void HttpRequestV3::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpRequestV3.url)
}
inline void HttpRequestV3::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpRequestV3.url)
}
inline ::std::string* HttpRequestV3::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:HttpRequestV3.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestV3::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestV3::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:HttpRequestV3.url)
}

// optional string postdata = 2 [default = ""];
inline bool HttpRequestV3::has_postdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpRequestV3::set_has_postdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpRequestV3::clear_has_postdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpRequestV3::clear_postdata() {
  postdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postdata();
}
inline const ::std::string& HttpRequestV3::postdata() const {
  // @@protoc_insertion_point(field_get:HttpRequestV3.postdata)
  return postdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestV3::set_postdata(const ::std::string& value) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpRequestV3.postdata)
}
inline void HttpRequestV3::set_postdata(const char* value) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpRequestV3.postdata)
}
inline void HttpRequestV3::set_postdata(const char* value, size_t size) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpRequestV3.postdata)
}
inline ::std::string* HttpRequestV3::mutable_postdata() {
  set_has_postdata();
  // @@protoc_insertion_point(field_mutable:HttpRequestV3.postdata)
  return postdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestV3::release_postdata() {
  clear_has_postdata();
  return postdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestV3::set_allocated_postdata(::std::string* postdata) {
  if (postdata != NULL) {
    set_has_postdata();
  } else {
    clear_has_postdata();
  }
  postdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postdata);
  // @@protoc_insertion_point(field_set_allocated:HttpRequestV3.postdata)
}

// -------------------------------------------------------------------

// SimpleMarkUser

// optional int64 uid = 1 [default = 0];
inline bool SimpleMarkUser::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleMarkUser::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleMarkUser::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleMarkUser::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 SimpleMarkUser::uid() const {
  // @@protoc_insertion_point(field_get:SimpleMarkUser.uid)
  return uid_;
}
inline void SimpleMarkUser::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:SimpleMarkUser.uid)
}

// optional string openid = 2 [default = ""];
inline bool SimpleMarkUser::has_openid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimpleMarkUser::set_has_openid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimpleMarkUser::clear_has_openid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimpleMarkUser::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& SimpleMarkUser::openid() const {
  // @@protoc_insertion_point(field_get:SimpleMarkUser.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleMarkUser::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SimpleMarkUser.openid)
}
inline void SimpleMarkUser::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SimpleMarkUser.openid)
}
inline void SimpleMarkUser::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SimpleMarkUser.openid)
}
inline ::std::string* SimpleMarkUser::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:SimpleMarkUser.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleMarkUser::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleMarkUser::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:SimpleMarkUser.openid)
}

// optional int32 type = 3 [default = 0];
inline bool SimpleMarkUser::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimpleMarkUser::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimpleMarkUser::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimpleMarkUser::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SimpleMarkUser::type() const {
  // @@protoc_insertion_point(field_get:SimpleMarkUser.type)
  return type_;
}
inline void SimpleMarkUser::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SimpleMarkUser.type)
}

// optional int64 value = 4 [default = 0];
inline bool SimpleMarkUser::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SimpleMarkUser::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SimpleMarkUser::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SimpleMarkUser::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 SimpleMarkUser::value() const {
  // @@protoc_insertion_point(field_get:SimpleMarkUser.value)
  return value_;
}
inline void SimpleMarkUser::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:SimpleMarkUser.value)
}

// optional string svalue = 5 [default = ""];
inline bool SimpleMarkUser::has_svalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SimpleMarkUser::set_has_svalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SimpleMarkUser::clear_has_svalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SimpleMarkUser::clear_svalue() {
  svalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_svalue();
}
inline const ::std::string& SimpleMarkUser::svalue() const {
  // @@protoc_insertion_point(field_get:SimpleMarkUser.svalue)
  return svalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleMarkUser::set_svalue(const ::std::string& value) {
  set_has_svalue();
  svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SimpleMarkUser.svalue)
}
inline void SimpleMarkUser::set_svalue(const char* value) {
  set_has_svalue();
  svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SimpleMarkUser.svalue)
}
inline void SimpleMarkUser::set_svalue(const char* value, size_t size) {
  set_has_svalue();
  svalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SimpleMarkUser.svalue)
}
inline ::std::string* SimpleMarkUser::mutable_svalue() {
  set_has_svalue();
  // @@protoc_insertion_point(field_mutable:SimpleMarkUser.svalue)
  return svalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleMarkUser::release_svalue() {
  clear_has_svalue();
  return svalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleMarkUser::set_allocated_svalue(::std::string* svalue) {
  if (svalue != NULL) {
    set_has_svalue();
  } else {
    clear_has_svalue();
  }
  svalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svalue);
  // @@protoc_insertion_point(field_set_allocated:SimpleMarkUser.svalue)
}

// -------------------------------------------------------------------

// InviteFriendLvlSucc

// optional int64 uid = 1 [default = 0];
inline bool InviteFriendLvlSucc::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteFriendLvlSucc::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteFriendLvlSucc::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteFriendLvlSucc::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 InviteFriendLvlSucc::uid() const {
  // @@protoc_insertion_point(field_get:InviteFriendLvlSucc.uid)
  return uid_;
}
inline void InviteFriendLvlSucc::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:InviteFriendLvlSucc.uid)
}

// optional string openid = 2 [default = ""];
inline bool InviteFriendLvlSucc::has_openid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteFriendLvlSucc::set_has_openid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteFriendLvlSucc::clear_has_openid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteFriendLvlSucc::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& InviteFriendLvlSucc::openid() const {
  // @@protoc_insertion_point(field_get:InviteFriendLvlSucc.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteFriendLvlSucc::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviteFriendLvlSucc.openid)
}
inline void InviteFriendLvlSucc::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviteFriendLvlSucc.openid)
}
inline void InviteFriendLvlSucc::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviteFriendLvlSucc.openid)
}
inline ::std::string* InviteFriendLvlSucc::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:InviteFriendLvlSucc.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteFriendLvlSucc::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteFriendLvlSucc::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:InviteFriendLvlSucc.openid)
}

// optional string url = 3 [default = ""];
inline bool InviteFriendLvlSucc::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteFriendLvlSucc::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteFriendLvlSucc::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteFriendLvlSucc::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& InviteFriendLvlSucc::url() const {
  // @@protoc_insertion_point(field_get:InviteFriendLvlSucc.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteFriendLvlSucc::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviteFriendLvlSucc.url)
}
inline void InviteFriendLvlSucc::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviteFriendLvlSucc.url)
}
inline void InviteFriendLvlSucc::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviteFriendLvlSucc.url)
}
inline ::std::string* InviteFriendLvlSucc::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:InviteFriendLvlSucc.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteFriendLvlSucc::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteFriendLvlSucc::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:InviteFriendLvlSucc.url)
}

// optional int32 lvl = 4 [default = 0];
inline bool InviteFriendLvlSucc::has_lvl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteFriendLvlSucc::set_has_lvl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteFriendLvlSucc::clear_has_lvl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteFriendLvlSucc::clear_lvl() {
  lvl_ = 0;
  clear_has_lvl();
}
inline ::google::protobuf::int32 InviteFriendLvlSucc::lvl() const {
  // @@protoc_insertion_point(field_get:InviteFriendLvlSucc.lvl)
  return lvl_;
}
inline void InviteFriendLvlSucc::set_lvl(::google::protobuf::int32 value) {
  set_has_lvl();
  lvl_ = value;
  // @@protoc_insertion_point(field_set:InviteFriendLvlSucc.lvl)
}

// optional int32 nowloginday = 5 [default = 0];
inline bool InviteFriendLvlSucc::has_nowloginday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InviteFriendLvlSucc::set_has_nowloginday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InviteFriendLvlSucc::clear_has_nowloginday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InviteFriendLvlSucc::clear_nowloginday() {
  nowloginday_ = 0;
  clear_has_nowloginday();
}
inline ::google::protobuf::int32 InviteFriendLvlSucc::nowloginday() const {
  // @@protoc_insertion_point(field_get:InviteFriendLvlSucc.nowloginday)
  return nowloginday_;
}
inline void InviteFriendLvlSucc::set_nowloginday(::google::protobuf::int32 value) {
  set_has_nowloginday();
  nowloginday_ = value;
  // @@protoc_insertion_point(field_set:InviteFriendLvlSucc.nowloginday)
}

// -------------------------------------------------------------------

// Event

// required int32 cmd = 1;
inline bool Event::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Event::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Event::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Event::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 Event::cmd() const {
  // @@protoc_insertion_point(field_get:Event.cmd)
  return cmd_;
}
inline void Event::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Event.cmd)
}

// required int32 state = 2;
inline bool Event::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Event::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Event::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Event::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Event::state() const {
  // @@protoc_insertion_point(field_get:Event.state)
  return state_;
}
inline void Event::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Event.state)
}

// required int64 time = 3;
inline bool Event::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Event::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Event::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Event::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 Event::time() const {
  // @@protoc_insertion_point(field_get:Event.time)
  return time_;
}
inline void Event::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Event.time)
}

// optional int64 uid = 4;
inline bool Event::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Event::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Event::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Event::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 Event::uid() const {
  // @@protoc_insertion_point(field_get:Event.uid)
  return uid_;
}
inline void Event::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Event.uid)
}

// optional int32 fromworld_fd = 5;
inline bool Event::has_fromworld_fd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Event::set_has_fromworld_fd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Event::clear_has_fromworld_fd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Event::clear_fromworld_fd() {
  fromworld_fd_ = 0;
  clear_has_fromworld_fd();
}
inline ::google::protobuf::int32 Event::fromworld_fd() const {
  // @@protoc_insertion_point(field_get:Event.fromworld_fd)
  return fromworld_fd_;
}
inline void Event::set_fromworld_fd(::google::protobuf::int32 value) {
  set_has_fromworld_fd();
  fromworld_fd_ = value;
  // @@protoc_insertion_point(field_set:Event.fromworld_fd)
}

// optional int32 hallSrvID = 6;
inline bool Event::has_hallsrvid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Event::set_has_hallsrvid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Event::clear_has_hallsrvid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Event::clear_hallsrvid() {
  hallsrvid_ = 0;
  clear_has_hallsrvid();
}
inline ::google::protobuf::int32 Event::hallsrvid() const {
  // @@protoc_insertion_point(field_get:Event.hallSrvID)
  return hallsrvid_;
}
inline void Event::set_hallsrvid(::google::protobuf::int32 value) {
  set_has_hallsrvid();
  hallsrvid_ = value;
  // @@protoc_insertion_point(field_set:Event.hallSrvID)
}

// optional .WorkingStatus_Req workingStatus_req = 7;
inline bool Event::has_workingstatus_req() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Event::set_has_workingstatus_req() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Event::clear_has_workingstatus_req() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Event::clear_workingstatus_req() {
  if (workingstatus_req_ != NULL) workingstatus_req_->::WorkingStatus_Req::Clear();
  clear_has_workingstatus_req();
}
inline const ::WorkingStatus_Req& Event::workingstatus_req() const {
  // @@protoc_insertion_point(field_get:Event.workingStatus_req)
  return workingstatus_req_ != NULL ? *workingstatus_req_ : *default_instance_->workingstatus_req_;
}
inline ::WorkingStatus_Req* Event::mutable_workingstatus_req() {
  set_has_workingstatus_req();
  if (workingstatus_req_ == NULL) {
    workingstatus_req_ = new ::WorkingStatus_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.workingStatus_req)
  return workingstatus_req_;
}
inline ::WorkingStatus_Req* Event::release_workingstatus_req() {
  clear_has_workingstatus_req();
  ::WorkingStatus_Req* temp = workingstatus_req_;
  workingstatus_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_workingstatus_req(::WorkingStatus_Req* workingstatus_req) {
  delete workingstatus_req_;
  workingstatus_req_ = workingstatus_req;
  if (workingstatus_req) {
    set_has_workingstatus_req();
  } else {
    clear_has_workingstatus_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.workingStatus_req)
}

// optional .UserLogin_Req userLogin_req = 8;
inline bool Event::has_userlogin_req() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Event::set_has_userlogin_req() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Event::clear_has_userlogin_req() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Event::clear_userlogin_req() {
  if (userlogin_req_ != NULL) userlogin_req_->::UserLogin_Req::Clear();
  clear_has_userlogin_req();
}
inline const ::UserLogin_Req& Event::userlogin_req() const {
  // @@protoc_insertion_point(field_get:Event.userLogin_req)
  return userlogin_req_ != NULL ? *userlogin_req_ : *default_instance_->userlogin_req_;
}
inline ::UserLogin_Req* Event::mutable_userlogin_req() {
  set_has_userlogin_req();
  if (userlogin_req_ == NULL) {
    userlogin_req_ = new ::UserLogin_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.userLogin_req)
  return userlogin_req_;
}
inline ::UserLogin_Req* Event::release_userlogin_req() {
  clear_has_userlogin_req();
  ::UserLogin_Req* temp = userlogin_req_;
  userlogin_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_userlogin_req(::UserLogin_Req* userlogin_req) {
  delete userlogin_req_;
  userlogin_req_ = userlogin_req;
  if (userlogin_req) {
    set_has_userlogin_req();
  } else {
    clear_has_userlogin_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.userLogin_req)
}

// optional .UserLogin_Rsp userLogin_rsp = 9;
inline bool Event::has_userlogin_rsp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Event::set_has_userlogin_rsp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Event::clear_has_userlogin_rsp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Event::clear_userlogin_rsp() {
  if (userlogin_rsp_ != NULL) userlogin_rsp_->::UserLogin_Rsp::Clear();
  clear_has_userlogin_rsp();
}
inline const ::UserLogin_Rsp& Event::userlogin_rsp() const {
  // @@protoc_insertion_point(field_get:Event.userLogin_rsp)
  return userlogin_rsp_ != NULL ? *userlogin_rsp_ : *default_instance_->userlogin_rsp_;
}
inline ::UserLogin_Rsp* Event::mutable_userlogin_rsp() {
  set_has_userlogin_rsp();
  if (userlogin_rsp_ == NULL) {
    userlogin_rsp_ = new ::UserLogin_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.userLogin_rsp)
  return userlogin_rsp_;
}
inline ::UserLogin_Rsp* Event::release_userlogin_rsp() {
  clear_has_userlogin_rsp();
  ::UserLogin_Rsp* temp = userlogin_rsp_;
  userlogin_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_userlogin_rsp(::UserLogin_Rsp* userlogin_rsp) {
  delete userlogin_rsp_;
  userlogin_rsp_ = userlogin_rsp;
  if (userlogin_rsp) {
    set_has_userlogin_rsp();
  } else {
    clear_has_userlogin_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.userLogin_rsp)
}

// optional .UserAuth_Req userAuth_req = 10;
inline bool Event::has_userauth_req() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Event::set_has_userauth_req() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Event::clear_has_userauth_req() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Event::clear_userauth_req() {
  if (userauth_req_ != NULL) userauth_req_->::UserAuth_Req::Clear();
  clear_has_userauth_req();
}
inline const ::UserAuth_Req& Event::userauth_req() const {
  // @@protoc_insertion_point(field_get:Event.userAuth_req)
  return userauth_req_ != NULL ? *userauth_req_ : *default_instance_->userauth_req_;
}
inline ::UserAuth_Req* Event::mutable_userauth_req() {
  set_has_userauth_req();
  if (userauth_req_ == NULL) {
    userauth_req_ = new ::UserAuth_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.userAuth_req)
  return userauth_req_;
}
inline ::UserAuth_Req* Event::release_userauth_req() {
  clear_has_userauth_req();
  ::UserAuth_Req* temp = userauth_req_;
  userauth_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_userauth_req(::UserAuth_Req* userauth_req) {
  delete userauth_req_;
  userauth_req_ = userauth_req;
  if (userauth_req) {
    set_has_userauth_req();
  } else {
    clear_has_userauth_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.userAuth_req)
}

// optional .UserAuth_Rsp userAuth_rsp = 11;
inline bool Event::has_userauth_rsp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Event::set_has_userauth_rsp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Event::clear_has_userauth_rsp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Event::clear_userauth_rsp() {
  if (userauth_rsp_ != NULL) userauth_rsp_->::UserAuth_Rsp::Clear();
  clear_has_userauth_rsp();
}
inline const ::UserAuth_Rsp& Event::userauth_rsp() const {
  // @@protoc_insertion_point(field_get:Event.userAuth_rsp)
  return userauth_rsp_ != NULL ? *userauth_rsp_ : *default_instance_->userauth_rsp_;
}
inline ::UserAuth_Rsp* Event::mutable_userauth_rsp() {
  set_has_userauth_rsp();
  if (userauth_rsp_ == NULL) {
    userauth_rsp_ = new ::UserAuth_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.userAuth_rsp)
  return userauth_rsp_;
}
inline ::UserAuth_Rsp* Event::release_userauth_rsp() {
  clear_has_userauth_rsp();
  ::UserAuth_Rsp* temp = userauth_rsp_;
  userauth_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_userauth_rsp(::UserAuth_Rsp* userauth_rsp) {
  delete userauth_rsp_;
  userauth_rsp_ = userauth_rsp;
  if (userauth_rsp) {
    set_has_userauth_rsp();
  } else {
    clear_has_userauth_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.userAuth_rsp)
}

// optional .SendRemoteUser_Req sendRemoteUser_req = 12;
inline bool Event::has_sendremoteuser_req() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Event::set_has_sendremoteuser_req() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Event::clear_has_sendremoteuser_req() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Event::clear_sendremoteuser_req() {
  if (sendremoteuser_req_ != NULL) sendremoteuser_req_->::SendRemoteUser_Req::Clear();
  clear_has_sendremoteuser_req();
}
inline const ::SendRemoteUser_Req& Event::sendremoteuser_req() const {
  // @@protoc_insertion_point(field_get:Event.sendRemoteUser_req)
  return sendremoteuser_req_ != NULL ? *sendremoteuser_req_ : *default_instance_->sendremoteuser_req_;
}
inline ::SendRemoteUser_Req* Event::mutable_sendremoteuser_req() {
  set_has_sendremoteuser_req();
  if (sendremoteuser_req_ == NULL) {
    sendremoteuser_req_ = new ::SendRemoteUser_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.sendRemoteUser_req)
  return sendremoteuser_req_;
}
inline ::SendRemoteUser_Req* Event::release_sendremoteuser_req() {
  clear_has_sendremoteuser_req();
  ::SendRemoteUser_Req* temp = sendremoteuser_req_;
  sendremoteuser_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_sendremoteuser_req(::SendRemoteUser_Req* sendremoteuser_req) {
  delete sendremoteuser_req_;
  sendremoteuser_req_ = sendremoteuser_req;
  if (sendremoteuser_req) {
    set_has_sendremoteuser_req();
  } else {
    clear_has_sendremoteuser_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.sendRemoteUser_req)
}

// optional .HttpRequestV3 http = 13;
inline bool Event::has_http() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Event::set_has_http() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Event::clear_has_http() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Event::clear_http() {
  if (http_ != NULL) http_->::HttpRequestV3::Clear();
  clear_has_http();
}
inline const ::HttpRequestV3& Event::http() const {
  // @@protoc_insertion_point(field_get:Event.http)
  return http_ != NULL ? *http_ : *default_instance_->http_;
}
inline ::HttpRequestV3* Event::mutable_http() {
  set_has_http();
  if (http_ == NULL) {
    http_ = new ::HttpRequestV3;
  }
  // @@protoc_insertion_point(field_mutable:Event.http)
  return http_;
}
inline ::HttpRequestV3* Event::release_http() {
  clear_has_http();
  ::HttpRequestV3* temp = http_;
  http_ = NULL;
  return temp;
}
inline void Event::set_allocated_http(::HttpRequestV3* http) {
  delete http_;
  http_ = http;
  if (http) {
    set_has_http();
  } else {
    clear_has_http();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.http)
}

// optional .BeLottery be_BeLottery = 14;
inline bool Event::has_be_belottery() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Event::set_has_be_belottery() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Event::clear_has_be_belottery() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Event::clear_be_belottery() {
  if (be_belottery_ != NULL) be_belottery_->::BeLottery::Clear();
  clear_has_be_belottery();
}
inline const ::BeLottery& Event::be_belottery() const {
  // @@protoc_insertion_point(field_get:Event.be_BeLottery)
  return be_belottery_ != NULL ? *be_belottery_ : *default_instance_->be_belottery_;
}
inline ::BeLottery* Event::mutable_be_belottery() {
  set_has_be_belottery();
  if (be_belottery_ == NULL) {
    be_belottery_ = new ::BeLottery;
  }
  // @@protoc_insertion_point(field_mutable:Event.be_BeLottery)
  return be_belottery_;
}
inline ::BeLottery* Event::release_be_belottery() {
  clear_has_be_belottery();
  ::BeLottery* temp = be_belottery_;
  be_belottery_ = NULL;
  return temp;
}
inline void Event::set_allocated_be_belottery(::BeLottery* be_belottery) {
  delete be_belottery_;
  be_belottery_ = be_belottery;
  if (be_belottery) {
    set_has_be_belottery();
  } else {
    clear_has_be_belottery();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.be_BeLottery)
}

// optional .BeUpdateWinInfo be_BeUpdateWinInfo = 15;
inline bool Event::has_be_beupdatewininfo() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Event::set_has_be_beupdatewininfo() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Event::clear_has_be_beupdatewininfo() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Event::clear_be_beupdatewininfo() {
  if (be_beupdatewininfo_ != NULL) be_beupdatewininfo_->::BeUpdateWinInfo::Clear();
  clear_has_be_beupdatewininfo();
}
inline const ::BeUpdateWinInfo& Event::be_beupdatewininfo() const {
  // @@protoc_insertion_point(field_get:Event.be_BeUpdateWinInfo)
  return be_beupdatewininfo_ != NULL ? *be_beupdatewininfo_ : *default_instance_->be_beupdatewininfo_;
}
inline ::BeUpdateWinInfo* Event::mutable_be_beupdatewininfo() {
  set_has_be_beupdatewininfo();
  if (be_beupdatewininfo_ == NULL) {
    be_beupdatewininfo_ = new ::BeUpdateWinInfo;
  }
  // @@protoc_insertion_point(field_mutable:Event.be_BeUpdateWinInfo)
  return be_beupdatewininfo_;
}
inline ::BeUpdateWinInfo* Event::release_be_beupdatewininfo() {
  clear_has_be_beupdatewininfo();
  ::BeUpdateWinInfo* temp = be_beupdatewininfo_;
  be_beupdatewininfo_ = NULL;
  return temp;
}
inline void Event::set_allocated_be_beupdatewininfo(::BeUpdateWinInfo* be_beupdatewininfo) {
  delete be_beupdatewininfo_;
  be_beupdatewininfo_ = be_beupdatewininfo;
  if (be_beupdatewininfo) {
    set_has_be_beupdatewininfo();
  } else {
    clear_has_be_beupdatewininfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.be_BeUpdateWinInfo)
}

// optional .BeUpdateExp be_BeUpdateExp = 16;
inline bool Event::has_be_beupdateexp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Event::set_has_be_beupdateexp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Event::clear_has_be_beupdateexp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Event::clear_be_beupdateexp() {
  if (be_beupdateexp_ != NULL) be_beupdateexp_->::BeUpdateExp::Clear();
  clear_has_be_beupdateexp();
}
inline const ::BeUpdateExp& Event::be_beupdateexp() const {
  // @@protoc_insertion_point(field_get:Event.be_BeUpdateExp)
  return be_beupdateexp_ != NULL ? *be_beupdateexp_ : *default_instance_->be_beupdateexp_;
}
inline ::BeUpdateExp* Event::mutable_be_beupdateexp() {
  set_has_be_beupdateexp();
  if (be_beupdateexp_ == NULL) {
    be_beupdateexp_ = new ::BeUpdateExp;
  }
  // @@protoc_insertion_point(field_mutable:Event.be_BeUpdateExp)
  return be_beupdateexp_;
}
inline ::BeUpdateExp* Event::release_be_beupdateexp() {
  clear_has_be_beupdateexp();
  ::BeUpdateExp* temp = be_beupdateexp_;
  be_beupdateexp_ = NULL;
  return temp;
}
inline void Event::set_allocated_be_beupdateexp(::BeUpdateExp* be_beupdateexp) {
  delete be_beupdateexp_;
  be_beupdateexp_ = be_beupdateexp;
  if (be_beupdateexp) {
    set_has_be_beupdateexp();
  } else {
    clear_has_be_beupdateexp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.be_BeUpdateExp)
}

// optional .BeUpdateTool be_BeUpdateTool = 17;
inline bool Event::has_be_beupdatetool() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Event::set_has_be_beupdatetool() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Event::clear_has_be_beupdatetool() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Event::clear_be_beupdatetool() {
  if (be_beupdatetool_ != NULL) be_beupdatetool_->::BeUpdateTool::Clear();
  clear_has_be_beupdatetool();
}
inline const ::BeUpdateTool& Event::be_beupdatetool() const {
  // @@protoc_insertion_point(field_get:Event.be_BeUpdateTool)
  return be_beupdatetool_ != NULL ? *be_beupdatetool_ : *default_instance_->be_beupdatetool_;
}
inline ::BeUpdateTool* Event::mutable_be_beupdatetool() {
  set_has_be_beupdatetool();
  if (be_beupdatetool_ == NULL) {
    be_beupdatetool_ = new ::BeUpdateTool;
  }
  // @@protoc_insertion_point(field_mutable:Event.be_BeUpdateTool)
  return be_beupdatetool_;
}
inline ::BeUpdateTool* Event::release_be_beupdatetool() {
  clear_has_be_beupdatetool();
  ::BeUpdateTool* temp = be_beupdatetool_;
  be_beupdatetool_ = NULL;
  return temp;
}
inline void Event::set_allocated_be_beupdatetool(::BeUpdateTool* be_beupdatetool) {
  delete be_beupdatetool_;
  be_beupdatetool_ = be_beupdatetool;
  if (be_beupdatetool) {
    set_has_be_beupdatetool();
  } else {
    clear_has_be_beupdatetool();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.be_BeUpdateTool)
}

// optional .DpNormalResult dp_DpNormalResult = 18;
inline bool Event::has_dp_dpnormalresult() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Event::set_has_dp_dpnormalresult() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Event::clear_has_dp_dpnormalresult() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Event::clear_dp_dpnormalresult() {
  if (dp_dpnormalresult_ != NULL) dp_dpnormalresult_->::DpNormalResult::Clear();
  clear_has_dp_dpnormalresult();
}
inline const ::DpNormalResult& Event::dp_dpnormalresult() const {
  // @@protoc_insertion_point(field_get:Event.dp_DpNormalResult)
  return dp_dpnormalresult_ != NULL ? *dp_dpnormalresult_ : *default_instance_->dp_dpnormalresult_;
}
inline ::DpNormalResult* Event::mutable_dp_dpnormalresult() {
  set_has_dp_dpnormalresult();
  if (dp_dpnormalresult_ == NULL) {
    dp_dpnormalresult_ = new ::DpNormalResult;
  }
  // @@protoc_insertion_point(field_mutable:Event.dp_DpNormalResult)
  return dp_dpnormalresult_;
}
inline ::DpNormalResult* Event::release_dp_dpnormalresult() {
  clear_has_dp_dpnormalresult();
  ::DpNormalResult* temp = dp_dpnormalresult_;
  dp_dpnormalresult_ = NULL;
  return temp;
}
inline void Event::set_allocated_dp_dpnormalresult(::DpNormalResult* dp_dpnormalresult) {
  delete dp_dpnormalresult_;
  dp_dpnormalresult_ = dp_dpnormalresult;
  if (dp_dpnormalresult) {
    set_has_dp_dpnormalresult();
  } else {
    clear_has_dp_dpnormalresult();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.dp_DpNormalResult)
}

// optional .LotteryTimer lotteryTimer = 19;
inline bool Event::has_lotterytimer() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Event::set_has_lotterytimer() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Event::clear_has_lotterytimer() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Event::clear_lotterytimer() {
  if (lotterytimer_ != NULL) lotterytimer_->::LotteryTimer::Clear();
  clear_has_lotterytimer();
}
inline const ::LotteryTimer& Event::lotterytimer() const {
  // @@protoc_insertion_point(field_get:Event.lotteryTimer)
  return lotterytimer_ != NULL ? *lotterytimer_ : *default_instance_->lotterytimer_;
}
inline ::LotteryTimer* Event::mutable_lotterytimer() {
  set_has_lotterytimer();
  if (lotterytimer_ == NULL) {
    lotterytimer_ = new ::LotteryTimer;
  }
  // @@protoc_insertion_point(field_mutable:Event.lotteryTimer)
  return lotterytimer_;
}
inline ::LotteryTimer* Event::release_lotterytimer() {
  clear_has_lotterytimer();
  ::LotteryTimer* temp = lotterytimer_;
  lotterytimer_ = NULL;
  return temp;
}
inline void Event::set_allocated_lotterytimer(::LotteryTimer* lotterytimer) {
  delete lotterytimer_;
  lotterytimer_ = lotterytimer;
  if (lotterytimer) {
    set_has_lotterytimer();
  } else {
    clear_has_lotterytimer();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.lotteryTimer)
}

// optional .BeUpdateBattleCnt be_BeUpdateBattleCnt = 20;
inline bool Event::has_be_beupdatebattlecnt() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Event::set_has_be_beupdatebattlecnt() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Event::clear_has_be_beupdatebattlecnt() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Event::clear_be_beupdatebattlecnt() {
  if (be_beupdatebattlecnt_ != NULL) be_beupdatebattlecnt_->::BeUpdateBattleCnt::Clear();
  clear_has_be_beupdatebattlecnt();
}
inline const ::BeUpdateBattleCnt& Event::be_beupdatebattlecnt() const {
  // @@protoc_insertion_point(field_get:Event.be_BeUpdateBattleCnt)
  return be_beupdatebattlecnt_ != NULL ? *be_beupdatebattlecnt_ : *default_instance_->be_beupdatebattlecnt_;
}
inline ::BeUpdateBattleCnt* Event::mutable_be_beupdatebattlecnt() {
  set_has_be_beupdatebattlecnt();
  if (be_beupdatebattlecnt_ == NULL) {
    be_beupdatebattlecnt_ = new ::BeUpdateBattleCnt;
  }
  // @@protoc_insertion_point(field_mutable:Event.be_BeUpdateBattleCnt)
  return be_beupdatebattlecnt_;
}
inline ::BeUpdateBattleCnt* Event::release_be_beupdatebattlecnt() {
  clear_has_be_beupdatebattlecnt();
  ::BeUpdateBattleCnt* temp = be_beupdatebattlecnt_;
  be_beupdatebattlecnt_ = NULL;
  return temp;
}
inline void Event::set_allocated_be_beupdatebattlecnt(::BeUpdateBattleCnt* be_beupdatebattlecnt) {
  delete be_beupdatebattlecnt_;
  be_beupdatebattlecnt_ = be_beupdatebattlecnt;
  if (be_beupdatebattlecnt) {
    set_has_be_beupdatebattlecnt();
  } else {
    clear_has_be_beupdatebattlecnt();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.be_BeUpdateBattleCnt)
}

// optional .WG_UserLeave wg_UserLeave = 21;
inline bool Event::has_wg_userleave() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Event::set_has_wg_userleave() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Event::clear_has_wg_userleave() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Event::clear_wg_userleave() {
  if (wg_userleave_ != NULL) wg_userleave_->::WG_UserLeave::Clear();
  clear_has_wg_userleave();
}
inline const ::WG_UserLeave& Event::wg_userleave() const {
  // @@protoc_insertion_point(field_get:Event.wg_UserLeave)
  return wg_userleave_ != NULL ? *wg_userleave_ : *default_instance_->wg_userleave_;
}
inline ::WG_UserLeave* Event::mutable_wg_userleave() {
  set_has_wg_userleave();
  if (wg_userleave_ == NULL) {
    wg_userleave_ = new ::WG_UserLeave;
  }
  // @@protoc_insertion_point(field_mutable:Event.wg_UserLeave)
  return wg_userleave_;
}
inline ::WG_UserLeave* Event::release_wg_userleave() {
  clear_has_wg_userleave();
  ::WG_UserLeave* temp = wg_userleave_;
  wg_userleave_ = NULL;
  return temp;
}
inline void Event::set_allocated_wg_userleave(::WG_UserLeave* wg_userleave) {
  delete wg_userleave_;
  wg_userleave_ = wg_userleave;
  if (wg_userleave) {
    set_has_wg_userleave();
  } else {
    clear_has_wg_userleave();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.wg_UserLeave)
}

// optional .GWG_FriendRequest friendinfo = 22;
inline bool Event::has_friendinfo() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Event::set_has_friendinfo() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Event::clear_has_friendinfo() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Event::clear_friendinfo() {
  if (friendinfo_ != NULL) friendinfo_->::GWG_FriendRequest::Clear();
  clear_has_friendinfo();
}
inline const ::GWG_FriendRequest& Event::friendinfo() const {
  // @@protoc_insertion_point(field_get:Event.friendinfo)
  return friendinfo_ != NULL ? *friendinfo_ : *default_instance_->friendinfo_;
}
inline ::GWG_FriendRequest* Event::mutable_friendinfo() {
  set_has_friendinfo();
  if (friendinfo_ == NULL) {
    friendinfo_ = new ::GWG_FriendRequest;
  }
  // @@protoc_insertion_point(field_mutable:Event.friendinfo)
  return friendinfo_;
}
inline ::GWG_FriendRequest* Event::release_friendinfo() {
  clear_has_friendinfo();
  ::GWG_FriendRequest* temp = friendinfo_;
  friendinfo_ = NULL;
  return temp;
}
inline void Event::set_allocated_friendinfo(::GWG_FriendRequest* friendinfo) {
  delete friendinfo_;
  friendinfo_ = friendinfo;
  if (friendinfo) {
    set_has_friendinfo();
  } else {
    clear_has_friendinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.friendinfo)
}

// optional .ForwardInfo forwardinfo = 23;
inline bool Event::has_forwardinfo() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Event::set_has_forwardinfo() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Event::clear_has_forwardinfo() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Event::clear_forwardinfo() {
  if (forwardinfo_ != NULL) forwardinfo_->::ForwardInfo::Clear();
  clear_has_forwardinfo();
}
inline const ::ForwardInfo& Event::forwardinfo() const {
  // @@protoc_insertion_point(field_get:Event.forwardinfo)
  return forwardinfo_ != NULL ? *forwardinfo_ : *default_instance_->forwardinfo_;
}
inline ::ForwardInfo* Event::mutable_forwardinfo() {
  set_has_forwardinfo();
  if (forwardinfo_ == NULL) {
    forwardinfo_ = new ::ForwardInfo;
  }
  // @@protoc_insertion_point(field_mutable:Event.forwardinfo)
  return forwardinfo_;
}
inline ::ForwardInfo* Event::release_forwardinfo() {
  clear_has_forwardinfo();
  ::ForwardInfo* temp = forwardinfo_;
  forwardinfo_ = NULL;
  return temp;
}
inline void Event::set_allocated_forwardinfo(::ForwardInfo* forwardinfo) {
  delete forwardinfo_;
  forwardinfo_ = forwardinfo;
  if (forwardinfo) {
    set_has_forwardinfo();
  } else {
    clear_has_forwardinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.forwardinfo)
}

// optional .Admin_AddExp_Req adminAddExp_req = 33;
inline bool Event::has_adminaddexp_req() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Event::set_has_adminaddexp_req() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Event::clear_has_adminaddexp_req() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Event::clear_adminaddexp_req() {
  if (adminaddexp_req_ != NULL) adminaddexp_req_->::Admin_AddExp_Req::Clear();
  clear_has_adminaddexp_req();
}
inline const ::Admin_AddExp_Req& Event::adminaddexp_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddExp_req)
  return adminaddexp_req_ != NULL ? *adminaddexp_req_ : *default_instance_->adminaddexp_req_;
}
inline ::Admin_AddExp_Req* Event::mutable_adminaddexp_req() {
  set_has_adminaddexp_req();
  if (adminaddexp_req_ == NULL) {
    adminaddexp_req_ = new ::Admin_AddExp_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddExp_req)
  return adminaddexp_req_;
}
inline ::Admin_AddExp_Req* Event::release_adminaddexp_req() {
  clear_has_adminaddexp_req();
  ::Admin_AddExp_Req* temp = adminaddexp_req_;
  adminaddexp_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddexp_req(::Admin_AddExp_Req* adminaddexp_req) {
  delete adminaddexp_req_;
  adminaddexp_req_ = adminaddexp_req;
  if (adminaddexp_req) {
    set_has_adminaddexp_req();
  } else {
    clear_has_adminaddexp_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddExp_req)
}

// optional .Admin_AddExp_Rsp adminAddExp_rsp = 34;
inline bool Event::has_adminaddexp_rsp() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Event::set_has_adminaddexp_rsp() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Event::clear_has_adminaddexp_rsp() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Event::clear_adminaddexp_rsp() {
  if (adminaddexp_rsp_ != NULL) adminaddexp_rsp_->::Admin_AddExp_Rsp::Clear();
  clear_has_adminaddexp_rsp();
}
inline const ::Admin_AddExp_Rsp& Event::adminaddexp_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddExp_rsp)
  return adminaddexp_rsp_ != NULL ? *adminaddexp_rsp_ : *default_instance_->adminaddexp_rsp_;
}
inline ::Admin_AddExp_Rsp* Event::mutable_adminaddexp_rsp() {
  set_has_adminaddexp_rsp();
  if (adminaddexp_rsp_ == NULL) {
    adminaddexp_rsp_ = new ::Admin_AddExp_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddExp_rsp)
  return adminaddexp_rsp_;
}
inline ::Admin_AddExp_Rsp* Event::release_adminaddexp_rsp() {
  clear_has_adminaddexp_rsp();
  ::Admin_AddExp_Rsp* temp = adminaddexp_rsp_;
  adminaddexp_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddexp_rsp(::Admin_AddExp_Rsp* adminaddexp_rsp) {
  delete adminaddexp_rsp_;
  adminaddexp_rsp_ = adminaddexp_rsp;
  if (adminaddexp_rsp) {
    set_has_adminaddexp_rsp();
  } else {
    clear_has_adminaddexp_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddExp_rsp)
}

// optional .Admin_AddGold_Req adminAddGold_req = 35;
inline bool Event::has_adminaddgold_req() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Event::set_has_adminaddgold_req() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Event::clear_has_adminaddgold_req() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Event::clear_adminaddgold_req() {
  if (adminaddgold_req_ != NULL) adminaddgold_req_->::Admin_AddGold_Req::Clear();
  clear_has_adminaddgold_req();
}
inline const ::Admin_AddGold_Req& Event::adminaddgold_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddGold_req)
  return adminaddgold_req_ != NULL ? *adminaddgold_req_ : *default_instance_->adminaddgold_req_;
}
inline ::Admin_AddGold_Req* Event::mutable_adminaddgold_req() {
  set_has_adminaddgold_req();
  if (adminaddgold_req_ == NULL) {
    adminaddgold_req_ = new ::Admin_AddGold_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddGold_req)
  return adminaddgold_req_;
}
inline ::Admin_AddGold_Req* Event::release_adminaddgold_req() {
  clear_has_adminaddgold_req();
  ::Admin_AddGold_Req* temp = adminaddgold_req_;
  adminaddgold_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddgold_req(::Admin_AddGold_Req* adminaddgold_req) {
  delete adminaddgold_req_;
  adminaddgold_req_ = adminaddgold_req;
  if (adminaddgold_req) {
    set_has_adminaddgold_req();
  } else {
    clear_has_adminaddgold_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddGold_req)
}

// optional .Admin_AddGold_Rsp adminAddGold_rsp = 36;
inline bool Event::has_adminaddgold_rsp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Event::set_has_adminaddgold_rsp() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Event::clear_has_adminaddgold_rsp() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Event::clear_adminaddgold_rsp() {
  if (adminaddgold_rsp_ != NULL) adminaddgold_rsp_->::Admin_AddGold_Rsp::Clear();
  clear_has_adminaddgold_rsp();
}
inline const ::Admin_AddGold_Rsp& Event::adminaddgold_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddGold_rsp)
  return adminaddgold_rsp_ != NULL ? *adminaddgold_rsp_ : *default_instance_->adminaddgold_rsp_;
}
inline ::Admin_AddGold_Rsp* Event::mutable_adminaddgold_rsp() {
  set_has_adminaddgold_rsp();
  if (adminaddgold_rsp_ == NULL) {
    adminaddgold_rsp_ = new ::Admin_AddGold_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddGold_rsp)
  return adminaddgold_rsp_;
}
inline ::Admin_AddGold_Rsp* Event::release_adminaddgold_rsp() {
  clear_has_adminaddgold_rsp();
  ::Admin_AddGold_Rsp* temp = adminaddgold_rsp_;
  adminaddgold_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddgold_rsp(::Admin_AddGold_Rsp* adminaddgold_rsp) {
  delete adminaddgold_rsp_;
  adminaddgold_rsp_ = adminaddgold_rsp;
  if (adminaddgold_rsp) {
    set_has_adminaddgold_rsp();
  } else {
    clear_has_adminaddgold_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddGold_rsp)
}

// optional .Admin_SetLevel_Req adminSetLevel_req = 37;
inline bool Event::has_adminsetlevel_req() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Event::set_has_adminsetlevel_req() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Event::clear_has_adminsetlevel_req() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Event::clear_adminsetlevel_req() {
  if (adminsetlevel_req_ != NULL) adminsetlevel_req_->::Admin_SetLevel_Req::Clear();
  clear_has_adminsetlevel_req();
}
inline const ::Admin_SetLevel_Req& Event::adminsetlevel_req() const {
  // @@protoc_insertion_point(field_get:Event.adminSetLevel_req)
  return adminsetlevel_req_ != NULL ? *adminsetlevel_req_ : *default_instance_->adminsetlevel_req_;
}
inline ::Admin_SetLevel_Req* Event::mutable_adminsetlevel_req() {
  set_has_adminsetlevel_req();
  if (adminsetlevel_req_ == NULL) {
    adminsetlevel_req_ = new ::Admin_SetLevel_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetLevel_req)
  return adminsetlevel_req_;
}
inline ::Admin_SetLevel_Req* Event::release_adminsetlevel_req() {
  clear_has_adminsetlevel_req();
  ::Admin_SetLevel_Req* temp = adminsetlevel_req_;
  adminsetlevel_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetlevel_req(::Admin_SetLevel_Req* adminsetlevel_req) {
  delete adminsetlevel_req_;
  adminsetlevel_req_ = adminsetlevel_req;
  if (adminsetlevel_req) {
    set_has_adminsetlevel_req();
  } else {
    clear_has_adminsetlevel_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetLevel_req)
}

// optional .Admin_SetLevel_Rsp adminSetLevel_rsp = 38;
inline bool Event::has_adminsetlevel_rsp() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Event::set_has_adminsetlevel_rsp() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Event::clear_has_adminsetlevel_rsp() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Event::clear_adminsetlevel_rsp() {
  if (adminsetlevel_rsp_ != NULL) adminsetlevel_rsp_->::Admin_SetLevel_Rsp::Clear();
  clear_has_adminsetlevel_rsp();
}
inline const ::Admin_SetLevel_Rsp& Event::adminsetlevel_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminSetLevel_rsp)
  return adminsetlevel_rsp_ != NULL ? *adminsetlevel_rsp_ : *default_instance_->adminsetlevel_rsp_;
}
inline ::Admin_SetLevel_Rsp* Event::mutable_adminsetlevel_rsp() {
  set_has_adminsetlevel_rsp();
  if (adminsetlevel_rsp_ == NULL) {
    adminsetlevel_rsp_ = new ::Admin_SetLevel_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetLevel_rsp)
  return adminsetlevel_rsp_;
}
inline ::Admin_SetLevel_Rsp* Event::release_adminsetlevel_rsp() {
  clear_has_adminsetlevel_rsp();
  ::Admin_SetLevel_Rsp* temp = adminsetlevel_rsp_;
  adminsetlevel_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetlevel_rsp(::Admin_SetLevel_Rsp* adminsetlevel_rsp) {
  delete adminsetlevel_rsp_;
  adminsetlevel_rsp_ = adminsetlevel_rsp;
  if (adminsetlevel_rsp) {
    set_has_adminsetlevel_rsp();
  } else {
    clear_has_adminsetlevel_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetLevel_rsp)
}

// optional .Admin_AddProp_Req adminAddProp_req = 39;
inline bool Event::has_adminaddprop_req() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Event::set_has_adminaddprop_req() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Event::clear_has_adminaddprop_req() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Event::clear_adminaddprop_req() {
  if (adminaddprop_req_ != NULL) adminaddprop_req_->::Admin_AddProp_Req::Clear();
  clear_has_adminaddprop_req();
}
inline const ::Admin_AddProp_Req& Event::adminaddprop_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddProp_req)
  return adminaddprop_req_ != NULL ? *adminaddprop_req_ : *default_instance_->adminaddprop_req_;
}
inline ::Admin_AddProp_Req* Event::mutable_adminaddprop_req() {
  set_has_adminaddprop_req();
  if (adminaddprop_req_ == NULL) {
    adminaddprop_req_ = new ::Admin_AddProp_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddProp_req)
  return adminaddprop_req_;
}
inline ::Admin_AddProp_Req* Event::release_adminaddprop_req() {
  clear_has_adminaddprop_req();
  ::Admin_AddProp_Req* temp = adminaddprop_req_;
  adminaddprop_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddprop_req(::Admin_AddProp_Req* adminaddprop_req) {
  delete adminaddprop_req_;
  adminaddprop_req_ = adminaddprop_req;
  if (adminaddprop_req) {
    set_has_adminaddprop_req();
  } else {
    clear_has_adminaddprop_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddProp_req)
}

// optional .Admin_AddProp_Rsp adminAddProp_rsp = 40;
inline bool Event::has_adminaddprop_rsp() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Event::set_has_adminaddprop_rsp() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Event::clear_has_adminaddprop_rsp() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Event::clear_adminaddprop_rsp() {
  if (adminaddprop_rsp_ != NULL) adminaddprop_rsp_->::Admin_AddProp_Rsp::Clear();
  clear_has_adminaddprop_rsp();
}
inline const ::Admin_AddProp_Rsp& Event::adminaddprop_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddProp_rsp)
  return adminaddprop_rsp_ != NULL ? *adminaddprop_rsp_ : *default_instance_->adminaddprop_rsp_;
}
inline ::Admin_AddProp_Rsp* Event::mutable_adminaddprop_rsp() {
  set_has_adminaddprop_rsp();
  if (adminaddprop_rsp_ == NULL) {
    adminaddprop_rsp_ = new ::Admin_AddProp_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddProp_rsp)
  return adminaddprop_rsp_;
}
inline ::Admin_AddProp_Rsp* Event::release_adminaddprop_rsp() {
  clear_has_adminaddprop_rsp();
  ::Admin_AddProp_Rsp* temp = adminaddprop_rsp_;
  adminaddprop_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddprop_rsp(::Admin_AddProp_Rsp* adminaddprop_rsp) {
  delete adminaddprop_rsp_;
  adminaddprop_rsp_ = adminaddprop_rsp;
  if (adminaddprop_rsp) {
    set_has_adminaddprop_rsp();
  } else {
    clear_has_adminaddprop_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddProp_rsp)
}

// optional .Admin_SetEquip_Req adminSetEquip_req = 41;
inline bool Event::has_adminsetequip_req() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Event::set_has_adminsetequip_req() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Event::clear_has_adminsetequip_req() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Event::clear_adminsetequip_req() {
  if (adminsetequip_req_ != NULL) adminsetequip_req_->::Admin_SetEquip_Req::Clear();
  clear_has_adminsetequip_req();
}
inline const ::Admin_SetEquip_Req& Event::adminsetequip_req() const {
  // @@protoc_insertion_point(field_get:Event.adminSetEquip_req)
  return adminsetequip_req_ != NULL ? *adminsetequip_req_ : *default_instance_->adminsetequip_req_;
}
inline ::Admin_SetEquip_Req* Event::mutable_adminsetequip_req() {
  set_has_adminsetequip_req();
  if (adminsetequip_req_ == NULL) {
    adminsetequip_req_ = new ::Admin_SetEquip_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetEquip_req)
  return adminsetequip_req_;
}
inline ::Admin_SetEquip_Req* Event::release_adminsetequip_req() {
  clear_has_adminsetequip_req();
  ::Admin_SetEquip_Req* temp = adminsetequip_req_;
  adminsetequip_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetequip_req(::Admin_SetEquip_Req* adminsetequip_req) {
  delete adminsetequip_req_;
  adminsetequip_req_ = adminsetequip_req;
  if (adminsetequip_req) {
    set_has_adminsetequip_req();
  } else {
    clear_has_adminsetequip_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetEquip_req)
}

// optional .Admin_SetEquip_Rsp adminSetEquip_rsp = 42;
inline bool Event::has_adminsetequip_rsp() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Event::set_has_adminsetequip_rsp() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Event::clear_has_adminsetequip_rsp() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Event::clear_adminsetequip_rsp() {
  if (adminsetequip_rsp_ != NULL) adminsetequip_rsp_->::Admin_SetEquip_Rsp::Clear();
  clear_has_adminsetequip_rsp();
}
inline const ::Admin_SetEquip_Rsp& Event::adminsetequip_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminSetEquip_rsp)
  return adminsetequip_rsp_ != NULL ? *adminsetequip_rsp_ : *default_instance_->adminsetequip_rsp_;
}
inline ::Admin_SetEquip_Rsp* Event::mutable_adminsetequip_rsp() {
  set_has_adminsetequip_rsp();
  if (adminsetequip_rsp_ == NULL) {
    adminsetequip_rsp_ = new ::Admin_SetEquip_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetEquip_rsp)
  return adminsetequip_rsp_;
}
inline ::Admin_SetEquip_Rsp* Event::release_adminsetequip_rsp() {
  clear_has_adminsetequip_rsp();
  ::Admin_SetEquip_Rsp* temp = adminsetequip_rsp_;
  adminsetequip_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetequip_rsp(::Admin_SetEquip_Rsp* adminsetequip_rsp) {
  delete adminsetequip_rsp_;
  adminsetequip_rsp_ = adminsetequip_rsp;
  if (adminsetequip_rsp) {
    set_has_adminsetequip_rsp();
  } else {
    clear_has_adminsetequip_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetEquip_rsp)
}

// optional .Admin_UserInfo_Req adminUserInfo_req = 43;
inline bool Event::has_adminuserinfo_req() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Event::set_has_adminuserinfo_req() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Event::clear_has_adminuserinfo_req() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Event::clear_adminuserinfo_req() {
  if (adminuserinfo_req_ != NULL) adminuserinfo_req_->::Admin_UserInfo_Req::Clear();
  clear_has_adminuserinfo_req();
}
inline const ::Admin_UserInfo_Req& Event::adminuserinfo_req() const {
  // @@protoc_insertion_point(field_get:Event.adminUserInfo_req)
  return adminuserinfo_req_ != NULL ? *adminuserinfo_req_ : *default_instance_->adminuserinfo_req_;
}
inline ::Admin_UserInfo_Req* Event::mutable_adminuserinfo_req() {
  set_has_adminuserinfo_req();
  if (adminuserinfo_req_ == NULL) {
    adminuserinfo_req_ = new ::Admin_UserInfo_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminUserInfo_req)
  return adminuserinfo_req_;
}
inline ::Admin_UserInfo_Req* Event::release_adminuserinfo_req() {
  clear_has_adminuserinfo_req();
  ::Admin_UserInfo_Req* temp = adminuserinfo_req_;
  adminuserinfo_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminuserinfo_req(::Admin_UserInfo_Req* adminuserinfo_req) {
  delete adminuserinfo_req_;
  adminuserinfo_req_ = adminuserinfo_req;
  if (adminuserinfo_req) {
    set_has_adminuserinfo_req();
  } else {
    clear_has_adminuserinfo_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminUserInfo_req)
}

// optional .Admin_UserInfo_Rsp adminUserInfo_rsp = 44;
inline bool Event::has_adminuserinfo_rsp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Event::set_has_adminuserinfo_rsp() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Event::clear_has_adminuserinfo_rsp() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Event::clear_adminuserinfo_rsp() {
  if (adminuserinfo_rsp_ != NULL) adminuserinfo_rsp_->::Admin_UserInfo_Rsp::Clear();
  clear_has_adminuserinfo_rsp();
}
inline const ::Admin_UserInfo_Rsp& Event::adminuserinfo_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminUserInfo_rsp)
  return adminuserinfo_rsp_ != NULL ? *adminuserinfo_rsp_ : *default_instance_->adminuserinfo_rsp_;
}
inline ::Admin_UserInfo_Rsp* Event::mutable_adminuserinfo_rsp() {
  set_has_adminuserinfo_rsp();
  if (adminuserinfo_rsp_ == NULL) {
    adminuserinfo_rsp_ = new ::Admin_UserInfo_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminUserInfo_rsp)
  return adminuserinfo_rsp_;
}
inline ::Admin_UserInfo_Rsp* Event::release_adminuserinfo_rsp() {
  clear_has_adminuserinfo_rsp();
  ::Admin_UserInfo_Rsp* temp = adminuserinfo_rsp_;
  adminuserinfo_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminuserinfo_rsp(::Admin_UserInfo_Rsp* adminuserinfo_rsp) {
  delete adminuserinfo_rsp_;
  adminuserinfo_rsp_ = adminuserinfo_rsp;
  if (adminuserinfo_rsp) {
    set_has_adminuserinfo_rsp();
  } else {
    clear_has_adminuserinfo_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminUserInfo_rsp)
}

// optional .Admin_DelProp_Req adminDelProp_req = 45;
inline bool Event::has_admindelprop_req() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Event::set_has_admindelprop_req() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Event::clear_has_admindelprop_req() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Event::clear_admindelprop_req() {
  if (admindelprop_req_ != NULL) admindelprop_req_->::Admin_DelProp_Req::Clear();
  clear_has_admindelprop_req();
}
inline const ::Admin_DelProp_Req& Event::admindelprop_req() const {
  // @@protoc_insertion_point(field_get:Event.adminDelProp_req)
  return admindelprop_req_ != NULL ? *admindelprop_req_ : *default_instance_->admindelprop_req_;
}
inline ::Admin_DelProp_Req* Event::mutable_admindelprop_req() {
  set_has_admindelprop_req();
  if (admindelprop_req_ == NULL) {
    admindelprop_req_ = new ::Admin_DelProp_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminDelProp_req)
  return admindelprop_req_;
}
inline ::Admin_DelProp_Req* Event::release_admindelprop_req() {
  clear_has_admindelprop_req();
  ::Admin_DelProp_Req* temp = admindelprop_req_;
  admindelprop_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_admindelprop_req(::Admin_DelProp_Req* admindelprop_req) {
  delete admindelprop_req_;
  admindelprop_req_ = admindelprop_req;
  if (admindelprop_req) {
    set_has_admindelprop_req();
  } else {
    clear_has_admindelprop_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminDelProp_req)
}

// optional .Admin_DelProp_Rsp adminDelProp_rsp = 46;
inline bool Event::has_admindelprop_rsp() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Event::set_has_admindelprop_rsp() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Event::clear_has_admindelprop_rsp() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Event::clear_admindelprop_rsp() {
  if (admindelprop_rsp_ != NULL) admindelprop_rsp_->::Admin_DelProp_Rsp::Clear();
  clear_has_admindelprop_rsp();
}
inline const ::Admin_DelProp_Rsp& Event::admindelprop_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminDelProp_rsp)
  return admindelprop_rsp_ != NULL ? *admindelprop_rsp_ : *default_instance_->admindelprop_rsp_;
}
inline ::Admin_DelProp_Rsp* Event::mutable_admindelprop_rsp() {
  set_has_admindelprop_rsp();
  if (admindelprop_rsp_ == NULL) {
    admindelprop_rsp_ = new ::Admin_DelProp_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminDelProp_rsp)
  return admindelprop_rsp_;
}
inline ::Admin_DelProp_Rsp* Event::release_admindelprop_rsp() {
  clear_has_admindelprop_rsp();
  ::Admin_DelProp_Rsp* temp = admindelprop_rsp_;
  admindelprop_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_admindelprop_rsp(::Admin_DelProp_Rsp* admindelprop_rsp) {
  delete admindelprop_rsp_;
  admindelprop_rsp_ = admindelprop_rsp;
  if (admindelprop_rsp) {
    set_has_admindelprop_rsp();
  } else {
    clear_has_admindelprop_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminDelProp_rsp)
}

// optional .WebBuy webbuy = 47;
inline bool Event::has_webbuy() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Event::set_has_webbuy() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Event::clear_has_webbuy() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Event::clear_webbuy() {
  if (webbuy_ != NULL) webbuy_->::WebBuy::Clear();
  clear_has_webbuy();
}
inline const ::WebBuy& Event::webbuy() const {
  // @@protoc_insertion_point(field_get:Event.webbuy)
  return webbuy_ != NULL ? *webbuy_ : *default_instance_->webbuy_;
}
inline ::WebBuy* Event::mutable_webbuy() {
  set_has_webbuy();
  if (webbuy_ == NULL) {
    webbuy_ = new ::WebBuy;
  }
  // @@protoc_insertion_point(field_mutable:Event.webbuy)
  return webbuy_;
}
inline ::WebBuy* Event::release_webbuy() {
  clear_has_webbuy();
  ::WebBuy* temp = webbuy_;
  webbuy_ = NULL;
  return temp;
}
inline void Event::set_allocated_webbuy(::WebBuy* webbuy) {
  delete webbuy_;
  webbuy_ = webbuy;
  if (webbuy) {
    set_has_webbuy();
  } else {
    clear_has_webbuy();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webbuy)
}

// optional .Admin_RunTask_Req adminRunTask_req = 48;
inline bool Event::has_adminruntask_req() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Event::set_has_adminruntask_req() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Event::clear_has_adminruntask_req() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Event::clear_adminruntask_req() {
  if (adminruntask_req_ != NULL) adminruntask_req_->::Admin_RunTask_Req::Clear();
  clear_has_adminruntask_req();
}
inline const ::Admin_RunTask_Req& Event::adminruntask_req() const {
  // @@protoc_insertion_point(field_get:Event.adminRunTask_req)
  return adminruntask_req_ != NULL ? *adminruntask_req_ : *default_instance_->adminruntask_req_;
}
inline ::Admin_RunTask_Req* Event::mutable_adminruntask_req() {
  set_has_adminruntask_req();
  if (adminruntask_req_ == NULL) {
    adminruntask_req_ = new ::Admin_RunTask_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminRunTask_req)
  return adminruntask_req_;
}
inline ::Admin_RunTask_Req* Event::release_adminruntask_req() {
  clear_has_adminruntask_req();
  ::Admin_RunTask_Req* temp = adminruntask_req_;
  adminruntask_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminruntask_req(::Admin_RunTask_Req* adminruntask_req) {
  delete adminruntask_req_;
  adminruntask_req_ = adminruntask_req;
  if (adminruntask_req) {
    set_has_adminruntask_req();
  } else {
    clear_has_adminruntask_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminRunTask_req)
}

// optional .Admin_RunTask_Rsp adminRunTask_rsp = 49;
inline bool Event::has_adminruntask_rsp() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Event::set_has_adminruntask_rsp() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Event::clear_has_adminruntask_rsp() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Event::clear_adminruntask_rsp() {
  if (adminruntask_rsp_ != NULL) adminruntask_rsp_->::Admin_RunTask_Rsp::Clear();
  clear_has_adminruntask_rsp();
}
inline const ::Admin_RunTask_Rsp& Event::adminruntask_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminRunTask_rsp)
  return adminruntask_rsp_ != NULL ? *adminruntask_rsp_ : *default_instance_->adminruntask_rsp_;
}
inline ::Admin_RunTask_Rsp* Event::mutable_adminruntask_rsp() {
  set_has_adminruntask_rsp();
  if (adminruntask_rsp_ == NULL) {
    adminruntask_rsp_ = new ::Admin_RunTask_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminRunTask_rsp)
  return adminruntask_rsp_;
}
inline ::Admin_RunTask_Rsp* Event::release_adminruntask_rsp() {
  clear_has_adminruntask_rsp();
  ::Admin_RunTask_Rsp* temp = adminruntask_rsp_;
  adminruntask_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminruntask_rsp(::Admin_RunTask_Rsp* adminruntask_rsp) {
  delete adminruntask_rsp_;
  adminruntask_rsp_ = adminruntask_rsp;
  if (adminruntask_rsp) {
    set_has_adminruntask_rsp();
  } else {
    clear_has_adminruntask_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminRunTask_rsp)
}

// optional .Admin_BanChat_Req adminBanChat_req = 50;
inline bool Event::has_adminbanchat_req() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Event::set_has_adminbanchat_req() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Event::clear_has_adminbanchat_req() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Event::clear_adminbanchat_req() {
  if (adminbanchat_req_ != NULL) adminbanchat_req_->::Admin_BanChat_Req::Clear();
  clear_has_adminbanchat_req();
}
inline const ::Admin_BanChat_Req& Event::adminbanchat_req() const {
  // @@protoc_insertion_point(field_get:Event.adminBanChat_req)
  return adminbanchat_req_ != NULL ? *adminbanchat_req_ : *default_instance_->adminbanchat_req_;
}
inline ::Admin_BanChat_Req* Event::mutable_adminbanchat_req() {
  set_has_adminbanchat_req();
  if (adminbanchat_req_ == NULL) {
    adminbanchat_req_ = new ::Admin_BanChat_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminBanChat_req)
  return adminbanchat_req_;
}
inline ::Admin_BanChat_Req* Event::release_adminbanchat_req() {
  clear_has_adminbanchat_req();
  ::Admin_BanChat_Req* temp = adminbanchat_req_;
  adminbanchat_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminbanchat_req(::Admin_BanChat_Req* adminbanchat_req) {
  delete adminbanchat_req_;
  adminbanchat_req_ = adminbanchat_req;
  if (adminbanchat_req) {
    set_has_adminbanchat_req();
  } else {
    clear_has_adminbanchat_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminBanChat_req)
}

// optional .Admin_BanChat_Rsp adminBanChat_rsp = 51;
inline bool Event::has_adminbanchat_rsp() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void Event::set_has_adminbanchat_rsp() {
  _has_bits_[1] |= 0x00000200u;
}
inline void Event::clear_has_adminbanchat_rsp() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void Event::clear_adminbanchat_rsp() {
  if (adminbanchat_rsp_ != NULL) adminbanchat_rsp_->::Admin_BanChat_Rsp::Clear();
  clear_has_adminbanchat_rsp();
}
inline const ::Admin_BanChat_Rsp& Event::adminbanchat_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminBanChat_rsp)
  return adminbanchat_rsp_ != NULL ? *adminbanchat_rsp_ : *default_instance_->adminbanchat_rsp_;
}
inline ::Admin_BanChat_Rsp* Event::mutable_adminbanchat_rsp() {
  set_has_adminbanchat_rsp();
  if (adminbanchat_rsp_ == NULL) {
    adminbanchat_rsp_ = new ::Admin_BanChat_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminBanChat_rsp)
  return adminbanchat_rsp_;
}
inline ::Admin_BanChat_Rsp* Event::release_adminbanchat_rsp() {
  clear_has_adminbanchat_rsp();
  ::Admin_BanChat_Rsp* temp = adminbanchat_rsp_;
  adminbanchat_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminbanchat_rsp(::Admin_BanChat_Rsp* adminbanchat_rsp) {
  delete adminbanchat_rsp_;
  adminbanchat_rsp_ = adminbanchat_rsp;
  if (adminbanchat_rsp) {
    set_has_adminbanchat_rsp();
  } else {
    clear_has_adminbanchat_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminBanChat_rsp)
}

// optional .Admin_BanLogin_Req adminBanLogin_req = 52;
inline bool Event::has_adminbanlogin_req() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void Event::set_has_adminbanlogin_req() {
  _has_bits_[1] |= 0x00000400u;
}
inline void Event::clear_has_adminbanlogin_req() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void Event::clear_adminbanlogin_req() {
  if (adminbanlogin_req_ != NULL) adminbanlogin_req_->::Admin_BanLogin_Req::Clear();
  clear_has_adminbanlogin_req();
}
inline const ::Admin_BanLogin_Req& Event::adminbanlogin_req() const {
  // @@protoc_insertion_point(field_get:Event.adminBanLogin_req)
  return adminbanlogin_req_ != NULL ? *adminbanlogin_req_ : *default_instance_->adminbanlogin_req_;
}
inline ::Admin_BanLogin_Req* Event::mutable_adminbanlogin_req() {
  set_has_adminbanlogin_req();
  if (adminbanlogin_req_ == NULL) {
    adminbanlogin_req_ = new ::Admin_BanLogin_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminBanLogin_req)
  return adminbanlogin_req_;
}
inline ::Admin_BanLogin_Req* Event::release_adminbanlogin_req() {
  clear_has_adminbanlogin_req();
  ::Admin_BanLogin_Req* temp = adminbanlogin_req_;
  adminbanlogin_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminbanlogin_req(::Admin_BanLogin_Req* adminbanlogin_req) {
  delete adminbanlogin_req_;
  adminbanlogin_req_ = adminbanlogin_req;
  if (adminbanlogin_req) {
    set_has_adminbanlogin_req();
  } else {
    clear_has_adminbanlogin_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminBanLogin_req)
}

// optional .Admin_BanLogin_Rsp adminBanLogin_rsp = 53;
inline bool Event::has_adminbanlogin_rsp() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void Event::set_has_adminbanlogin_rsp() {
  _has_bits_[1] |= 0x00000800u;
}
inline void Event::clear_has_adminbanlogin_rsp() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void Event::clear_adminbanlogin_rsp() {
  if (adminbanlogin_rsp_ != NULL) adminbanlogin_rsp_->::Admin_BanLogin_Rsp::Clear();
  clear_has_adminbanlogin_rsp();
}
inline const ::Admin_BanLogin_Rsp& Event::adminbanlogin_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminBanLogin_rsp)
  return adminbanlogin_rsp_ != NULL ? *adminbanlogin_rsp_ : *default_instance_->adminbanlogin_rsp_;
}
inline ::Admin_BanLogin_Rsp* Event::mutable_adminbanlogin_rsp() {
  set_has_adminbanlogin_rsp();
  if (adminbanlogin_rsp_ == NULL) {
    adminbanlogin_rsp_ = new ::Admin_BanLogin_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminBanLogin_rsp)
  return adminbanlogin_rsp_;
}
inline ::Admin_BanLogin_Rsp* Event::release_adminbanlogin_rsp() {
  clear_has_adminbanlogin_rsp();
  ::Admin_BanLogin_Rsp* temp = adminbanlogin_rsp_;
  adminbanlogin_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminbanlogin_rsp(::Admin_BanLogin_Rsp* adminbanlogin_rsp) {
  delete adminbanlogin_rsp_;
  adminbanlogin_rsp_ = adminbanlogin_rsp;
  if (adminbanlogin_rsp) {
    set_has_adminbanlogin_rsp();
  } else {
    clear_has_adminbanlogin_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminBanLogin_rsp)
}

// optional .Admin_AddPoint_Req adminAddPoint_req = 54;
inline bool Event::has_adminaddpoint_req() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void Event::set_has_adminaddpoint_req() {
  _has_bits_[1] |= 0x00001000u;
}
inline void Event::clear_has_adminaddpoint_req() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void Event::clear_adminaddpoint_req() {
  if (adminaddpoint_req_ != NULL) adminaddpoint_req_->::Admin_AddPoint_Req::Clear();
  clear_has_adminaddpoint_req();
}
inline const ::Admin_AddPoint_Req& Event::adminaddpoint_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddPoint_req)
  return adminaddpoint_req_ != NULL ? *adminaddpoint_req_ : *default_instance_->adminaddpoint_req_;
}
inline ::Admin_AddPoint_Req* Event::mutable_adminaddpoint_req() {
  set_has_adminaddpoint_req();
  if (adminaddpoint_req_ == NULL) {
    adminaddpoint_req_ = new ::Admin_AddPoint_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddPoint_req)
  return adminaddpoint_req_;
}
inline ::Admin_AddPoint_Req* Event::release_adminaddpoint_req() {
  clear_has_adminaddpoint_req();
  ::Admin_AddPoint_Req* temp = adminaddpoint_req_;
  adminaddpoint_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddpoint_req(::Admin_AddPoint_Req* adminaddpoint_req) {
  delete adminaddpoint_req_;
  adminaddpoint_req_ = adminaddpoint_req;
  if (adminaddpoint_req) {
    set_has_adminaddpoint_req();
  } else {
    clear_has_adminaddpoint_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddPoint_req)
}

// optional .Admin_AddPoint_Rsp adminAddPoint_rsp = 55;
inline bool Event::has_adminaddpoint_rsp() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void Event::set_has_adminaddpoint_rsp() {
  _has_bits_[1] |= 0x00002000u;
}
inline void Event::clear_has_adminaddpoint_rsp() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void Event::clear_adminaddpoint_rsp() {
  if (adminaddpoint_rsp_ != NULL) adminaddpoint_rsp_->::Admin_AddPoint_Rsp::Clear();
  clear_has_adminaddpoint_rsp();
}
inline const ::Admin_AddPoint_Rsp& Event::adminaddpoint_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddPoint_rsp)
  return adminaddpoint_rsp_ != NULL ? *adminaddpoint_rsp_ : *default_instance_->adminaddpoint_rsp_;
}
inline ::Admin_AddPoint_Rsp* Event::mutable_adminaddpoint_rsp() {
  set_has_adminaddpoint_rsp();
  if (adminaddpoint_rsp_ == NULL) {
    adminaddpoint_rsp_ = new ::Admin_AddPoint_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddPoint_rsp)
  return adminaddpoint_rsp_;
}
inline ::Admin_AddPoint_Rsp* Event::release_adminaddpoint_rsp() {
  clear_has_adminaddpoint_rsp();
  ::Admin_AddPoint_Rsp* temp = adminaddpoint_rsp_;
  adminaddpoint_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddpoint_rsp(::Admin_AddPoint_Rsp* adminaddpoint_rsp) {
  delete adminaddpoint_rsp_;
  adminaddpoint_rsp_ = adminaddpoint_rsp;
  if (adminaddpoint_rsp) {
    set_has_adminaddpoint_rsp();
  } else {
    clear_has_adminaddpoint_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddPoint_rsp)
}

// optional .Admin_AddIndate_Req adminAddIndate_req = 56;
inline bool Event::has_adminaddindate_req() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void Event::set_has_adminaddindate_req() {
  _has_bits_[1] |= 0x00004000u;
}
inline void Event::clear_has_adminaddindate_req() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void Event::clear_adminaddindate_req() {
  if (adminaddindate_req_ != NULL) adminaddindate_req_->::Admin_AddIndate_Req::Clear();
  clear_has_adminaddindate_req();
}
inline const ::Admin_AddIndate_Req& Event::adminaddindate_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddIndate_req)
  return adminaddindate_req_ != NULL ? *adminaddindate_req_ : *default_instance_->adminaddindate_req_;
}
inline ::Admin_AddIndate_Req* Event::mutable_adminaddindate_req() {
  set_has_adminaddindate_req();
  if (adminaddindate_req_ == NULL) {
    adminaddindate_req_ = new ::Admin_AddIndate_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddIndate_req)
  return adminaddindate_req_;
}
inline ::Admin_AddIndate_Req* Event::release_adminaddindate_req() {
  clear_has_adminaddindate_req();
  ::Admin_AddIndate_Req* temp = adminaddindate_req_;
  adminaddindate_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddindate_req(::Admin_AddIndate_Req* adminaddindate_req) {
  delete adminaddindate_req_;
  adminaddindate_req_ = adminaddindate_req;
  if (adminaddindate_req) {
    set_has_adminaddindate_req();
  } else {
    clear_has_adminaddindate_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddIndate_req)
}

// optional .Admin_AddIndate_Rsp adminAddIndate_rsp = 57;
inline bool Event::has_adminaddindate_rsp() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void Event::set_has_adminaddindate_rsp() {
  _has_bits_[1] |= 0x00008000u;
}
inline void Event::clear_has_adminaddindate_rsp() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void Event::clear_adminaddindate_rsp() {
  if (adminaddindate_rsp_ != NULL) adminaddindate_rsp_->::Admin_AddIndate_Rsp::Clear();
  clear_has_adminaddindate_rsp();
}
inline const ::Admin_AddIndate_Rsp& Event::adminaddindate_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddIndate_rsp)
  return adminaddindate_rsp_ != NULL ? *adminaddindate_rsp_ : *default_instance_->adminaddindate_rsp_;
}
inline ::Admin_AddIndate_Rsp* Event::mutable_adminaddindate_rsp() {
  set_has_adminaddindate_rsp();
  if (adminaddindate_rsp_ == NULL) {
    adminaddindate_rsp_ = new ::Admin_AddIndate_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddIndate_rsp)
  return adminaddindate_rsp_;
}
inline ::Admin_AddIndate_Rsp* Event::release_adminaddindate_rsp() {
  clear_has_adminaddindate_rsp();
  ::Admin_AddIndate_Rsp* temp = adminaddindate_rsp_;
  adminaddindate_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddindate_rsp(::Admin_AddIndate_Rsp* adminaddindate_rsp) {
  delete adminaddindate_rsp_;
  adminaddindate_rsp_ = adminaddindate_rsp;
  if (adminaddindate_rsp) {
    set_has_adminaddindate_rsp();
  } else {
    clear_has_adminaddindate_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddIndate_rsp)
}

// optional .Admin_FreshUser_Req adminFreshUser_req = 58;
inline bool Event::has_adminfreshuser_req() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void Event::set_has_adminfreshuser_req() {
  _has_bits_[1] |= 0x00010000u;
}
inline void Event::clear_has_adminfreshuser_req() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void Event::clear_adminfreshuser_req() {
  if (adminfreshuser_req_ != NULL) adminfreshuser_req_->::Admin_FreshUser_Req::Clear();
  clear_has_adminfreshuser_req();
}
inline const ::Admin_FreshUser_Req& Event::adminfreshuser_req() const {
  // @@protoc_insertion_point(field_get:Event.adminFreshUser_req)
  return adminfreshuser_req_ != NULL ? *adminfreshuser_req_ : *default_instance_->adminfreshuser_req_;
}
inline ::Admin_FreshUser_Req* Event::mutable_adminfreshuser_req() {
  set_has_adminfreshuser_req();
  if (adminfreshuser_req_ == NULL) {
    adminfreshuser_req_ = new ::Admin_FreshUser_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminFreshUser_req)
  return adminfreshuser_req_;
}
inline ::Admin_FreshUser_Req* Event::release_adminfreshuser_req() {
  clear_has_adminfreshuser_req();
  ::Admin_FreshUser_Req* temp = adminfreshuser_req_;
  adminfreshuser_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminfreshuser_req(::Admin_FreshUser_Req* adminfreshuser_req) {
  delete adminfreshuser_req_;
  adminfreshuser_req_ = adminfreshuser_req;
  if (adminfreshuser_req) {
    set_has_adminfreshuser_req();
  } else {
    clear_has_adminfreshuser_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminFreshUser_req)
}

// optional .Admin_FreshUser_Rsp adminFreshUser_rsp = 59;
inline bool Event::has_adminfreshuser_rsp() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void Event::set_has_adminfreshuser_rsp() {
  _has_bits_[1] |= 0x00020000u;
}
inline void Event::clear_has_adminfreshuser_rsp() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void Event::clear_adminfreshuser_rsp() {
  if (adminfreshuser_rsp_ != NULL) adminfreshuser_rsp_->::Admin_FreshUser_Rsp::Clear();
  clear_has_adminfreshuser_rsp();
}
inline const ::Admin_FreshUser_Rsp& Event::adminfreshuser_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminFreshUser_rsp)
  return adminfreshuser_rsp_ != NULL ? *adminfreshuser_rsp_ : *default_instance_->adminfreshuser_rsp_;
}
inline ::Admin_FreshUser_Rsp* Event::mutable_adminfreshuser_rsp() {
  set_has_adminfreshuser_rsp();
  if (adminfreshuser_rsp_ == NULL) {
    adminfreshuser_rsp_ = new ::Admin_FreshUser_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminFreshUser_rsp)
  return adminfreshuser_rsp_;
}
inline ::Admin_FreshUser_Rsp* Event::release_adminfreshuser_rsp() {
  clear_has_adminfreshuser_rsp();
  ::Admin_FreshUser_Rsp* temp = adminfreshuser_rsp_;
  adminfreshuser_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminfreshuser_rsp(::Admin_FreshUser_Rsp* adminfreshuser_rsp) {
  delete adminfreshuser_rsp_;
  adminfreshuser_rsp_ = adminfreshuser_rsp;
  if (adminfreshuser_rsp) {
    set_has_adminfreshuser_rsp();
  } else {
    clear_has_adminfreshuser_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminFreshUser_rsp)
}

// optional .Admin_AddMedal_Req adminAddMedal_req = 60;
inline bool Event::has_adminaddmedal_req() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void Event::set_has_adminaddmedal_req() {
  _has_bits_[1] |= 0x00040000u;
}
inline void Event::clear_has_adminaddmedal_req() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void Event::clear_adminaddmedal_req() {
  if (adminaddmedal_req_ != NULL) adminaddmedal_req_->::Admin_AddMedal_Req::Clear();
  clear_has_adminaddmedal_req();
}
inline const ::Admin_AddMedal_Req& Event::adminaddmedal_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddMedal_req)
  return adminaddmedal_req_ != NULL ? *adminaddmedal_req_ : *default_instance_->adminaddmedal_req_;
}
inline ::Admin_AddMedal_Req* Event::mutable_adminaddmedal_req() {
  set_has_adminaddmedal_req();
  if (adminaddmedal_req_ == NULL) {
    adminaddmedal_req_ = new ::Admin_AddMedal_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddMedal_req)
  return adminaddmedal_req_;
}
inline ::Admin_AddMedal_Req* Event::release_adminaddmedal_req() {
  clear_has_adminaddmedal_req();
  ::Admin_AddMedal_Req* temp = adminaddmedal_req_;
  adminaddmedal_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddmedal_req(::Admin_AddMedal_Req* adminaddmedal_req) {
  delete adminaddmedal_req_;
  adminaddmedal_req_ = adminaddmedal_req;
  if (adminaddmedal_req) {
    set_has_adminaddmedal_req();
  } else {
    clear_has_adminaddmedal_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddMedal_req)
}

// optional .Admin_AddMedal_Rsp adminAddMedal_rsp = 61;
inline bool Event::has_adminaddmedal_rsp() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void Event::set_has_adminaddmedal_rsp() {
  _has_bits_[1] |= 0x00080000u;
}
inline void Event::clear_has_adminaddmedal_rsp() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void Event::clear_adminaddmedal_rsp() {
  if (adminaddmedal_rsp_ != NULL) adminaddmedal_rsp_->::Admin_AddMedal_Rsp::Clear();
  clear_has_adminaddmedal_rsp();
}
inline const ::Admin_AddMedal_Rsp& Event::adminaddmedal_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddMedal_rsp)
  return adminaddmedal_rsp_ != NULL ? *adminaddmedal_rsp_ : *default_instance_->adminaddmedal_rsp_;
}
inline ::Admin_AddMedal_Rsp* Event::mutable_adminaddmedal_rsp() {
  set_has_adminaddmedal_rsp();
  if (adminaddmedal_rsp_ == NULL) {
    adminaddmedal_rsp_ = new ::Admin_AddMedal_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddMedal_rsp)
  return adminaddmedal_rsp_;
}
inline ::Admin_AddMedal_Rsp* Event::release_adminaddmedal_rsp() {
  clear_has_adminaddmedal_rsp();
  ::Admin_AddMedal_Rsp* temp = adminaddmedal_rsp_;
  adminaddmedal_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddmedal_rsp(::Admin_AddMedal_Rsp* adminaddmedal_rsp) {
  delete adminaddmedal_rsp_;
  adminaddmedal_rsp_ = adminaddmedal_rsp;
  if (adminaddmedal_rsp) {
    set_has_adminaddmedal_rsp();
  } else {
    clear_has_adminaddmedal_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddMedal_rsp)
}

// optional .WebLengthenIndate weblengthenindate = 62;
inline bool Event::has_weblengthenindate() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void Event::set_has_weblengthenindate() {
  _has_bits_[1] |= 0x00100000u;
}
inline void Event::clear_has_weblengthenindate() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void Event::clear_weblengthenindate() {
  if (weblengthenindate_ != NULL) weblengthenindate_->::WebLengthenIndate::Clear();
  clear_has_weblengthenindate();
}
inline const ::WebLengthenIndate& Event::weblengthenindate() const {
  // @@protoc_insertion_point(field_get:Event.weblengthenindate)
  return weblengthenindate_ != NULL ? *weblengthenindate_ : *default_instance_->weblengthenindate_;
}
inline ::WebLengthenIndate* Event::mutable_weblengthenindate() {
  set_has_weblengthenindate();
  if (weblengthenindate_ == NULL) {
    weblengthenindate_ = new ::WebLengthenIndate;
  }
  // @@protoc_insertion_point(field_mutable:Event.weblengthenindate)
  return weblengthenindate_;
}
inline ::WebLengthenIndate* Event::release_weblengthenindate() {
  clear_has_weblengthenindate();
  ::WebLengthenIndate* temp = weblengthenindate_;
  weblengthenindate_ = NULL;
  return temp;
}
inline void Event::set_allocated_weblengthenindate(::WebLengthenIndate* weblengthenindate) {
  delete weblengthenindate_;
  weblengthenindate_ = weblengthenindate;
  if (weblengthenindate) {
    set_has_weblengthenindate();
  } else {
    clear_has_weblengthenindate();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.weblengthenindate)
}

// optional .WebCheckBandCoin webcheckbandcoin = 63;
inline bool Event::has_webcheckbandcoin() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void Event::set_has_webcheckbandcoin() {
  _has_bits_[1] |= 0x00200000u;
}
inline void Event::clear_has_webcheckbandcoin() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void Event::clear_webcheckbandcoin() {
  if (webcheckbandcoin_ != NULL) webcheckbandcoin_->::WebCheckBandCoin::Clear();
  clear_has_webcheckbandcoin();
}
inline const ::WebCheckBandCoin& Event::webcheckbandcoin() const {
  // @@protoc_insertion_point(field_get:Event.webcheckbandcoin)
  return webcheckbandcoin_ != NULL ? *webcheckbandcoin_ : *default_instance_->webcheckbandcoin_;
}
inline ::WebCheckBandCoin* Event::mutable_webcheckbandcoin() {
  set_has_webcheckbandcoin();
  if (webcheckbandcoin_ == NULL) {
    webcheckbandcoin_ = new ::WebCheckBandCoin;
  }
  // @@protoc_insertion_point(field_mutable:Event.webcheckbandcoin)
  return webcheckbandcoin_;
}
inline ::WebCheckBandCoin* Event::release_webcheckbandcoin() {
  clear_has_webcheckbandcoin();
  ::WebCheckBandCoin* temp = webcheckbandcoin_;
  webcheckbandcoin_ = NULL;
  return temp;
}
inline void Event::set_allocated_webcheckbandcoin(::WebCheckBandCoin* webcheckbandcoin) {
  delete webcheckbandcoin_;
  webcheckbandcoin_ = webcheckbandcoin;
  if (webcheckbandcoin) {
    set_has_webcheckbandcoin();
  } else {
    clear_has_webcheckbandcoin();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webcheckbandcoin)
}

// optional .Admin_BroadCast_Req adminBroadCast_req = 64;
inline bool Event::has_adminbroadcast_req() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void Event::set_has_adminbroadcast_req() {
  _has_bits_[1] |= 0x00400000u;
}
inline void Event::clear_has_adminbroadcast_req() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void Event::clear_adminbroadcast_req() {
  if (adminbroadcast_req_ != NULL) adminbroadcast_req_->::Admin_BroadCast_Req::Clear();
  clear_has_adminbroadcast_req();
}
inline const ::Admin_BroadCast_Req& Event::adminbroadcast_req() const {
  // @@protoc_insertion_point(field_get:Event.adminBroadCast_req)
  return adminbroadcast_req_ != NULL ? *adminbroadcast_req_ : *default_instance_->adminbroadcast_req_;
}
inline ::Admin_BroadCast_Req* Event::mutable_adminbroadcast_req() {
  set_has_adminbroadcast_req();
  if (adminbroadcast_req_ == NULL) {
    adminbroadcast_req_ = new ::Admin_BroadCast_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminBroadCast_req)
  return adminbroadcast_req_;
}
inline ::Admin_BroadCast_Req* Event::release_adminbroadcast_req() {
  clear_has_adminbroadcast_req();
  ::Admin_BroadCast_Req* temp = adminbroadcast_req_;
  adminbroadcast_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminbroadcast_req(::Admin_BroadCast_Req* adminbroadcast_req) {
  delete adminbroadcast_req_;
  adminbroadcast_req_ = adminbroadcast_req;
  if (adminbroadcast_req) {
    set_has_adminbroadcast_req();
  } else {
    clear_has_adminbroadcast_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminBroadCast_req)
}

// optional .Admin_BroadCast_Rsp adminBroadCast_rsp = 65;
inline bool Event::has_adminbroadcast_rsp() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void Event::set_has_adminbroadcast_rsp() {
  _has_bits_[1] |= 0x00800000u;
}
inline void Event::clear_has_adminbroadcast_rsp() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void Event::clear_adminbroadcast_rsp() {
  if (adminbroadcast_rsp_ != NULL) adminbroadcast_rsp_->::Admin_BroadCast_Rsp::Clear();
  clear_has_adminbroadcast_rsp();
}
inline const ::Admin_BroadCast_Rsp& Event::adminbroadcast_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminBroadCast_rsp)
  return adminbroadcast_rsp_ != NULL ? *adminbroadcast_rsp_ : *default_instance_->adminbroadcast_rsp_;
}
inline ::Admin_BroadCast_Rsp* Event::mutable_adminbroadcast_rsp() {
  set_has_adminbroadcast_rsp();
  if (adminbroadcast_rsp_ == NULL) {
    adminbroadcast_rsp_ = new ::Admin_BroadCast_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminBroadCast_rsp)
  return adminbroadcast_rsp_;
}
inline ::Admin_BroadCast_Rsp* Event::release_adminbroadcast_rsp() {
  clear_has_adminbroadcast_rsp();
  ::Admin_BroadCast_Rsp* temp = adminbroadcast_rsp_;
  adminbroadcast_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminbroadcast_rsp(::Admin_BroadCast_Rsp* adminbroadcast_rsp) {
  delete adminbroadcast_rsp_;
  adminbroadcast_rsp_ = adminbroadcast_rsp;
  if (adminbroadcast_rsp) {
    set_has_adminbroadcast_rsp();
  } else {
    clear_has_adminbroadcast_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminBroadCast_rsp)
}

// optional .Admin_Reload_Req adminReload_req = 66;
inline bool Event::has_adminreload_req() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void Event::set_has_adminreload_req() {
  _has_bits_[1] |= 0x01000000u;
}
inline void Event::clear_has_adminreload_req() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void Event::clear_adminreload_req() {
  if (adminreload_req_ != NULL) adminreload_req_->::Admin_Reload_Req::Clear();
  clear_has_adminreload_req();
}
inline const ::Admin_Reload_Req& Event::adminreload_req() const {
  // @@protoc_insertion_point(field_get:Event.adminReload_req)
  return adminreload_req_ != NULL ? *adminreload_req_ : *default_instance_->adminreload_req_;
}
inline ::Admin_Reload_Req* Event::mutable_adminreload_req() {
  set_has_adminreload_req();
  if (adminreload_req_ == NULL) {
    adminreload_req_ = new ::Admin_Reload_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminReload_req)
  return adminreload_req_;
}
inline ::Admin_Reload_Req* Event::release_adminreload_req() {
  clear_has_adminreload_req();
  ::Admin_Reload_Req* temp = adminreload_req_;
  adminreload_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminreload_req(::Admin_Reload_Req* adminreload_req) {
  delete adminreload_req_;
  adminreload_req_ = adminreload_req;
  if (adminreload_req) {
    set_has_adminreload_req();
  } else {
    clear_has_adminreload_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminReload_req)
}

// optional .Admin_Reload_Rsp adminReload_rsp = 67;
inline bool Event::has_adminreload_rsp() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void Event::set_has_adminreload_rsp() {
  _has_bits_[1] |= 0x02000000u;
}
inline void Event::clear_has_adminreload_rsp() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void Event::clear_adminreload_rsp() {
  if (adminreload_rsp_ != NULL) adminreload_rsp_->::Admin_Reload_Rsp::Clear();
  clear_has_adminreload_rsp();
}
inline const ::Admin_Reload_Rsp& Event::adminreload_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminReload_rsp)
  return adminreload_rsp_ != NULL ? *adminreload_rsp_ : *default_instance_->adminreload_rsp_;
}
inline ::Admin_Reload_Rsp* Event::mutable_adminreload_rsp() {
  set_has_adminreload_rsp();
  if (adminreload_rsp_ == NULL) {
    adminreload_rsp_ = new ::Admin_Reload_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminReload_rsp)
  return adminreload_rsp_;
}
inline ::Admin_Reload_Rsp* Event::release_adminreload_rsp() {
  clear_has_adminreload_rsp();
  ::Admin_Reload_Rsp* temp = adminreload_rsp_;
  adminreload_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminreload_rsp(::Admin_Reload_Rsp* adminreload_rsp) {
  delete adminreload_rsp_;
  adminreload_rsp_ = adminreload_rsp;
  if (adminreload_rsp) {
    set_has_adminreload_rsp();
  } else {
    clear_has_adminreload_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminReload_rsp)
}

// optional .UpdateGuestNumber update_guest_number = 68;
inline bool Event::has_update_guest_number() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void Event::set_has_update_guest_number() {
  _has_bits_[1] |= 0x04000000u;
}
inline void Event::clear_has_update_guest_number() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void Event::clear_update_guest_number() {
  if (update_guest_number_ != NULL) update_guest_number_->::UpdateGuestNumber::Clear();
  clear_has_update_guest_number();
}
inline const ::UpdateGuestNumber& Event::update_guest_number() const {
  // @@protoc_insertion_point(field_get:Event.update_guest_number)
  return update_guest_number_ != NULL ? *update_guest_number_ : *default_instance_->update_guest_number_;
}
inline ::UpdateGuestNumber* Event::mutable_update_guest_number() {
  set_has_update_guest_number();
  if (update_guest_number_ == NULL) {
    update_guest_number_ = new ::UpdateGuestNumber;
  }
  // @@protoc_insertion_point(field_mutable:Event.update_guest_number)
  return update_guest_number_;
}
inline ::UpdateGuestNumber* Event::release_update_guest_number() {
  clear_has_update_guest_number();
  ::UpdateGuestNumber* temp = update_guest_number_;
  update_guest_number_ = NULL;
  return temp;
}
inline void Event::set_allocated_update_guest_number(::UpdateGuestNumber* update_guest_number) {
  delete update_guest_number_;
  update_guest_number_ = update_guest_number;
  if (update_guest_number) {
    set_has_update_guest_number();
  } else {
    clear_has_update_guest_number();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.update_guest_number)
}

// optional .Admin_FluentPrice_Req adminFluentPrice_req = 69;
inline bool Event::has_adminfluentprice_req() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void Event::set_has_adminfluentprice_req() {
  _has_bits_[1] |= 0x08000000u;
}
inline void Event::clear_has_adminfluentprice_req() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void Event::clear_adminfluentprice_req() {
  if (adminfluentprice_req_ != NULL) adminfluentprice_req_->::Admin_FluentPrice_Req::Clear();
  clear_has_adminfluentprice_req();
}
inline const ::Admin_FluentPrice_Req& Event::adminfluentprice_req() const {
  // @@protoc_insertion_point(field_get:Event.adminFluentPrice_req)
  return adminfluentprice_req_ != NULL ? *adminfluentprice_req_ : *default_instance_->adminfluentprice_req_;
}
inline ::Admin_FluentPrice_Req* Event::mutable_adminfluentprice_req() {
  set_has_adminfluentprice_req();
  if (adminfluentprice_req_ == NULL) {
    adminfluentprice_req_ = new ::Admin_FluentPrice_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminFluentPrice_req)
  return adminfluentprice_req_;
}
inline ::Admin_FluentPrice_Req* Event::release_adminfluentprice_req() {
  clear_has_adminfluentprice_req();
  ::Admin_FluentPrice_Req* temp = adminfluentprice_req_;
  adminfluentprice_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminfluentprice_req(::Admin_FluentPrice_Req* adminfluentprice_req) {
  delete adminfluentprice_req_;
  adminfluentprice_req_ = adminfluentprice_req;
  if (adminfluentprice_req) {
    set_has_adminfluentprice_req();
  } else {
    clear_has_adminfluentprice_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminFluentPrice_req)
}

// optional .Admin_FluentPrice_Rsp adminFluentPrice_rsp = 70;
inline bool Event::has_adminfluentprice_rsp() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void Event::set_has_adminfluentprice_rsp() {
  _has_bits_[1] |= 0x10000000u;
}
inline void Event::clear_has_adminfluentprice_rsp() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void Event::clear_adminfluentprice_rsp() {
  if (adminfluentprice_rsp_ != NULL) adminfluentprice_rsp_->::Admin_FluentPrice_Rsp::Clear();
  clear_has_adminfluentprice_rsp();
}
inline const ::Admin_FluentPrice_Rsp& Event::adminfluentprice_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminFluentPrice_rsp)
  return adminfluentprice_rsp_ != NULL ? *adminfluentprice_rsp_ : *default_instance_->adminfluentprice_rsp_;
}
inline ::Admin_FluentPrice_Rsp* Event::mutable_adminfluentprice_rsp() {
  set_has_adminfluentprice_rsp();
  if (adminfluentprice_rsp_ == NULL) {
    adminfluentprice_rsp_ = new ::Admin_FluentPrice_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminFluentPrice_rsp)
  return adminfluentprice_rsp_;
}
inline ::Admin_FluentPrice_Rsp* Event::release_adminfluentprice_rsp() {
  clear_has_adminfluentprice_rsp();
  ::Admin_FluentPrice_Rsp* temp = adminfluentprice_rsp_;
  adminfluentprice_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminfluentprice_rsp(::Admin_FluentPrice_Rsp* adminfluentprice_rsp) {
  delete adminfluentprice_rsp_;
  adminfluentprice_rsp_ = adminfluentprice_rsp;
  if (adminfluentprice_rsp) {
    set_has_adminfluentprice_rsp();
  } else {
    clear_has_adminfluentprice_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminFluentPrice_rsp)
}

// optional .WebUnlock webunlock = 71;
inline bool Event::has_webunlock() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void Event::set_has_webunlock() {
  _has_bits_[1] |= 0x20000000u;
}
inline void Event::clear_has_webunlock() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void Event::clear_webunlock() {
  if (webunlock_ != NULL) webunlock_->::WebUnlock::Clear();
  clear_has_webunlock();
}
inline const ::WebUnlock& Event::webunlock() const {
  // @@protoc_insertion_point(field_get:Event.webunlock)
  return webunlock_ != NULL ? *webunlock_ : *default_instance_->webunlock_;
}
inline ::WebUnlock* Event::mutable_webunlock() {
  set_has_webunlock();
  if (webunlock_ == NULL) {
    webunlock_ = new ::WebUnlock;
  }
  // @@protoc_insertion_point(field_mutable:Event.webunlock)
  return webunlock_;
}
inline ::WebUnlock* Event::release_webunlock() {
  clear_has_webunlock();
  ::WebUnlock* temp = webunlock_;
  webunlock_ = NULL;
  return temp;
}
inline void Event::set_allocated_webunlock(::WebUnlock* webunlock) {
  delete webunlock_;
  webunlock_ = webunlock;
  if (webunlock) {
    set_has_webunlock();
  } else {
    clear_has_webunlock();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webunlock)
}

// optional .WebAddEmployee webaddemployee = 72;
inline bool Event::has_webaddemployee() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void Event::set_has_webaddemployee() {
  _has_bits_[1] |= 0x40000000u;
}
inline void Event::clear_has_webaddemployee() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void Event::clear_webaddemployee() {
  if (webaddemployee_ != NULL) webaddemployee_->::WebAddEmployee::Clear();
  clear_has_webaddemployee();
}
inline const ::WebAddEmployee& Event::webaddemployee() const {
  // @@protoc_insertion_point(field_get:Event.webaddemployee)
  return webaddemployee_ != NULL ? *webaddemployee_ : *default_instance_->webaddemployee_;
}
inline ::WebAddEmployee* Event::mutable_webaddemployee() {
  set_has_webaddemployee();
  if (webaddemployee_ == NULL) {
    webaddemployee_ = new ::WebAddEmployee;
  }
  // @@protoc_insertion_point(field_mutable:Event.webaddemployee)
  return webaddemployee_;
}
inline ::WebAddEmployee* Event::release_webaddemployee() {
  clear_has_webaddemployee();
  ::WebAddEmployee* temp = webaddemployee_;
  webaddemployee_ = NULL;
  return temp;
}
inline void Event::set_allocated_webaddemployee(::WebAddEmployee* webaddemployee) {
  delete webaddemployee_;
  webaddemployee_ = webaddemployee;
  if (webaddemployee) {
    set_has_webaddemployee();
  } else {
    clear_has_webaddemployee();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webaddemployee)
}

// optional .Admin_AddGoods_Req adminAddGoods_req = 73;
inline bool Event::has_adminaddgoods_req() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void Event::set_has_adminaddgoods_req() {
  _has_bits_[1] |= 0x80000000u;
}
inline void Event::clear_has_adminaddgoods_req() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void Event::clear_adminaddgoods_req() {
  if (adminaddgoods_req_ != NULL) adminaddgoods_req_->::Admin_AddGoods_Req::Clear();
  clear_has_adminaddgoods_req();
}
inline const ::Admin_AddGoods_Req& Event::adminaddgoods_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddGoods_req)
  return adminaddgoods_req_ != NULL ? *adminaddgoods_req_ : *default_instance_->adminaddgoods_req_;
}
inline ::Admin_AddGoods_Req* Event::mutable_adminaddgoods_req() {
  set_has_adminaddgoods_req();
  if (adminaddgoods_req_ == NULL) {
    adminaddgoods_req_ = new ::Admin_AddGoods_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddGoods_req)
  return adminaddgoods_req_;
}
inline ::Admin_AddGoods_Req* Event::release_adminaddgoods_req() {
  clear_has_adminaddgoods_req();
  ::Admin_AddGoods_Req* temp = adminaddgoods_req_;
  adminaddgoods_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddgoods_req(::Admin_AddGoods_Req* adminaddgoods_req) {
  delete adminaddgoods_req_;
  adminaddgoods_req_ = adminaddgoods_req;
  if (adminaddgoods_req) {
    set_has_adminaddgoods_req();
  } else {
    clear_has_adminaddgoods_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddGoods_req)
}

// optional .Admin_AddGoods_Rsp adminAddGoods_rsp = 74;
inline bool Event::has_adminaddgoods_rsp() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void Event::set_has_adminaddgoods_rsp() {
  _has_bits_[2] |= 0x00000001u;
}
inline void Event::clear_has_adminaddgoods_rsp() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void Event::clear_adminaddgoods_rsp() {
  if (adminaddgoods_rsp_ != NULL) adminaddgoods_rsp_->::Admin_AddGoods_Rsp::Clear();
  clear_has_adminaddgoods_rsp();
}
inline const ::Admin_AddGoods_Rsp& Event::adminaddgoods_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddGoods_rsp)
  return adminaddgoods_rsp_ != NULL ? *adminaddgoods_rsp_ : *default_instance_->adminaddgoods_rsp_;
}
inline ::Admin_AddGoods_Rsp* Event::mutable_adminaddgoods_rsp() {
  set_has_adminaddgoods_rsp();
  if (adminaddgoods_rsp_ == NULL) {
    adminaddgoods_rsp_ = new ::Admin_AddGoods_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddGoods_rsp)
  return adminaddgoods_rsp_;
}
inline ::Admin_AddGoods_Rsp* Event::release_adminaddgoods_rsp() {
  clear_has_adminaddgoods_rsp();
  ::Admin_AddGoods_Rsp* temp = adminaddgoods_rsp_;
  adminaddgoods_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddgoods_rsp(::Admin_AddGoods_Rsp* adminaddgoods_rsp) {
  delete adminaddgoods_rsp_;
  adminaddgoods_rsp_ = adminaddgoods_rsp;
  if (adminaddgoods_rsp) {
    set_has_adminaddgoods_rsp();
  } else {
    clear_has_adminaddgoods_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddGoods_rsp)
}

// optional .Admin_SetPublicPraise_Req adminSetPublicPraise_req = 75;
inline bool Event::has_adminsetpublicpraise_req() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void Event::set_has_adminsetpublicpraise_req() {
  _has_bits_[2] |= 0x00000002u;
}
inline void Event::clear_has_adminsetpublicpraise_req() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void Event::clear_adminsetpublicpraise_req() {
  if (adminsetpublicpraise_req_ != NULL) adminsetpublicpraise_req_->::Admin_SetPublicPraise_Req::Clear();
  clear_has_adminsetpublicpraise_req();
}
inline const ::Admin_SetPublicPraise_Req& Event::adminsetpublicpraise_req() const {
  // @@protoc_insertion_point(field_get:Event.adminSetPublicPraise_req)
  return adminsetpublicpraise_req_ != NULL ? *adminsetpublicpraise_req_ : *default_instance_->adminsetpublicpraise_req_;
}
inline ::Admin_SetPublicPraise_Req* Event::mutable_adminsetpublicpraise_req() {
  set_has_adminsetpublicpraise_req();
  if (adminsetpublicpraise_req_ == NULL) {
    adminsetpublicpraise_req_ = new ::Admin_SetPublicPraise_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetPublicPraise_req)
  return adminsetpublicpraise_req_;
}
inline ::Admin_SetPublicPraise_Req* Event::release_adminsetpublicpraise_req() {
  clear_has_adminsetpublicpraise_req();
  ::Admin_SetPublicPraise_Req* temp = adminsetpublicpraise_req_;
  adminsetpublicpraise_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetpublicpraise_req(::Admin_SetPublicPraise_Req* adminsetpublicpraise_req) {
  delete adminsetpublicpraise_req_;
  adminsetpublicpraise_req_ = adminsetpublicpraise_req;
  if (adminsetpublicpraise_req) {
    set_has_adminsetpublicpraise_req();
  } else {
    clear_has_adminsetpublicpraise_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetPublicPraise_req)
}

// optional .Admin_SetPublicPraise_Rsp adminSetPublicPraise_rsp = 76;
inline bool Event::has_adminsetpublicpraise_rsp() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void Event::set_has_adminsetpublicpraise_rsp() {
  _has_bits_[2] |= 0x00000004u;
}
inline void Event::clear_has_adminsetpublicpraise_rsp() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void Event::clear_adminsetpublicpraise_rsp() {
  if (adminsetpublicpraise_rsp_ != NULL) adminsetpublicpraise_rsp_->::Admin_SetPublicPraise_Rsp::Clear();
  clear_has_adminsetpublicpraise_rsp();
}
inline const ::Admin_SetPublicPraise_Rsp& Event::adminsetpublicpraise_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminSetPublicPraise_rsp)
  return adminsetpublicpraise_rsp_ != NULL ? *adminsetpublicpraise_rsp_ : *default_instance_->adminsetpublicpraise_rsp_;
}
inline ::Admin_SetPublicPraise_Rsp* Event::mutable_adminsetpublicpraise_rsp() {
  set_has_adminsetpublicpraise_rsp();
  if (adminsetpublicpraise_rsp_ == NULL) {
    adminsetpublicpraise_rsp_ = new ::Admin_SetPublicPraise_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetPublicPraise_rsp)
  return adminsetpublicpraise_rsp_;
}
inline ::Admin_SetPublicPraise_Rsp* Event::release_adminsetpublicpraise_rsp() {
  clear_has_adminsetpublicpraise_rsp();
  ::Admin_SetPublicPraise_Rsp* temp = adminsetpublicpraise_rsp_;
  adminsetpublicpraise_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetpublicpraise_rsp(::Admin_SetPublicPraise_Rsp* adminsetpublicpraise_rsp) {
  delete adminsetpublicpraise_rsp_;
  adminsetpublicpraise_rsp_ = adminsetpublicpraise_rsp;
  if (adminsetpublicpraise_rsp) {
    set_has_adminsetpublicpraise_rsp();
  } else {
    clear_has_adminsetpublicpraise_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetPublicPraise_rsp)
}

// optional .Admin_AddGuest_Req adminAddGuest_req = 77;
inline bool Event::has_adminaddguest_req() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void Event::set_has_adminaddguest_req() {
  _has_bits_[2] |= 0x00000008u;
}
inline void Event::clear_has_adminaddguest_req() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void Event::clear_adminaddguest_req() {
  if (adminaddguest_req_ != NULL) adminaddguest_req_->::Admin_AddGuest_Req::Clear();
  clear_has_adminaddguest_req();
}
inline const ::Admin_AddGuest_Req& Event::adminaddguest_req() const {
  // @@protoc_insertion_point(field_get:Event.adminAddGuest_req)
  return adminaddguest_req_ != NULL ? *adminaddguest_req_ : *default_instance_->adminaddguest_req_;
}
inline ::Admin_AddGuest_Req* Event::mutable_adminaddguest_req() {
  set_has_adminaddguest_req();
  if (adminaddguest_req_ == NULL) {
    adminaddguest_req_ = new ::Admin_AddGuest_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddGuest_req)
  return adminaddguest_req_;
}
inline ::Admin_AddGuest_Req* Event::release_adminaddguest_req() {
  clear_has_adminaddguest_req();
  ::Admin_AddGuest_Req* temp = adminaddguest_req_;
  adminaddguest_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddguest_req(::Admin_AddGuest_Req* adminaddguest_req) {
  delete adminaddguest_req_;
  adminaddguest_req_ = adminaddguest_req;
  if (adminaddguest_req) {
    set_has_adminaddguest_req();
  } else {
    clear_has_adminaddguest_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddGuest_req)
}

// optional .Admin_AddGuest_Rsp adminAddGuest_rsp = 78;
inline bool Event::has_adminaddguest_rsp() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void Event::set_has_adminaddguest_rsp() {
  _has_bits_[2] |= 0x00000010u;
}
inline void Event::clear_has_adminaddguest_rsp() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void Event::clear_adminaddguest_rsp() {
  if (adminaddguest_rsp_ != NULL) adminaddguest_rsp_->::Admin_AddGuest_Rsp::Clear();
  clear_has_adminaddguest_rsp();
}
inline const ::Admin_AddGuest_Rsp& Event::adminaddguest_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminAddGuest_rsp)
  return adminaddguest_rsp_ != NULL ? *adminaddguest_rsp_ : *default_instance_->adminaddguest_rsp_;
}
inline ::Admin_AddGuest_Rsp* Event::mutable_adminaddguest_rsp() {
  set_has_adminaddguest_rsp();
  if (adminaddguest_rsp_ == NULL) {
    adminaddguest_rsp_ = new ::Admin_AddGuest_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminAddGuest_rsp)
  return adminaddguest_rsp_;
}
inline ::Admin_AddGuest_Rsp* Event::release_adminaddguest_rsp() {
  clear_has_adminaddguest_rsp();
  ::Admin_AddGuest_Rsp* temp = adminaddguest_rsp_;
  adminaddguest_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminaddguest_rsp(::Admin_AddGuest_Rsp* adminaddguest_rsp) {
  delete adminaddguest_rsp_;
  adminaddguest_rsp_ = adminaddguest_rsp;
  if (adminaddguest_rsp) {
    set_has_adminaddguest_rsp();
  } else {
    clear_has_adminaddguest_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminAddGuest_rsp)
}

// optional .Admin_DelGoods_Req adminDelGoods_req = 79;
inline bool Event::has_admindelgoods_req() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
inline void Event::set_has_admindelgoods_req() {
  _has_bits_[2] |= 0x00000020u;
}
inline void Event::clear_has_admindelgoods_req() {
  _has_bits_[2] &= ~0x00000020u;
}
inline void Event::clear_admindelgoods_req() {
  if (admindelgoods_req_ != NULL) admindelgoods_req_->::Admin_DelGoods_Req::Clear();
  clear_has_admindelgoods_req();
}
inline const ::Admin_DelGoods_Req& Event::admindelgoods_req() const {
  // @@protoc_insertion_point(field_get:Event.adminDelGoods_req)
  return admindelgoods_req_ != NULL ? *admindelgoods_req_ : *default_instance_->admindelgoods_req_;
}
inline ::Admin_DelGoods_Req* Event::mutable_admindelgoods_req() {
  set_has_admindelgoods_req();
  if (admindelgoods_req_ == NULL) {
    admindelgoods_req_ = new ::Admin_DelGoods_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminDelGoods_req)
  return admindelgoods_req_;
}
inline ::Admin_DelGoods_Req* Event::release_admindelgoods_req() {
  clear_has_admindelgoods_req();
  ::Admin_DelGoods_Req* temp = admindelgoods_req_;
  admindelgoods_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_admindelgoods_req(::Admin_DelGoods_Req* admindelgoods_req) {
  delete admindelgoods_req_;
  admindelgoods_req_ = admindelgoods_req;
  if (admindelgoods_req) {
    set_has_admindelgoods_req();
  } else {
    clear_has_admindelgoods_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminDelGoods_req)
}

// optional .Admin_DelGoods_Rsp adminDelGoods_rsp = 80;
inline bool Event::has_admindelgoods_rsp() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
inline void Event::set_has_admindelgoods_rsp() {
  _has_bits_[2] |= 0x00000040u;
}
inline void Event::clear_has_admindelgoods_rsp() {
  _has_bits_[2] &= ~0x00000040u;
}
inline void Event::clear_admindelgoods_rsp() {
  if (admindelgoods_rsp_ != NULL) admindelgoods_rsp_->::Admin_DelGoods_Rsp::Clear();
  clear_has_admindelgoods_rsp();
}
inline const ::Admin_DelGoods_Rsp& Event::admindelgoods_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminDelGoods_rsp)
  return admindelgoods_rsp_ != NULL ? *admindelgoods_rsp_ : *default_instance_->admindelgoods_rsp_;
}
inline ::Admin_DelGoods_Rsp* Event::mutable_admindelgoods_rsp() {
  set_has_admindelgoods_rsp();
  if (admindelgoods_rsp_ == NULL) {
    admindelgoods_rsp_ = new ::Admin_DelGoods_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminDelGoods_rsp)
  return admindelgoods_rsp_;
}
inline ::Admin_DelGoods_Rsp* Event::release_admindelgoods_rsp() {
  clear_has_admindelgoods_rsp();
  ::Admin_DelGoods_Rsp* temp = admindelgoods_rsp_;
  admindelgoods_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_admindelgoods_rsp(::Admin_DelGoods_Rsp* admindelgoods_rsp) {
  delete admindelgoods_rsp_;
  admindelgoods_rsp_ = admindelgoods_rsp;
  if (admindelgoods_rsp) {
    set_has_admindelgoods_rsp();
  } else {
    clear_has_admindelgoods_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminDelGoods_rsp)
}

// optional .Admin_Clear_Req adminClear_req = 81;
inline bool Event::has_adminclear_req() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
inline void Event::set_has_adminclear_req() {
  _has_bits_[2] |= 0x00000080u;
}
inline void Event::clear_has_adminclear_req() {
  _has_bits_[2] &= ~0x00000080u;
}
inline void Event::clear_adminclear_req() {
  if (adminclear_req_ != NULL) adminclear_req_->::Admin_Clear_Req::Clear();
  clear_has_adminclear_req();
}
inline const ::Admin_Clear_Req& Event::adminclear_req() const {
  // @@protoc_insertion_point(field_get:Event.adminClear_req)
  return adminclear_req_ != NULL ? *adminclear_req_ : *default_instance_->adminclear_req_;
}
inline ::Admin_Clear_Req* Event::mutable_adminclear_req() {
  set_has_adminclear_req();
  if (adminclear_req_ == NULL) {
    adminclear_req_ = new ::Admin_Clear_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminClear_req)
  return adminclear_req_;
}
inline ::Admin_Clear_Req* Event::release_adminclear_req() {
  clear_has_adminclear_req();
  ::Admin_Clear_Req* temp = adminclear_req_;
  adminclear_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminclear_req(::Admin_Clear_Req* adminclear_req) {
  delete adminclear_req_;
  adminclear_req_ = adminclear_req;
  if (adminclear_req) {
    set_has_adminclear_req();
  } else {
    clear_has_adminclear_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminClear_req)
}

// optional .Admin_Clear_Rsp adminClear_rsp = 82;
inline bool Event::has_adminclear_rsp() const {
  return (_has_bits_[2] & 0x00000100u) != 0;
}
inline void Event::set_has_adminclear_rsp() {
  _has_bits_[2] |= 0x00000100u;
}
inline void Event::clear_has_adminclear_rsp() {
  _has_bits_[2] &= ~0x00000100u;
}
inline void Event::clear_adminclear_rsp() {
  if (adminclear_rsp_ != NULL) adminclear_rsp_->::Admin_Clear_Rsp::Clear();
  clear_has_adminclear_rsp();
}
inline const ::Admin_Clear_Rsp& Event::adminclear_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminClear_rsp)
  return adminclear_rsp_ != NULL ? *adminclear_rsp_ : *default_instance_->adminclear_rsp_;
}
inline ::Admin_Clear_Rsp* Event::mutable_adminclear_rsp() {
  set_has_adminclear_rsp();
  if (adminclear_rsp_ == NULL) {
    adminclear_rsp_ = new ::Admin_Clear_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminClear_rsp)
  return adminclear_rsp_;
}
inline ::Admin_Clear_Rsp* Event::release_adminclear_rsp() {
  clear_has_adminclear_rsp();
  ::Admin_Clear_Rsp* temp = adminclear_rsp_;
  adminclear_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminclear_rsp(::Admin_Clear_Rsp* adminclear_rsp) {
  delete adminclear_rsp_;
  adminclear_rsp_ = adminclear_rsp;
  if (adminclear_rsp) {
    set_has_adminclear_rsp();
  } else {
    clear_has_adminclear_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminClear_rsp)
}

// optional .Admin_StatisticsOnLinePeople_Req adminOnLineNum_req = 83;
inline bool Event::has_adminonlinenum_req() const {
  return (_has_bits_[2] & 0x00000200u) != 0;
}
inline void Event::set_has_adminonlinenum_req() {
  _has_bits_[2] |= 0x00000200u;
}
inline void Event::clear_has_adminonlinenum_req() {
  _has_bits_[2] &= ~0x00000200u;
}
inline void Event::clear_adminonlinenum_req() {
  if (adminonlinenum_req_ != NULL) adminonlinenum_req_->::Admin_StatisticsOnLinePeople_Req::Clear();
  clear_has_adminonlinenum_req();
}
inline const ::Admin_StatisticsOnLinePeople_Req& Event::adminonlinenum_req() const {
  // @@protoc_insertion_point(field_get:Event.adminOnLineNum_req)
  return adminonlinenum_req_ != NULL ? *adminonlinenum_req_ : *default_instance_->adminonlinenum_req_;
}
inline ::Admin_StatisticsOnLinePeople_Req* Event::mutable_adminonlinenum_req() {
  set_has_adminonlinenum_req();
  if (adminonlinenum_req_ == NULL) {
    adminonlinenum_req_ = new ::Admin_StatisticsOnLinePeople_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminOnLineNum_req)
  return adminonlinenum_req_;
}
inline ::Admin_StatisticsOnLinePeople_Req* Event::release_adminonlinenum_req() {
  clear_has_adminonlinenum_req();
  ::Admin_StatisticsOnLinePeople_Req* temp = adminonlinenum_req_;
  adminonlinenum_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminonlinenum_req(::Admin_StatisticsOnLinePeople_Req* adminonlinenum_req) {
  delete adminonlinenum_req_;
  adminonlinenum_req_ = adminonlinenum_req;
  if (adminonlinenum_req) {
    set_has_adminonlinenum_req();
  } else {
    clear_has_adminonlinenum_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminOnLineNum_req)
}

// optional .Admin_StatisticsOnLinePeople_Rsp adminOnLineNum_rsp = 84;
inline bool Event::has_adminonlinenum_rsp() const {
  return (_has_bits_[2] & 0x00000400u) != 0;
}
inline void Event::set_has_adminonlinenum_rsp() {
  _has_bits_[2] |= 0x00000400u;
}
inline void Event::clear_has_adminonlinenum_rsp() {
  _has_bits_[2] &= ~0x00000400u;
}
inline void Event::clear_adminonlinenum_rsp() {
  if (adminonlinenum_rsp_ != NULL) adminonlinenum_rsp_->::Admin_StatisticsOnLinePeople_Rsp::Clear();
  clear_has_adminonlinenum_rsp();
}
inline const ::Admin_StatisticsOnLinePeople_Rsp& Event::adminonlinenum_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminOnLineNum_rsp)
  return adminonlinenum_rsp_ != NULL ? *adminonlinenum_rsp_ : *default_instance_->adminonlinenum_rsp_;
}
inline ::Admin_StatisticsOnLinePeople_Rsp* Event::mutable_adminonlinenum_rsp() {
  set_has_adminonlinenum_rsp();
  if (adminonlinenum_rsp_ == NULL) {
    adminonlinenum_rsp_ = new ::Admin_StatisticsOnLinePeople_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminOnLineNum_rsp)
  return adminonlinenum_rsp_;
}
inline ::Admin_StatisticsOnLinePeople_Rsp* Event::release_adminonlinenum_rsp() {
  clear_has_adminonlinenum_rsp();
  ::Admin_StatisticsOnLinePeople_Rsp* temp = adminonlinenum_rsp_;
  adminonlinenum_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminonlinenum_rsp(::Admin_StatisticsOnLinePeople_Rsp* adminonlinenum_rsp) {
  delete adminonlinenum_rsp_;
  adminonlinenum_rsp_ = adminonlinenum_rsp;
  if (adminonlinenum_rsp) {
    set_has_adminonlinenum_rsp();
  } else {
    clear_has_adminonlinenum_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminOnLineNum_rsp)
}

// optional .Admin_KickPlayer_Req adminKickPlayer_req = 85;
inline bool Event::has_adminkickplayer_req() const {
  return (_has_bits_[2] & 0x00000800u) != 0;
}
inline void Event::set_has_adminkickplayer_req() {
  _has_bits_[2] |= 0x00000800u;
}
inline void Event::clear_has_adminkickplayer_req() {
  _has_bits_[2] &= ~0x00000800u;
}
inline void Event::clear_adminkickplayer_req() {
  if (adminkickplayer_req_ != NULL) adminkickplayer_req_->::Admin_KickPlayer_Req::Clear();
  clear_has_adminkickplayer_req();
}
inline const ::Admin_KickPlayer_Req& Event::adminkickplayer_req() const {
  // @@protoc_insertion_point(field_get:Event.adminKickPlayer_req)
  return adminkickplayer_req_ != NULL ? *adminkickplayer_req_ : *default_instance_->adminkickplayer_req_;
}
inline ::Admin_KickPlayer_Req* Event::mutable_adminkickplayer_req() {
  set_has_adminkickplayer_req();
  if (adminkickplayer_req_ == NULL) {
    adminkickplayer_req_ = new ::Admin_KickPlayer_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminKickPlayer_req)
  return adminkickplayer_req_;
}
inline ::Admin_KickPlayer_Req* Event::release_adminkickplayer_req() {
  clear_has_adminkickplayer_req();
  ::Admin_KickPlayer_Req* temp = adminkickplayer_req_;
  adminkickplayer_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminkickplayer_req(::Admin_KickPlayer_Req* adminkickplayer_req) {
  delete adminkickplayer_req_;
  adminkickplayer_req_ = adminkickplayer_req;
  if (adminkickplayer_req) {
    set_has_adminkickplayer_req();
  } else {
    clear_has_adminkickplayer_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminKickPlayer_req)
}

// optional .Admin_KickPlayer_Rsp adminKickPlayer_rsp = 86;
inline bool Event::has_adminkickplayer_rsp() const {
  return (_has_bits_[2] & 0x00001000u) != 0;
}
inline void Event::set_has_adminkickplayer_rsp() {
  _has_bits_[2] |= 0x00001000u;
}
inline void Event::clear_has_adminkickplayer_rsp() {
  _has_bits_[2] &= ~0x00001000u;
}
inline void Event::clear_adminkickplayer_rsp() {
  if (adminkickplayer_rsp_ != NULL) adminkickplayer_rsp_->::Admin_KickPlayer_Rsp::Clear();
  clear_has_adminkickplayer_rsp();
}
inline const ::Admin_KickPlayer_Rsp& Event::adminkickplayer_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminKickPlayer_rsp)
  return adminkickplayer_rsp_ != NULL ? *adminkickplayer_rsp_ : *default_instance_->adminkickplayer_rsp_;
}
inline ::Admin_KickPlayer_Rsp* Event::mutable_adminkickplayer_rsp() {
  set_has_adminkickplayer_rsp();
  if (adminkickplayer_rsp_ == NULL) {
    adminkickplayer_rsp_ = new ::Admin_KickPlayer_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminKickPlayer_rsp)
  return adminkickplayer_rsp_;
}
inline ::Admin_KickPlayer_Rsp* Event::release_adminkickplayer_rsp() {
  clear_has_adminkickplayer_rsp();
  ::Admin_KickPlayer_Rsp* temp = adminkickplayer_rsp_;
  adminkickplayer_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminkickplayer_rsp(::Admin_KickPlayer_Rsp* adminkickplayer_rsp) {
  delete adminkickplayer_rsp_;
  adminkickplayer_rsp_ = adminkickplayer_rsp;
  if (adminkickplayer_rsp) {
    set_has_adminkickplayer_rsp();
  } else {
    clear_has_adminkickplayer_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminKickPlayer_rsp)
}

// optional .WebInvite webinvite = 87;
inline bool Event::has_webinvite() const {
  return (_has_bits_[2] & 0x00002000u) != 0;
}
inline void Event::set_has_webinvite() {
  _has_bits_[2] |= 0x00002000u;
}
inline void Event::clear_has_webinvite() {
  _has_bits_[2] &= ~0x00002000u;
}
inline void Event::clear_webinvite() {
  if (webinvite_ != NULL) webinvite_->::WebInvite::Clear();
  clear_has_webinvite();
}
inline const ::WebInvite& Event::webinvite() const {
  // @@protoc_insertion_point(field_get:Event.webinvite)
  return webinvite_ != NULL ? *webinvite_ : *default_instance_->webinvite_;
}
inline ::WebInvite* Event::mutable_webinvite() {
  set_has_webinvite();
  if (webinvite_ == NULL) {
    webinvite_ = new ::WebInvite;
  }
  // @@protoc_insertion_point(field_mutable:Event.webinvite)
  return webinvite_;
}
inline ::WebInvite* Event::release_webinvite() {
  clear_has_webinvite();
  ::WebInvite* temp = webinvite_;
  webinvite_ = NULL;
  return temp;
}
inline void Event::set_allocated_webinvite(::WebInvite* webinvite) {
  delete webinvite_;
  webinvite_ = webinvite;
  if (webinvite) {
    set_has_webinvite();
  } else {
    clear_has_webinvite();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webinvite)
}

// optional .Invite invite = 88;
inline bool Event::has_invite() const {
  return (_has_bits_[2] & 0x00004000u) != 0;
}
inline void Event::set_has_invite() {
  _has_bits_[2] |= 0x00004000u;
}
inline void Event::clear_has_invite() {
  _has_bits_[2] &= ~0x00004000u;
}
inline void Event::clear_invite() {
  if (invite_ != NULL) invite_->::Invite::Clear();
  clear_has_invite();
}
inline const ::Invite& Event::invite() const {
  // @@protoc_insertion_point(field_get:Event.invite)
  return invite_ != NULL ? *invite_ : *default_instance_->invite_;
}
inline ::Invite* Event::mutable_invite() {
  set_has_invite();
  if (invite_ == NULL) {
    invite_ = new ::Invite;
  }
  // @@protoc_insertion_point(field_mutable:Event.invite)
  return invite_;
}
inline ::Invite* Event::release_invite() {
  clear_has_invite();
  ::Invite* temp = invite_;
  invite_ = NULL;
  return temp;
}
inline void Event::set_allocated_invite(::Invite* invite) {
  delete invite_;
  invite_ = invite;
  if (invite) {
    set_has_invite();
  } else {
    clear_has_invite();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.invite)
}

// optional .Admin_STR_Req adminstr_req = 89;
inline bool Event::has_adminstr_req() const {
  return (_has_bits_[2] & 0x00008000u) != 0;
}
inline void Event::set_has_adminstr_req() {
  _has_bits_[2] |= 0x00008000u;
}
inline void Event::clear_has_adminstr_req() {
  _has_bits_[2] &= ~0x00008000u;
}
inline void Event::clear_adminstr_req() {
  if (adminstr_req_ != NULL) adminstr_req_->::Admin_STR_Req::Clear();
  clear_has_adminstr_req();
}
inline const ::Admin_STR_Req& Event::adminstr_req() const {
  // @@protoc_insertion_point(field_get:Event.adminstr_req)
  return adminstr_req_ != NULL ? *adminstr_req_ : *default_instance_->adminstr_req_;
}
inline ::Admin_STR_Req* Event::mutable_adminstr_req() {
  set_has_adminstr_req();
  if (adminstr_req_ == NULL) {
    adminstr_req_ = new ::Admin_STR_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminstr_req)
  return adminstr_req_;
}
inline ::Admin_STR_Req* Event::release_adminstr_req() {
  clear_has_adminstr_req();
  ::Admin_STR_Req* temp = adminstr_req_;
  adminstr_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminstr_req(::Admin_STR_Req* adminstr_req) {
  delete adminstr_req_;
  adminstr_req_ = adminstr_req;
  if (adminstr_req) {
    set_has_adminstr_req();
  } else {
    clear_has_adminstr_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminstr_req)
}

// optional .Admin_STR_Rsp adminstr_rsp = 90;
inline bool Event::has_adminstr_rsp() const {
  return (_has_bits_[2] & 0x00010000u) != 0;
}
inline void Event::set_has_adminstr_rsp() {
  _has_bits_[2] |= 0x00010000u;
}
inline void Event::clear_has_adminstr_rsp() {
  _has_bits_[2] &= ~0x00010000u;
}
inline void Event::clear_adminstr_rsp() {
  if (adminstr_rsp_ != NULL) adminstr_rsp_->::Admin_STR_Rsp::Clear();
  clear_has_adminstr_rsp();
}
inline const ::Admin_STR_Rsp& Event::adminstr_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminstr_rsp)
  return adminstr_rsp_ != NULL ? *adminstr_rsp_ : *default_instance_->adminstr_rsp_;
}
inline ::Admin_STR_Rsp* Event::mutable_adminstr_rsp() {
  set_has_adminstr_rsp();
  if (adminstr_rsp_ == NULL) {
    adminstr_rsp_ = new ::Admin_STR_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminstr_rsp)
  return adminstr_rsp_;
}
inline ::Admin_STR_Rsp* Event::release_adminstr_rsp() {
  clear_has_adminstr_rsp();
  ::Admin_STR_Rsp* temp = adminstr_rsp_;
  adminstr_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminstr_rsp(::Admin_STR_Rsp* adminstr_rsp) {
  delete adminstr_rsp_;
  adminstr_rsp_ = adminstr_rsp;
  if (adminstr_rsp) {
    set_has_adminstr_rsp();
  } else {
    clear_has_adminstr_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminstr_rsp)
}

// optional .WebBuyCfm webbugcfm = 91;
inline bool Event::has_webbugcfm() const {
  return (_has_bits_[2] & 0x00020000u) != 0;
}
inline void Event::set_has_webbugcfm() {
  _has_bits_[2] |= 0x00020000u;
}
inline void Event::clear_has_webbugcfm() {
  _has_bits_[2] &= ~0x00020000u;
}
inline void Event::clear_webbugcfm() {
  if (webbugcfm_ != NULL) webbugcfm_->::WebBuyCfm::Clear();
  clear_has_webbugcfm();
}
inline const ::WebBuyCfm& Event::webbugcfm() const {
  // @@protoc_insertion_point(field_get:Event.webbugcfm)
  return webbugcfm_ != NULL ? *webbugcfm_ : *default_instance_->webbugcfm_;
}
inline ::WebBuyCfm* Event::mutable_webbugcfm() {
  set_has_webbugcfm();
  if (webbugcfm_ == NULL) {
    webbugcfm_ = new ::WebBuyCfm;
  }
  // @@protoc_insertion_point(field_mutable:Event.webbugcfm)
  return webbugcfm_;
}
inline ::WebBuyCfm* Event::release_webbugcfm() {
  clear_has_webbugcfm();
  ::WebBuyCfm* temp = webbugcfm_;
  webbugcfm_ = NULL;
  return temp;
}
inline void Event::set_allocated_webbugcfm(::WebBuyCfm* webbugcfm) {
  delete webbugcfm_;
  webbugcfm_ = webbugcfm;
  if (webbugcfm) {
    set_has_webbugcfm();
  } else {
    clear_has_webbugcfm();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webbugcfm)
}

// optional .Admin_SetVal_Req adminSetVal_req = 92;
inline bool Event::has_adminsetval_req() const {
  return (_has_bits_[2] & 0x00040000u) != 0;
}
inline void Event::set_has_adminsetval_req() {
  _has_bits_[2] |= 0x00040000u;
}
inline void Event::clear_has_adminsetval_req() {
  _has_bits_[2] &= ~0x00040000u;
}
inline void Event::clear_adminsetval_req() {
  if (adminsetval_req_ != NULL) adminsetval_req_->::Admin_SetVal_Req::Clear();
  clear_has_adminsetval_req();
}
inline const ::Admin_SetVal_Req& Event::adminsetval_req() const {
  // @@protoc_insertion_point(field_get:Event.adminSetVal_req)
  return adminsetval_req_ != NULL ? *adminsetval_req_ : *default_instance_->adminsetval_req_;
}
inline ::Admin_SetVal_Req* Event::mutable_adminsetval_req() {
  set_has_adminsetval_req();
  if (adminsetval_req_ == NULL) {
    adminsetval_req_ = new ::Admin_SetVal_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetVal_req)
  return adminsetval_req_;
}
inline ::Admin_SetVal_Req* Event::release_adminsetval_req() {
  clear_has_adminsetval_req();
  ::Admin_SetVal_Req* temp = adminsetval_req_;
  adminsetval_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetval_req(::Admin_SetVal_Req* adminsetval_req) {
  delete adminsetval_req_;
  adminsetval_req_ = adminsetval_req;
  if (adminsetval_req) {
    set_has_adminsetval_req();
  } else {
    clear_has_adminsetval_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetVal_req)
}

// optional .Admin_SetVal_Rsp adminSetVal_rsp = 93;
inline bool Event::has_adminsetval_rsp() const {
  return (_has_bits_[2] & 0x00080000u) != 0;
}
inline void Event::set_has_adminsetval_rsp() {
  _has_bits_[2] |= 0x00080000u;
}
inline void Event::clear_has_adminsetval_rsp() {
  _has_bits_[2] &= ~0x00080000u;
}
inline void Event::clear_adminsetval_rsp() {
  if (adminsetval_rsp_ != NULL) adminsetval_rsp_->::Admin_SetVal_Rsp::Clear();
  clear_has_adminsetval_rsp();
}
inline const ::Admin_SetVal_Rsp& Event::adminsetval_rsp() const {
  // @@protoc_insertion_point(field_get:Event.adminSetVal_rsp)
  return adminsetval_rsp_ != NULL ? *adminsetval_rsp_ : *default_instance_->adminsetval_rsp_;
}
inline ::Admin_SetVal_Rsp* Event::mutable_adminsetval_rsp() {
  set_has_adminsetval_rsp();
  if (adminsetval_rsp_ == NULL) {
    adminsetval_rsp_ = new ::Admin_SetVal_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.adminSetVal_rsp)
  return adminsetval_rsp_;
}
inline ::Admin_SetVal_Rsp* Event::release_adminsetval_rsp() {
  clear_has_adminsetval_rsp();
  ::Admin_SetVal_Rsp* temp = adminsetval_rsp_;
  adminsetval_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_adminsetval_rsp(::Admin_SetVal_Rsp* adminsetval_rsp) {
  delete adminsetval_rsp_;
  adminsetval_rsp_ = adminsetval_rsp;
  if (adminsetval_rsp) {
    set_has_adminsetval_rsp();
  } else {
    clear_has_adminsetval_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.adminSetVal_rsp)
}

// optional string sid = 94;
inline bool Event::has_sid() const {
  return (_has_bits_[2] & 0x00100000u) != 0;
}
inline void Event::set_has_sid() {
  _has_bits_[2] |= 0x00100000u;
}
inline void Event::clear_has_sid() {
  _has_bits_[2] &= ~0x00100000u;
}
inline void Event::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& Event::sid() const {
  // @@protoc_insertion_point(field_get:Event.sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Event.sid)
}
inline void Event::set_sid(const char* value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Event.sid)
}
inline void Event::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Event.sid)
}
inline ::std::string* Event::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:Event.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_sid() {
  clear_has_sid();
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:Event.sid)
}

// optional .WebAskFor webAsk = 95;
inline bool Event::has_webask() const {
  return (_has_bits_[2] & 0x00200000u) != 0;
}
inline void Event::set_has_webask() {
  _has_bits_[2] |= 0x00200000u;
}
inline void Event::clear_has_webask() {
  _has_bits_[2] &= ~0x00200000u;
}
inline void Event::clear_webask() {
  if (webask_ != NULL) webask_->::WebAskFor::Clear();
  clear_has_webask();
}
inline const ::WebAskFor& Event::webask() const {
  // @@protoc_insertion_point(field_get:Event.webAsk)
  return webask_ != NULL ? *webask_ : *default_instance_->webask_;
}
inline ::WebAskFor* Event::mutable_webask() {
  set_has_webask();
  if (webask_ == NULL) {
    webask_ = new ::WebAskFor;
  }
  // @@protoc_insertion_point(field_mutable:Event.webAsk)
  return webask_;
}
inline ::WebAskFor* Event::release_webask() {
  clear_has_webask();
  ::WebAskFor* temp = webask_;
  webask_ = NULL;
  return temp;
}
inline void Event::set_allocated_webask(::WebAskFor* webask) {
  delete webask_;
  webask_ = webask;
  if (webask) {
    set_has_webask();
  } else {
    clear_has_webask();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webAsk)
}

// optional .WebGiveFor webGive = 96;
inline bool Event::has_webgive() const {
  return (_has_bits_[2] & 0x00400000u) != 0;
}
inline void Event::set_has_webgive() {
  _has_bits_[2] |= 0x00400000u;
}
inline void Event::clear_has_webgive() {
  _has_bits_[2] &= ~0x00400000u;
}
inline void Event::clear_webgive() {
  if (webgive_ != NULL) webgive_->::WebGiveFor::Clear();
  clear_has_webgive();
}
inline const ::WebGiveFor& Event::webgive() const {
  // @@protoc_insertion_point(field_get:Event.webGive)
  return webgive_ != NULL ? *webgive_ : *default_instance_->webgive_;
}
inline ::WebGiveFor* Event::mutable_webgive() {
  set_has_webgive();
  if (webgive_ == NULL) {
    webgive_ = new ::WebGiveFor;
  }
  // @@protoc_insertion_point(field_mutable:Event.webGive)
  return webgive_;
}
inline ::WebGiveFor* Event::release_webgive() {
  clear_has_webgive();
  ::WebGiveFor* temp = webgive_;
  webgive_ = NULL;
  return temp;
}
inline void Event::set_allocated_webgive(::WebGiveFor* webgive) {
  delete webgive_;
  webgive_ = webgive;
  if (webgive) {
    set_has_webgive();
  } else {
    clear_has_webgive();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webGive)
}

// optional int32 pushbackcnt = 97 [default = 0];
inline bool Event::has_pushbackcnt() const {
  return (_has_bits_[2] & 0x00800000u) != 0;
}
inline void Event::set_has_pushbackcnt() {
  _has_bits_[2] |= 0x00800000u;
}
inline void Event::clear_has_pushbackcnt() {
  _has_bits_[2] &= ~0x00800000u;
}
inline void Event::clear_pushbackcnt() {
  pushbackcnt_ = 0;
  clear_has_pushbackcnt();
}
inline ::google::protobuf::int32 Event::pushbackcnt() const {
  // @@protoc_insertion_point(field_get:Event.pushbackcnt)
  return pushbackcnt_;
}
inline void Event::set_pushbackcnt(::google::protobuf::int32 value) {
  set_has_pushbackcnt();
  pushbackcnt_ = value;
  // @@protoc_insertion_point(field_set:Event.pushbackcnt)
}

// optional .QQUnionAddItem qqunion_additem = 98;
inline bool Event::has_qqunion_additem() const {
  return (_has_bits_[2] & 0x01000000u) != 0;
}
inline void Event::set_has_qqunion_additem() {
  _has_bits_[2] |= 0x01000000u;
}
inline void Event::clear_has_qqunion_additem() {
  _has_bits_[2] &= ~0x01000000u;
}
inline void Event::clear_qqunion_additem() {
  if (qqunion_additem_ != NULL) qqunion_additem_->::QQUnionAddItem::Clear();
  clear_has_qqunion_additem();
}
inline const ::QQUnionAddItem& Event::qqunion_additem() const {
  // @@protoc_insertion_point(field_get:Event.qqunion_additem)
  return qqunion_additem_ != NULL ? *qqunion_additem_ : *default_instance_->qqunion_additem_;
}
inline ::QQUnionAddItem* Event::mutable_qqunion_additem() {
  set_has_qqunion_additem();
  if (qqunion_additem_ == NULL) {
    qqunion_additem_ = new ::QQUnionAddItem;
  }
  // @@protoc_insertion_point(field_mutable:Event.qqunion_additem)
  return qqunion_additem_;
}
inline ::QQUnionAddItem* Event::release_qqunion_additem() {
  clear_has_qqunion_additem();
  ::QQUnionAddItem* temp = qqunion_additem_;
  qqunion_additem_ = NULL;
  return temp;
}
inline void Event::set_allocated_qqunion_additem(::QQUnionAddItem* qqunion_additem) {
  delete qqunion_additem_;
  qqunion_additem_ = qqunion_additem;
  if (qqunion_additem) {
    set_has_qqunion_additem();
  } else {
    clear_has_qqunion_additem();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.qqunion_additem)
}

// optional .QQUnionCheckOpenId qqunion_checkopenid = 99;
inline bool Event::has_qqunion_checkopenid() const {
  return (_has_bits_[2] & 0x02000000u) != 0;
}
inline void Event::set_has_qqunion_checkopenid() {
  _has_bits_[2] |= 0x02000000u;
}
inline void Event::clear_has_qqunion_checkopenid() {
  _has_bits_[2] &= ~0x02000000u;
}
inline void Event::clear_qqunion_checkopenid() {
  if (qqunion_checkopenid_ != NULL) qqunion_checkopenid_->::QQUnionCheckOpenId::Clear();
  clear_has_qqunion_checkopenid();
}
inline const ::QQUnionCheckOpenId& Event::qqunion_checkopenid() const {
  // @@protoc_insertion_point(field_get:Event.qqunion_checkopenid)
  return qqunion_checkopenid_ != NULL ? *qqunion_checkopenid_ : *default_instance_->qqunion_checkopenid_;
}
inline ::QQUnionCheckOpenId* Event::mutable_qqunion_checkopenid() {
  set_has_qqunion_checkopenid();
  if (qqunion_checkopenid_ == NULL) {
    qqunion_checkopenid_ = new ::QQUnionCheckOpenId;
  }
  // @@protoc_insertion_point(field_mutable:Event.qqunion_checkopenid)
  return qqunion_checkopenid_;
}
inline ::QQUnionCheckOpenId* Event::release_qqunion_checkopenid() {
  clear_has_qqunion_checkopenid();
  ::QQUnionCheckOpenId* temp = qqunion_checkopenid_;
  qqunion_checkopenid_ = NULL;
  return temp;
}
inline void Event::set_allocated_qqunion_checkopenid(::QQUnionCheckOpenId* qqunion_checkopenid) {
  delete qqunion_checkopenid_;
  qqunion_checkopenid_ = qqunion_checkopenid;
  if (qqunion_checkopenid) {
    set_has_qqunion_checkopenid();
  } else {
    clear_has_qqunion_checkopenid();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.qqunion_checkopenid)
}

// optional .QQUnionCheckKey qqunion_checkkey = 100;
inline bool Event::has_qqunion_checkkey() const {
  return (_has_bits_[2] & 0x04000000u) != 0;
}
inline void Event::set_has_qqunion_checkkey() {
  _has_bits_[2] |= 0x04000000u;
}
inline void Event::clear_has_qqunion_checkkey() {
  _has_bits_[2] &= ~0x04000000u;
}
inline void Event::clear_qqunion_checkkey() {
  if (qqunion_checkkey_ != NULL) qqunion_checkkey_->::QQUnionCheckKey::Clear();
  clear_has_qqunion_checkkey();
}
inline const ::QQUnionCheckKey& Event::qqunion_checkkey() const {
  // @@protoc_insertion_point(field_get:Event.qqunion_checkkey)
  return qqunion_checkkey_ != NULL ? *qqunion_checkkey_ : *default_instance_->qqunion_checkkey_;
}
inline ::QQUnionCheckKey* Event::mutable_qqunion_checkkey() {
  set_has_qqunion_checkkey();
  if (qqunion_checkkey_ == NULL) {
    qqunion_checkkey_ = new ::QQUnionCheckKey;
  }
  // @@protoc_insertion_point(field_mutable:Event.qqunion_checkkey)
  return qqunion_checkkey_;
}
inline ::QQUnionCheckKey* Event::release_qqunion_checkkey() {
  clear_has_qqunion_checkkey();
  ::QQUnionCheckKey* temp = qqunion_checkkey_;
  qqunion_checkkey_ = NULL;
  return temp;
}
inline void Event::set_allocated_qqunion_checkkey(::QQUnionCheckKey* qqunion_checkkey) {
  delete qqunion_checkkey_;
  qqunion_checkkey_ = qqunion_checkkey;
  if (qqunion_checkkey) {
    set_has_qqunion_checkkey();
  } else {
    clear_has_qqunion_checkkey();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.qqunion_checkkey)
}

// optional .MultiLevelFriendPoint multi_level_friend_point = 101;
inline bool Event::has_multi_level_friend_point() const {
  return (_has_bits_[2] & 0x08000000u) != 0;
}
inline void Event::set_has_multi_level_friend_point() {
  _has_bits_[2] |= 0x08000000u;
}
inline void Event::clear_has_multi_level_friend_point() {
  _has_bits_[2] &= ~0x08000000u;
}
inline void Event::clear_multi_level_friend_point() {
  if (multi_level_friend_point_ != NULL) multi_level_friend_point_->::MultiLevelFriendPoint::Clear();
  clear_has_multi_level_friend_point();
}
inline const ::MultiLevelFriendPoint& Event::multi_level_friend_point() const {
  // @@protoc_insertion_point(field_get:Event.multi_level_friend_point)
  return multi_level_friend_point_ != NULL ? *multi_level_friend_point_ : *default_instance_->multi_level_friend_point_;
}
inline ::MultiLevelFriendPoint* Event::mutable_multi_level_friend_point() {
  set_has_multi_level_friend_point();
  if (multi_level_friend_point_ == NULL) {
    multi_level_friend_point_ = new ::MultiLevelFriendPoint;
  }
  // @@protoc_insertion_point(field_mutable:Event.multi_level_friend_point)
  return multi_level_friend_point_;
}
inline ::MultiLevelFriendPoint* Event::release_multi_level_friend_point() {
  clear_has_multi_level_friend_point();
  ::MultiLevelFriendPoint* temp = multi_level_friend_point_;
  multi_level_friend_point_ = NULL;
  return temp;
}
inline void Event::set_allocated_multi_level_friend_point(::MultiLevelFriendPoint* multi_level_friend_point) {
  delete multi_level_friend_point_;
  multi_level_friend_point_ = multi_level_friend_point;
  if (multi_level_friend_point) {
    set_has_multi_level_friend_point();
  } else {
    clear_has_multi_level_friend_point();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.multi_level_friend_point)
}

// optional .Admin_Common_Req admin_common_req = 102;
inline bool Event::has_admin_common_req() const {
  return (_has_bits_[2] & 0x10000000u) != 0;
}
inline void Event::set_has_admin_common_req() {
  _has_bits_[2] |= 0x10000000u;
}
inline void Event::clear_has_admin_common_req() {
  _has_bits_[2] &= ~0x10000000u;
}
inline void Event::clear_admin_common_req() {
  if (admin_common_req_ != NULL) admin_common_req_->::Admin_Common_Req::Clear();
  clear_has_admin_common_req();
}
inline const ::Admin_Common_Req& Event::admin_common_req() const {
  // @@protoc_insertion_point(field_get:Event.admin_common_req)
  return admin_common_req_ != NULL ? *admin_common_req_ : *default_instance_->admin_common_req_;
}
inline ::Admin_Common_Req* Event::mutable_admin_common_req() {
  set_has_admin_common_req();
  if (admin_common_req_ == NULL) {
    admin_common_req_ = new ::Admin_Common_Req;
  }
  // @@protoc_insertion_point(field_mutable:Event.admin_common_req)
  return admin_common_req_;
}
inline ::Admin_Common_Req* Event::release_admin_common_req() {
  clear_has_admin_common_req();
  ::Admin_Common_Req* temp = admin_common_req_;
  admin_common_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_admin_common_req(::Admin_Common_Req* admin_common_req) {
  delete admin_common_req_;
  admin_common_req_ = admin_common_req;
  if (admin_common_req) {
    set_has_admin_common_req();
  } else {
    clear_has_admin_common_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.admin_common_req)
}

// optional .Admin_Common_Rsp admin_common_rsp = 103;
inline bool Event::has_admin_common_rsp() const {
  return (_has_bits_[2] & 0x20000000u) != 0;
}
inline void Event::set_has_admin_common_rsp() {
  _has_bits_[2] |= 0x20000000u;
}
inline void Event::clear_has_admin_common_rsp() {
  _has_bits_[2] &= ~0x20000000u;
}
inline void Event::clear_admin_common_rsp() {
  if (admin_common_rsp_ != NULL) admin_common_rsp_->::Admin_Common_Rsp::Clear();
  clear_has_admin_common_rsp();
}
inline const ::Admin_Common_Rsp& Event::admin_common_rsp() const {
  // @@protoc_insertion_point(field_get:Event.admin_common_rsp)
  return admin_common_rsp_ != NULL ? *admin_common_rsp_ : *default_instance_->admin_common_rsp_;
}
inline ::Admin_Common_Rsp* Event::mutable_admin_common_rsp() {
  set_has_admin_common_rsp();
  if (admin_common_rsp_ == NULL) {
    admin_common_rsp_ = new ::Admin_Common_Rsp;
  }
  // @@protoc_insertion_point(field_mutable:Event.admin_common_rsp)
  return admin_common_rsp_;
}
inline ::Admin_Common_Rsp* Event::release_admin_common_rsp() {
  clear_has_admin_common_rsp();
  ::Admin_Common_Rsp* temp = admin_common_rsp_;
  admin_common_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_admin_common_rsp(::Admin_Common_Rsp* admin_common_rsp) {
  delete admin_common_rsp_;
  admin_common_rsp_ = admin_common_rsp;
  if (admin_common_rsp) {
    set_has_admin_common_rsp();
  } else {
    clear_has_admin_common_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.admin_common_rsp)
}

// optional .TalentShow talent_show = 104;
inline bool Event::has_talent_show() const {
  return (_has_bits_[2] & 0x40000000u) != 0;
}
inline void Event::set_has_talent_show() {
  _has_bits_[2] |= 0x40000000u;
}
inline void Event::clear_has_talent_show() {
  _has_bits_[2] &= ~0x40000000u;
}
inline void Event::clear_talent_show() {
  if (talent_show_ != NULL) talent_show_->::TalentShow::Clear();
  clear_has_talent_show();
}
inline const ::TalentShow& Event::talent_show() const {
  // @@protoc_insertion_point(field_get:Event.talent_show)
  return talent_show_ != NULL ? *talent_show_ : *default_instance_->talent_show_;
}
inline ::TalentShow* Event::mutable_talent_show() {
  set_has_talent_show();
  if (talent_show_ == NULL) {
    talent_show_ = new ::TalentShow;
  }
  // @@protoc_insertion_point(field_mutable:Event.talent_show)
  return talent_show_;
}
inline ::TalentShow* Event::release_talent_show() {
  clear_has_talent_show();
  ::TalentShow* temp = talent_show_;
  talent_show_ = NULL;
  return temp;
}
inline void Event::set_allocated_talent_show(::TalentShow* talent_show) {
  delete talent_show_;
  talent_show_ = talent_show;
  if (talent_show) {
    set_has_talent_show();
  } else {
    clear_has_talent_show();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.talent_show)
}

// optional .TalentShowList talent_show_list = 105;
inline bool Event::has_talent_show_list() const {
  return (_has_bits_[2] & 0x80000000u) != 0;
}
inline void Event::set_has_talent_show_list() {
  _has_bits_[2] |= 0x80000000u;
}
inline void Event::clear_has_talent_show_list() {
  _has_bits_[2] &= ~0x80000000u;
}
inline void Event::clear_talent_show_list() {
  if (talent_show_list_ != NULL) talent_show_list_->::TalentShowList::Clear();
  clear_has_talent_show_list();
}
inline const ::TalentShowList& Event::talent_show_list() const {
  // @@protoc_insertion_point(field_get:Event.talent_show_list)
  return talent_show_list_ != NULL ? *talent_show_list_ : *default_instance_->talent_show_list_;
}
inline ::TalentShowList* Event::mutable_talent_show_list() {
  set_has_talent_show_list();
  if (talent_show_list_ == NULL) {
    talent_show_list_ = new ::TalentShowList;
  }
  // @@protoc_insertion_point(field_mutable:Event.talent_show_list)
  return talent_show_list_;
}
inline ::TalentShowList* Event::release_talent_show_list() {
  clear_has_talent_show_list();
  ::TalentShowList* temp = talent_show_list_;
  talent_show_list_ = NULL;
  return temp;
}
inline void Event::set_allocated_talent_show_list(::TalentShowList* talent_show_list) {
  delete talent_show_list_;
  talent_show_list_ = talent_show_list;
  if (talent_show_list) {
    set_has_talent_show_list();
  } else {
    clear_has_talent_show_list();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.talent_show_list)
}

// optional int32 gameid = 106;
inline bool Event::has_gameid() const {
  return (_has_bits_[3] & 0x00000001u) != 0;
}
inline void Event::set_has_gameid() {
  _has_bits_[3] |= 0x00000001u;
}
inline void Event::clear_has_gameid() {
  _has_bits_[3] &= ~0x00000001u;
}
inline void Event::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 Event::gameid() const {
  // @@protoc_insertion_point(field_get:Event.gameid)
  return gameid_;
}
inline void Event::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Event.gameid)
}

// optional int32 worldid = 107;
inline bool Event::has_worldid() const {
  return (_has_bits_[3] & 0x00000002u) != 0;
}
inline void Event::set_has_worldid() {
  _has_bits_[3] |= 0x00000002u;
}
inline void Event::clear_has_worldid() {
  _has_bits_[3] &= ~0x00000002u;
}
inline void Event::clear_worldid() {
  worldid_ = 0;
  clear_has_worldid();
}
inline ::google::protobuf::int32 Event::worldid() const {
  // @@protoc_insertion_point(field_get:Event.worldid)
  return worldid_;
}
inline void Event::set_worldid(::google::protobuf::int32 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:Event.worldid)
}

// optional int32 rankKind = 108;
inline bool Event::has_rankkind() const {
  return (_has_bits_[3] & 0x00000004u) != 0;
}
inline void Event::set_has_rankkind() {
  _has_bits_[3] |= 0x00000004u;
}
inline void Event::clear_has_rankkind() {
  _has_bits_[3] &= ~0x00000004u;
}
inline void Event::clear_rankkind() {
  rankkind_ = 0;
  clear_has_rankkind();
}
inline ::google::protobuf::int32 Event::rankkind() const {
  // @@protoc_insertion_point(field_get:Event.rankKind)
  return rankkind_;
}
inline void Event::set_rankkind(::google::protobuf::int32 value) {
  set_has_rankkind();
  rankkind_ = value;
  // @@protoc_insertion_point(field_set:Event.rankKind)
}

// optional .WebFreeGift freegift = 109;
inline bool Event::has_freegift() const {
  return (_has_bits_[3] & 0x00000008u) != 0;
}
inline void Event::set_has_freegift() {
  _has_bits_[3] |= 0x00000008u;
}
inline void Event::clear_has_freegift() {
  _has_bits_[3] &= ~0x00000008u;
}
inline void Event::clear_freegift() {
  if (freegift_ != NULL) freegift_->::WebFreeGift::Clear();
  clear_has_freegift();
}
inline const ::WebFreeGift& Event::freegift() const {
  // @@protoc_insertion_point(field_get:Event.freegift)
  return freegift_ != NULL ? *freegift_ : *default_instance_->freegift_;
}
inline ::WebFreeGift* Event::mutable_freegift() {
  set_has_freegift();
  if (freegift_ == NULL) {
    freegift_ = new ::WebFreeGift;
  }
  // @@protoc_insertion_point(field_mutable:Event.freegift)
  return freegift_;
}
inline ::WebFreeGift* Event::release_freegift() {
  clear_has_freegift();
  ::WebFreeGift* temp = freegift_;
  freegift_ = NULL;
  return temp;
}
inline void Event::set_allocated_freegift(::WebFreeGift* freegift) {
  delete freegift_;
  freegift_ = freegift;
  if (freegift) {
    set_has_freegift();
  } else {
    clear_has_freegift();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.freegift)
}

// optional .FriendSendGift friend_send_gift = 110;
inline bool Event::has_friend_send_gift() const {
  return (_has_bits_[3] & 0x00000010u) != 0;
}
inline void Event::set_has_friend_send_gift() {
  _has_bits_[3] |= 0x00000010u;
}
inline void Event::clear_has_friend_send_gift() {
  _has_bits_[3] &= ~0x00000010u;
}
inline void Event::clear_friend_send_gift() {
  if (friend_send_gift_ != NULL) friend_send_gift_->::FriendSendGift::Clear();
  clear_has_friend_send_gift();
}
inline const ::FriendSendGift& Event::friend_send_gift() const {
  // @@protoc_insertion_point(field_get:Event.friend_send_gift)
  return friend_send_gift_ != NULL ? *friend_send_gift_ : *default_instance_->friend_send_gift_;
}
inline ::FriendSendGift* Event::mutable_friend_send_gift() {
  set_has_friend_send_gift();
  if (friend_send_gift_ == NULL) {
    friend_send_gift_ = new ::FriendSendGift;
  }
  // @@protoc_insertion_point(field_mutable:Event.friend_send_gift)
  return friend_send_gift_;
}
inline ::FriendSendGift* Event::release_friend_send_gift() {
  clear_has_friend_send_gift();
  ::FriendSendGift* temp = friend_send_gift_;
  friend_send_gift_ = NULL;
  return temp;
}
inline void Event::set_allocated_friend_send_gift(::FriendSendGift* friend_send_gift) {
  delete friend_send_gift_;
  friend_send_gift_ = friend_send_gift;
  if (friend_send_gift) {
    set_has_friend_send_gift();
  } else {
    clear_has_friend_send_gift();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.friend_send_gift)
}

// optional .FortuneSteal fortune_steal = 111;
inline bool Event::has_fortune_steal() const {
  return (_has_bits_[3] & 0x00000020u) != 0;
}
inline void Event::set_has_fortune_steal() {
  _has_bits_[3] |= 0x00000020u;
}
inline void Event::clear_has_fortune_steal() {
  _has_bits_[3] &= ~0x00000020u;
}
inline void Event::clear_fortune_steal() {
  if (fortune_steal_ != NULL) fortune_steal_->::FortuneSteal::Clear();
  clear_has_fortune_steal();
}
inline const ::FortuneSteal& Event::fortune_steal() const {
  // @@protoc_insertion_point(field_get:Event.fortune_steal)
  return fortune_steal_ != NULL ? *fortune_steal_ : *default_instance_->fortune_steal_;
}
inline ::FortuneSteal* Event::mutable_fortune_steal() {
  set_has_fortune_steal();
  if (fortune_steal_ == NULL) {
    fortune_steal_ = new ::FortuneSteal;
  }
  // @@protoc_insertion_point(field_mutable:Event.fortune_steal)
  return fortune_steal_;
}
inline ::FortuneSteal* Event::release_fortune_steal() {
  clear_has_fortune_steal();
  ::FortuneSteal* temp = fortune_steal_;
  fortune_steal_ = NULL;
  return temp;
}
inline void Event::set_allocated_fortune_steal(::FortuneSteal* fortune_steal) {
  delete fortune_steal_;
  fortune_steal_ = fortune_steal;
  if (fortune_steal) {
    set_has_fortune_steal();
  } else {
    clear_has_fortune_steal();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.fortune_steal)
}

// optional .Wap_Str_Request wap_req = 112;
inline bool Event::has_wap_req() const {
  return (_has_bits_[3] & 0x00000040u) != 0;
}
inline void Event::set_has_wap_req() {
  _has_bits_[3] |= 0x00000040u;
}
inline void Event::clear_has_wap_req() {
  _has_bits_[3] &= ~0x00000040u;
}
inline void Event::clear_wap_req() {
  if (wap_req_ != NULL) wap_req_->::Wap_Str_Request::Clear();
  clear_has_wap_req();
}
inline const ::Wap_Str_Request& Event::wap_req() const {
  // @@protoc_insertion_point(field_get:Event.wap_req)
  return wap_req_ != NULL ? *wap_req_ : *default_instance_->wap_req_;
}
inline ::Wap_Str_Request* Event::mutable_wap_req() {
  set_has_wap_req();
  if (wap_req_ == NULL) {
    wap_req_ = new ::Wap_Str_Request;
  }
  // @@protoc_insertion_point(field_mutable:Event.wap_req)
  return wap_req_;
}
inline ::Wap_Str_Request* Event::release_wap_req() {
  clear_has_wap_req();
  ::Wap_Str_Request* temp = wap_req_;
  wap_req_ = NULL;
  return temp;
}
inline void Event::set_allocated_wap_req(::Wap_Str_Request* wap_req) {
  delete wap_req_;
  wap_req_ = wap_req;
  if (wap_req) {
    set_has_wap_req();
  } else {
    clear_has_wap_req();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.wap_req)
}

// optional .Wap_Str_Response wap_rsp = 113;
inline bool Event::has_wap_rsp() const {
  return (_has_bits_[3] & 0x00000080u) != 0;
}
inline void Event::set_has_wap_rsp() {
  _has_bits_[3] |= 0x00000080u;
}
inline void Event::clear_has_wap_rsp() {
  _has_bits_[3] &= ~0x00000080u;
}
inline void Event::clear_wap_rsp() {
  if (wap_rsp_ != NULL) wap_rsp_->::Wap_Str_Response::Clear();
  clear_has_wap_rsp();
}
inline const ::Wap_Str_Response& Event::wap_rsp() const {
  // @@protoc_insertion_point(field_get:Event.wap_rsp)
  return wap_rsp_ != NULL ? *wap_rsp_ : *default_instance_->wap_rsp_;
}
inline ::Wap_Str_Response* Event::mutable_wap_rsp() {
  set_has_wap_rsp();
  if (wap_rsp_ == NULL) {
    wap_rsp_ = new ::Wap_Str_Response;
  }
  // @@protoc_insertion_point(field_mutable:Event.wap_rsp)
  return wap_rsp_;
}
inline ::Wap_Str_Response* Event::release_wap_rsp() {
  clear_has_wap_rsp();
  ::Wap_Str_Response* temp = wap_rsp_;
  wap_rsp_ = NULL;
  return temp;
}
inline void Event::set_allocated_wap_rsp(::Wap_Str_Response* wap_rsp) {
  delete wap_rsp_;
  wap_rsp_ = wap_rsp;
  if (wap_rsp) {
    set_has_wap_rsp();
  } else {
    clear_has_wap_rsp();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.wap_rsp)
}

// optional .FriendRecallMsg friend_recall = 114;
inline bool Event::has_friend_recall() const {
  return (_has_bits_[3] & 0x00000100u) != 0;
}
inline void Event::set_has_friend_recall() {
  _has_bits_[3] |= 0x00000100u;
}
inline void Event::clear_has_friend_recall() {
  _has_bits_[3] &= ~0x00000100u;
}
inline void Event::clear_friend_recall() {
  if (friend_recall_ != NULL) friend_recall_->::FriendRecallMsg::Clear();
  clear_has_friend_recall();
}
inline const ::FriendRecallMsg& Event::friend_recall() const {
  // @@protoc_insertion_point(field_get:Event.friend_recall)
  return friend_recall_ != NULL ? *friend_recall_ : *default_instance_->friend_recall_;
}
inline ::FriendRecallMsg* Event::mutable_friend_recall() {
  set_has_friend_recall();
  if (friend_recall_ == NULL) {
    friend_recall_ = new ::FriendRecallMsg;
  }
  // @@protoc_insertion_point(field_mutable:Event.friend_recall)
  return friend_recall_;
}
inline ::FriendRecallMsg* Event::release_friend_recall() {
  clear_has_friend_recall();
  ::FriendRecallMsg* temp = friend_recall_;
  friend_recall_ = NULL;
  return temp;
}
inline void Event::set_allocated_friend_recall(::FriendRecallMsg* friend_recall) {
  delete friend_recall_;
  friend_recall_ = friend_recall;
  if (friend_recall) {
    set_has_friend_recall();
  } else {
    clear_has_friend_recall();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.friend_recall)
}

// optional string openid = 115;
inline bool Event::has_openid() const {
  return (_has_bits_[3] & 0x00000200u) != 0;
}
inline void Event::set_has_openid() {
  _has_bits_[3] |= 0x00000200u;
}
inline void Event::clear_has_openid() {
  _has_bits_[3] &= ~0x00000200u;
}
inline void Event::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& Event::openid() const {
  // @@protoc_insertion_point(field_get:Event.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Event.openid)
}
inline void Event::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Event.openid)
}
inline void Event::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Event.openid)
}
inline ::std::string* Event::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:Event.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_openid() {
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:Event.openid)
}

// repeated .SimpleMarkUser SimpleMare = 116;
inline int Event::simplemare_size() const {
  return simplemare_.size();
}
inline void Event::clear_simplemare() {
  simplemare_.Clear();
}
inline const ::SimpleMarkUser& Event::simplemare(int index) const {
  // @@protoc_insertion_point(field_get:Event.SimpleMare)
  return simplemare_.Get(index);
}
inline ::SimpleMarkUser* Event::mutable_simplemare(int index) {
  // @@protoc_insertion_point(field_mutable:Event.SimpleMare)
  return simplemare_.Mutable(index);
}
inline ::SimpleMarkUser* Event::add_simplemare() {
  // @@protoc_insertion_point(field_add:Event.SimpleMare)
  return simplemare_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SimpleMarkUser >&
Event::simplemare() const {
  // @@protoc_insertion_point(field_list:Event.SimpleMare)
  return simplemare_;
}
inline ::google::protobuf::RepeatedPtrField< ::SimpleMarkUser >*
Event::mutable_simplemare() {
  // @@protoc_insertion_point(field_mutable_list:Event.SimpleMare)
  return &simplemare_;
}

// optional .WebBuy3 webbuy3 = 117;
inline bool Event::has_webbuy3() const {
  return (_has_bits_[3] & 0x00000800u) != 0;
}
inline void Event::set_has_webbuy3() {
  _has_bits_[3] |= 0x00000800u;
}
inline void Event::clear_has_webbuy3() {
  _has_bits_[3] &= ~0x00000800u;
}
inline void Event::clear_webbuy3() {
  if (webbuy3_ != NULL) webbuy3_->::WebBuy3::Clear();
  clear_has_webbuy3();
}
inline const ::WebBuy3& Event::webbuy3() const {
  // @@protoc_insertion_point(field_get:Event.webbuy3)
  return webbuy3_ != NULL ? *webbuy3_ : *default_instance_->webbuy3_;
}
inline ::WebBuy3* Event::mutable_webbuy3() {
  set_has_webbuy3();
  if (webbuy3_ == NULL) {
    webbuy3_ = new ::WebBuy3;
  }
  // @@protoc_insertion_point(field_mutable:Event.webbuy3)
  return webbuy3_;
}
inline ::WebBuy3* Event::release_webbuy3() {
  clear_has_webbuy3();
  ::WebBuy3* temp = webbuy3_;
  webbuy3_ = NULL;
  return temp;
}
inline void Event::set_allocated_webbuy3(::WebBuy3* webbuy3) {
  delete webbuy3_;
  webbuy3_ = webbuy3;
  if (webbuy3) {
    set_has_webbuy3();
  } else {
    clear_has_webbuy3();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.webbuy3)
}

// optional .CenterLogicValue center_logic_value = 118;
inline bool Event::has_center_logic_value() const {
  return (_has_bits_[3] & 0x00001000u) != 0;
}
inline void Event::set_has_center_logic_value() {
  _has_bits_[3] |= 0x00001000u;
}
inline void Event::clear_has_center_logic_value() {
  _has_bits_[3] &= ~0x00001000u;
}
inline void Event::clear_center_logic_value() {
  if (center_logic_value_ != NULL) center_logic_value_->::CenterLogicValue::Clear();
  clear_has_center_logic_value();
}
inline const ::CenterLogicValue& Event::center_logic_value() const {
  // @@protoc_insertion_point(field_get:Event.center_logic_value)
  return center_logic_value_ != NULL ? *center_logic_value_ : *default_instance_->center_logic_value_;
}
inline ::CenterLogicValue* Event::mutable_center_logic_value() {
  set_has_center_logic_value();
  if (center_logic_value_ == NULL) {
    center_logic_value_ = new ::CenterLogicValue;
  }
  // @@protoc_insertion_point(field_mutable:Event.center_logic_value)
  return center_logic_value_;
}
inline ::CenterLogicValue* Event::release_center_logic_value() {
  clear_has_center_logic_value();
  ::CenterLogicValue* temp = center_logic_value_;
  center_logic_value_ = NULL;
  return temp;
}
inline void Event::set_allocated_center_logic_value(::CenterLogicValue* center_logic_value) {
  delete center_logic_value_;
  center_logic_value_ = center_logic_value;
  if (center_logic_value) {
    set_has_center_logic_value();
  } else {
    clear_has_center_logic_value();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.center_logic_value)
}

// optional .InviteFriendLvlSucc inviteFridData = 119;
inline bool Event::has_invitefriddata() const {
  return (_has_bits_[3] & 0x00002000u) != 0;
}
inline void Event::set_has_invitefriddata() {
  _has_bits_[3] |= 0x00002000u;
}
inline void Event::clear_has_invitefriddata() {
  _has_bits_[3] &= ~0x00002000u;
}
inline void Event::clear_invitefriddata() {
  if (invitefriddata_ != NULL) invitefriddata_->::InviteFriendLvlSucc::Clear();
  clear_has_invitefriddata();
}
inline const ::InviteFriendLvlSucc& Event::invitefriddata() const {
  // @@protoc_insertion_point(field_get:Event.inviteFridData)
  return invitefriddata_ != NULL ? *invitefriddata_ : *default_instance_->invitefriddata_;
}
inline ::InviteFriendLvlSucc* Event::mutable_invitefriddata() {
  set_has_invitefriddata();
  if (invitefriddata_ == NULL) {
    invitefriddata_ = new ::InviteFriendLvlSucc;
  }
  // @@protoc_insertion_point(field_mutable:Event.inviteFridData)
  return invitefriddata_;
}
inline ::InviteFriendLvlSucc* Event::release_invitefriddata() {
  clear_has_invitefriddata();
  ::InviteFriendLvlSucc* temp = invitefriddata_;
  invitefriddata_ = NULL;
  return temp;
}
inline void Event::set_allocated_invitefriddata(::InviteFriendLvlSucc* invitefriddata) {
  delete invitefriddata_;
  invitefriddata_ = invitefriddata;
  if (invitefriddata) {
    set_has_invitefriddata();
  } else {
    clear_has_invitefriddata();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.inviteFridData)
}

// optional .MseAuthState Mse_MseAuthState = 129;
inline bool Event::has_mse_mseauthstate() const {
  return (_has_bits_[3] & 0x00004000u) != 0;
}
inline void Event::set_has_mse_mseauthstate() {
  _has_bits_[3] |= 0x00004000u;
}
inline void Event::clear_has_mse_mseauthstate() {
  _has_bits_[3] &= ~0x00004000u;
}
inline void Event::clear_mse_mseauthstate() {
  if (mse_mseauthstate_ != NULL) mse_mseauthstate_->::MseAuthState::Clear();
  clear_has_mse_mseauthstate();
}
inline const ::MseAuthState& Event::mse_mseauthstate() const {
  // @@protoc_insertion_point(field_get:Event.Mse_MseAuthState)
  return mse_mseauthstate_ != NULL ? *mse_mseauthstate_ : *default_instance_->mse_mseauthstate_;
}
inline ::MseAuthState* Event::mutable_mse_mseauthstate() {
  set_has_mse_mseauthstate();
  if (mse_mseauthstate_ == NULL) {
    mse_mseauthstate_ = new ::MseAuthState;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mse_MseAuthState)
  return mse_mseauthstate_;
}
inline ::MseAuthState* Event::release_mse_mseauthstate() {
  clear_has_mse_mseauthstate();
  ::MseAuthState* temp = mse_mseauthstate_;
  mse_mseauthstate_ = NULL;
  return temp;
}
inline void Event::set_allocated_mse_mseauthstate(::MseAuthState* mse_mseauthstate) {
  delete mse_mseauthstate_;
  mse_mseauthstate_ = mse_mseauthstate;
  if (mse_mseauthstate) {
    set_has_mse_mseauthstate();
  } else {
    clear_has_mse_mseauthstate();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mse_MseAuthState)
}

// optional .MseFuncSwich Mse_MseFuncSwich = 130;
inline bool Event::has_mse_msefuncswich() const {
  return (_has_bits_[3] & 0x00008000u) != 0;
}
inline void Event::set_has_mse_msefuncswich() {
  _has_bits_[3] |= 0x00008000u;
}
inline void Event::clear_has_mse_msefuncswich() {
  _has_bits_[3] &= ~0x00008000u;
}
inline void Event::clear_mse_msefuncswich() {
  if (mse_msefuncswich_ != NULL) mse_msefuncswich_->::MseFuncSwich::Clear();
  clear_has_mse_msefuncswich();
}
inline const ::MseFuncSwich& Event::mse_msefuncswich() const {
  // @@protoc_insertion_point(field_get:Event.Mse_MseFuncSwich)
  return mse_msefuncswich_ != NULL ? *mse_msefuncswich_ : *default_instance_->mse_msefuncswich_;
}
inline ::MseFuncSwich* Event::mutable_mse_msefuncswich() {
  set_has_mse_msefuncswich();
  if (mse_msefuncswich_ == NULL) {
    mse_msefuncswich_ = new ::MseFuncSwich;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mse_MseFuncSwich)
  return mse_msefuncswich_;
}
inline ::MseFuncSwich* Event::release_mse_msefuncswich() {
  clear_has_mse_msefuncswich();
  ::MseFuncSwich* temp = mse_msefuncswich_;
  mse_msefuncswich_ = NULL;
  return temp;
}
inline void Event::set_allocated_mse_msefuncswich(::MseFuncSwich* mse_msefuncswich) {
  delete mse_msefuncswich_;
  mse_msefuncswich_ = mse_msefuncswich;
  if (mse_msefuncswich) {
    set_has_mse_msefuncswich();
  } else {
    clear_has_mse_msefuncswich();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mse_MseFuncSwich)
}

// optional .MceGatewayFunction Mce_MceGatewayFunction = 131;
inline bool Event::has_mce_mcegatewayfunction() const {
  return (_has_bits_[3] & 0x00010000u) != 0;
}
inline void Event::set_has_mce_mcegatewayfunction() {
  _has_bits_[3] |= 0x00010000u;
}
inline void Event::clear_has_mce_mcegatewayfunction() {
  _has_bits_[3] &= ~0x00010000u;
}
inline void Event::clear_mce_mcegatewayfunction() {
  if (mce_mcegatewayfunction_ != NULL) mce_mcegatewayfunction_->::MceGatewayFunction::Clear();
  clear_has_mce_mcegatewayfunction();
}
inline const ::MceGatewayFunction& Event::mce_mcegatewayfunction() const {
  // @@protoc_insertion_point(field_get:Event.Mce_MceGatewayFunction)
  return mce_mcegatewayfunction_ != NULL ? *mce_mcegatewayfunction_ : *default_instance_->mce_mcegatewayfunction_;
}
inline ::MceGatewayFunction* Event::mutable_mce_mcegatewayfunction() {
  set_has_mce_mcegatewayfunction();
  if (mce_mcegatewayfunction_ == NULL) {
    mce_mcegatewayfunction_ = new ::MceGatewayFunction;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mce_MceGatewayFunction)
  return mce_mcegatewayfunction_;
}
inline ::MceGatewayFunction* Event::release_mce_mcegatewayfunction() {
  clear_has_mce_mcegatewayfunction();
  ::MceGatewayFunction* temp = mce_mcegatewayfunction_;
  mce_mcegatewayfunction_ = NULL;
  return temp;
}
inline void Event::set_allocated_mce_mcegatewayfunction(::MceGatewayFunction* mce_mcegatewayfunction) {
  delete mce_mcegatewayfunction_;
  mce_mcegatewayfunction_ = mce_mcegatewayfunction;
  if (mce_mcegatewayfunction) {
    set_has_mce_mcegatewayfunction();
  } else {
    clear_has_mce_mcegatewayfunction();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mce_MceGatewayFunction)
}

// optional .MseGatewayFunction Mse_MseGatewayFunction = 132;
inline bool Event::has_mse_msegatewayfunction() const {
  return (_has_bits_[3] & 0x00020000u) != 0;
}
inline void Event::set_has_mse_msegatewayfunction() {
  _has_bits_[3] |= 0x00020000u;
}
inline void Event::clear_has_mse_msegatewayfunction() {
  _has_bits_[3] &= ~0x00020000u;
}
inline void Event::clear_mse_msegatewayfunction() {
  if (mse_msegatewayfunction_ != NULL) mse_msegatewayfunction_->::MseGatewayFunction::Clear();
  clear_has_mse_msegatewayfunction();
}
inline const ::MseGatewayFunction& Event::mse_msegatewayfunction() const {
  // @@protoc_insertion_point(field_get:Event.Mse_MseGatewayFunction)
  return mse_msegatewayfunction_ != NULL ? *mse_msegatewayfunction_ : *default_instance_->mse_msegatewayfunction_;
}
inline ::MseGatewayFunction* Event::mutable_mse_msegatewayfunction() {
  set_has_mse_msegatewayfunction();
  if (mse_msegatewayfunction_ == NULL) {
    mse_msegatewayfunction_ = new ::MseGatewayFunction;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mse_MseGatewayFunction)
  return mse_msegatewayfunction_;
}
inline ::MseGatewayFunction* Event::release_mse_msegatewayfunction() {
  clear_has_mse_msegatewayfunction();
  ::MseGatewayFunction* temp = mse_msegatewayfunction_;
  mse_msegatewayfunction_ = NULL;
  return temp;
}
inline void Event::set_allocated_mse_msegatewayfunction(::MseGatewayFunction* mse_msegatewayfunction) {
  delete mse_msegatewayfunction_;
  mse_msegatewayfunction_ = mse_msegatewayfunction;
  if (mse_msegatewayfunction) {
    set_has_mse_msegatewayfunction();
  } else {
    clear_has_mse_msegatewayfunction();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mse_MseGatewayFunction)
}

// optional .MseFriendList Mse_MseFriendList = 133;
inline bool Event::has_mse_msefriendlist() const {
  return (_has_bits_[3] & 0x00040000u) != 0;
}
inline void Event::set_has_mse_msefriendlist() {
  _has_bits_[3] |= 0x00040000u;
}
inline void Event::clear_has_mse_msefriendlist() {
  _has_bits_[3] &= ~0x00040000u;
}
inline void Event::clear_mse_msefriendlist() {
  if (mse_msefriendlist_ != NULL) mse_msefriendlist_->::MseFriendList::Clear();
  clear_has_mse_msefriendlist();
}
inline const ::MseFriendList& Event::mse_msefriendlist() const {
  // @@protoc_insertion_point(field_get:Event.Mse_MseFriendList)
  return mse_msefriendlist_ != NULL ? *mse_msefriendlist_ : *default_instance_->mse_msefriendlist_;
}
inline ::MseFriendList* Event::mutable_mse_msefriendlist() {
  set_has_mse_msefriendlist();
  if (mse_msefriendlist_ == NULL) {
    mse_msefriendlist_ = new ::MseFriendList;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mse_MseFriendList)
  return mse_msefriendlist_;
}
inline ::MseFriendList* Event::release_mse_msefriendlist() {
  clear_has_mse_msefriendlist();
  ::MseFriendList* temp = mse_msefriendlist_;
  mse_msefriendlist_ = NULL;
  return temp;
}
inline void Event::set_allocated_mse_msefriendlist(::MseFriendList* mse_msefriendlist) {
  delete mse_msefriendlist_;
  mse_msefriendlist_ = mse_msefriendlist;
  if (mse_msefriendlist) {
    set_has_mse_msefriendlist();
  } else {
    clear_has_mse_msefriendlist();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mse_MseFriendList)
}

// optional .MceHeartbeat Mce_MceHeartbeat = 134;
inline bool Event::has_mce_mceheartbeat() const {
  return (_has_bits_[3] & 0x00080000u) != 0;
}
inline void Event::set_has_mce_mceheartbeat() {
  _has_bits_[3] |= 0x00080000u;
}
inline void Event::clear_has_mce_mceheartbeat() {
  _has_bits_[3] &= ~0x00080000u;
}
inline void Event::clear_mce_mceheartbeat() {
  if (mce_mceheartbeat_ != NULL) mce_mceheartbeat_->::MceHeartbeat::Clear();
  clear_has_mce_mceheartbeat();
}
inline const ::MceHeartbeat& Event::mce_mceheartbeat() const {
  // @@protoc_insertion_point(field_get:Event.Mce_MceHeartbeat)
  return mce_mceheartbeat_ != NULL ? *mce_mceheartbeat_ : *default_instance_->mce_mceheartbeat_;
}
inline ::MceHeartbeat* Event::mutable_mce_mceheartbeat() {
  set_has_mce_mceheartbeat();
  if (mce_mceheartbeat_ == NULL) {
    mce_mceheartbeat_ = new ::MceHeartbeat;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mce_MceHeartbeat)
  return mce_mceheartbeat_;
}
inline ::MceHeartbeat* Event::release_mce_mceheartbeat() {
  clear_has_mce_mceheartbeat();
  ::MceHeartbeat* temp = mce_mceheartbeat_;
  mce_mceheartbeat_ = NULL;
  return temp;
}
inline void Event::set_allocated_mce_mceheartbeat(::MceHeartbeat* mce_mceheartbeat) {
  delete mce_mceheartbeat_;
  mce_mceheartbeat_ = mce_mceheartbeat;
  if (mce_mceheartbeat) {
    set_has_mce_mceheartbeat();
  } else {
    clear_has_mce_mceheartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mce_MceHeartbeat)
}

// optional .MceActionInfo Mce_MceActionInfo = 135;
inline bool Event::has_mce_mceactioninfo() const {
  return (_has_bits_[3] & 0x00100000u) != 0;
}
inline void Event::set_has_mce_mceactioninfo() {
  _has_bits_[3] |= 0x00100000u;
}
inline void Event::clear_has_mce_mceactioninfo() {
  _has_bits_[3] &= ~0x00100000u;
}
inline void Event::clear_mce_mceactioninfo() {
  if (mce_mceactioninfo_ != NULL) mce_mceactioninfo_->::MceActionInfo::Clear();
  clear_has_mce_mceactioninfo();
}
inline const ::MceActionInfo& Event::mce_mceactioninfo() const {
  // @@protoc_insertion_point(field_get:Event.Mce_MceActionInfo)
  return mce_mceactioninfo_ != NULL ? *mce_mceactioninfo_ : *default_instance_->mce_mceactioninfo_;
}
inline ::MceActionInfo* Event::mutable_mce_mceactioninfo() {
  set_has_mce_mceactioninfo();
  if (mce_mceactioninfo_ == NULL) {
    mce_mceactioninfo_ = new ::MceActionInfo;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mce_MceActionInfo)
  return mce_mceactioninfo_;
}
inline ::MceActionInfo* Event::release_mce_mceactioninfo() {
  clear_has_mce_mceactioninfo();
  ::MceActionInfo* temp = mce_mceactioninfo_;
  mce_mceactioninfo_ = NULL;
  return temp;
}
inline void Event::set_allocated_mce_mceactioninfo(::MceActionInfo* mce_mceactioninfo) {
  delete mce_mceactioninfo_;
  mce_mceactioninfo_ = mce_mceactioninfo;
  if (mce_mceactioninfo) {
    set_has_mce_mceactioninfo();
  } else {
    clear_has_mce_mceactioninfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mce_MceActionInfo)
}

// optional .MseActionInfo Mse_MseActionInfo = 136;
inline bool Event::has_mse_mseactioninfo() const {
  return (_has_bits_[3] & 0x00200000u) != 0;
}
inline void Event::set_has_mse_mseactioninfo() {
  _has_bits_[3] |= 0x00200000u;
}
inline void Event::clear_has_mse_mseactioninfo() {
  _has_bits_[3] &= ~0x00200000u;
}
inline void Event::clear_mse_mseactioninfo() {
  if (mse_mseactioninfo_ != NULL) mse_mseactioninfo_->::MseActionInfo::Clear();
  clear_has_mse_mseactioninfo();
}
inline const ::MseActionInfo& Event::mse_mseactioninfo() const {
  // @@protoc_insertion_point(field_get:Event.Mse_MseActionInfo)
  return mse_mseactioninfo_ != NULL ? *mse_mseactioninfo_ : *default_instance_->mse_mseactioninfo_;
}
inline ::MseActionInfo* Event::mutable_mse_mseactioninfo() {
  set_has_mse_mseactioninfo();
  if (mse_mseactioninfo_ == NULL) {
    mse_mseactioninfo_ = new ::MseActionInfo;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mse_MseActionInfo)
  return mse_mseactioninfo_;
}
inline ::MseActionInfo* Event::release_mse_mseactioninfo() {
  clear_has_mse_mseactioninfo();
  ::MseActionInfo* temp = mse_mseactioninfo_;
  mse_mseactioninfo_ = NULL;
  return temp;
}
inline void Event::set_allocated_mse_mseactioninfo(::MseActionInfo* mse_mseactioninfo) {
  delete mse_mseactioninfo_;
  mse_mseactioninfo_ = mse_mseactioninfo;
  if (mse_mseactioninfo) {
    set_has_mse_mseactioninfo();
  } else {
    clear_has_mse_mseactioninfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mse_MseActionInfo)
}

// optional .MseRank Mse_MseRank = 137;
inline bool Event::has_mse_mserank() const {
  return (_has_bits_[3] & 0x00400000u) != 0;
}
inline void Event::set_has_mse_mserank() {
  _has_bits_[3] |= 0x00400000u;
}
inline void Event::clear_has_mse_mserank() {
  _has_bits_[3] &= ~0x00400000u;
}
inline void Event::clear_mse_mserank() {
  if (mse_mserank_ != NULL) mse_mserank_->::MseRank::Clear();
  clear_has_mse_mserank();
}
inline const ::MseRank& Event::mse_mserank() const {
  // @@protoc_insertion_point(field_get:Event.Mse_MseRank)
  return mse_mserank_ != NULL ? *mse_mserank_ : *default_instance_->mse_mserank_;
}
inline ::MseRank* Event::mutable_mse_mserank() {
  set_has_mse_mserank();
  if (mse_mserank_ == NULL) {
    mse_mserank_ = new ::MseRank;
  }
  // @@protoc_insertion_point(field_mutable:Event.Mse_MseRank)
  return mse_mserank_;
}
inline ::MseRank* Event::release_mse_mserank() {
  clear_has_mse_mserank();
  ::MseRank* temp = mse_mserank_;
  mse_mserank_ = NULL;
  return temp;
}
inline void Event::set_allocated_mse_mserank(::MseRank* mse_mserank) {
  delete mse_mserank_;
  mse_mserank_ = mse_mserank;
  if (mse_mserank) {
    set_has_mse_mserank();
  } else {
    clear_has_mse_mserank();
  }
  // @@protoc_insertion_point(field_set_allocated:Event.Mse_MseRank)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_event_2eproto__INCLUDED
