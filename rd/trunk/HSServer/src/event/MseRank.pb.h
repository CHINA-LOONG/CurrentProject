// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MseRank.proto

#ifndef PROTOBUF_MseRank_2eproto__INCLUDED
#define PROTOBUF_MseRank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MseRank_2eproto();
void protobuf_AssignDesc_MseRank_2eproto();
void protobuf_ShutdownFile_MseRank_2eproto();

class SingleRankItem;
class MseRank;

// ===================================================================

class SingleRankItem : public ::google::protobuf::Message {
 public:
  SingleRankItem();
  virtual ~SingleRankItem();

  SingleRankItem(const SingleRankItem& from);

  inline SingleRankItem& operator=(const SingleRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleRankItem& default_instance();

  void Swap(SingleRankItem* other);

  // implements Message ----------------------------------------------

  inline SingleRankItem* New() const { return New(NULL); }

  SingleRankItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleRankItem& from);
  void MergeFrom(const SingleRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SingleRankItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int32 num = 3;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional string uid_str = 4;
  bool has_uid_str() const;
  void clear_uid_str();
  static const int kUidStrFieldNumber = 4;
  const ::std::string& uid_str() const;
  void set_uid_str(const ::std::string& value);
  void set_uid_str(const char* value);
  void set_uid_str(const char* value, size_t size);
  ::std::string* mutable_uid_str();
  ::std::string* release_uid_str();
  void set_allocated_uid_str(::std::string* uid_str);

  // optional string url = 5;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional int32 wave = 6 [default = 0];
  bool has_wave() const;
  void clear_wave();
  static const int kWaveFieldNumber = 6;
  ::google::protobuf::int32 wave() const;
  void set_wave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SingleRankItem)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_uid_str();
  inline void clear_has_uid_str();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_wave();
  inline void clear_has_wave();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::internal::ArenaStringPtr uid_str_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 wave_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend void  protobuf_AddDesc_MseRank_2eproto();
  friend void protobuf_AssignDesc_MseRank_2eproto();
  friend void protobuf_ShutdownFile_MseRank_2eproto();

  void InitAsDefaultInstance();
  static SingleRankItem* default_instance_;
};
// -------------------------------------------------------------------

class MseRank : public ::google::protobuf::Message {
 public:
  MseRank();
  virtual ~MseRank();

  MseRank(const MseRank& from);

  inline MseRank& operator=(const MseRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MseRank& default_instance();

  void Swap(MseRank* other);

  // implements Message ----------------------------------------------

  inline MseRank* New() const { return New(NULL); }

  MseRank* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MseRank& from);
  void MergeFrom(const MseRank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MseRank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rank_type = 1;
  bool has_rank_type() const;
  void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  ::google::protobuf::int32 rank_type() const;
  void set_rank_type(::google::protobuf::int32 value);

  // optional .SingleRankItem rank_item = 2;
  bool has_rank_item() const;
  void clear_rank_item();
  static const int kRankItemFieldNumber = 2;
  const ::SingleRankItem& rank_item() const;
  ::SingleRankItem* mutable_rank_item();
  ::SingleRankItem* release_rank_item();
  void set_allocated_rank_item(::SingleRankItem* rank_item);

  // optional int64 rank_version = 3;
  bool has_rank_version() const;
  void clear_rank_version();
  static const int kRankVersionFieldNumber = 3;
  ::google::protobuf::int64 rank_version() const;
  void set_rank_version(::google::protobuf::int64 value);

  // optional string rankname = 4 [default = ""];
  bool has_rankname() const;
  void clear_rankname();
  static const int kRanknameFieldNumber = 4;
  const ::std::string& rankname() const;
  void set_rankname(const ::std::string& value);
  void set_rankname(const char* value);
  void set_rankname(const char* value, size_t size);
  ::std::string* mutable_rankname();
  ::std::string* release_rankname();
  void set_allocated_rankname(::std::string* rankname);

  // optional int32 opernum = 5 [default = 0];
  bool has_opernum() const;
  void clear_opernum();
  static const int kOpernumFieldNumber = 5;
  ::google::protobuf::int32 opernum() const;
  void set_opernum(::google::protobuf::int32 value);

  // optional int32 rank_num = 6;
  bool has_rank_num() const;
  void clear_rank_num();
  static const int kRankNumFieldNumber = 6;
  ::google::protobuf::int32 rank_num() const;
  void set_rank_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MseRank)
 private:
  inline void set_has_rank_type();
  inline void clear_has_rank_type();
  inline void set_has_rank_item();
  inline void clear_has_rank_item();
  inline void set_has_rank_version();
  inline void clear_has_rank_version();
  inline void set_has_rankname();
  inline void clear_has_rankname();
  inline void set_has_opernum();
  inline void clear_has_opernum();
  inline void set_has_rank_num();
  inline void clear_has_rank_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SingleRankItem* rank_item_;
  ::google::protobuf::int64 rank_version_;
  ::google::protobuf::int32 rank_type_;
  ::google::protobuf::int32 opernum_;
  ::google::protobuf::internal::ArenaStringPtr rankname_;
  ::google::protobuf::int32 rank_num_;
  friend void  protobuf_AddDesc_MseRank_2eproto();
  friend void protobuf_AssignDesc_MseRank_2eproto();
  friend void protobuf_ShutdownFile_MseRank_2eproto();

  void InitAsDefaultInstance();
  static MseRank* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SingleRankItem

// optional string name = 1;
inline bool SingleRankItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleRankItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleRankItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleRankItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SingleRankItem::name() const {
  // @@protoc_insertion_point(field_get:SingleRankItem.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleRankItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SingleRankItem.name)
}
inline void SingleRankItem::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SingleRankItem.name)
}
inline void SingleRankItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SingleRankItem.name)
}
inline ::std::string* SingleRankItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:SingleRankItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleRankItem::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleRankItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SingleRankItem.name)
}

// optional int64 uid = 2;
inline bool SingleRankItem::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleRankItem::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleRankItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleRankItem::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 SingleRankItem::uid() const {
  // @@protoc_insertion_point(field_get:SingleRankItem.uid)
  return uid_;
}
inline void SingleRankItem::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:SingleRankItem.uid)
}

// optional int32 num = 3;
inline bool SingleRankItem::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleRankItem::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleRankItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleRankItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 SingleRankItem::num() const {
  // @@protoc_insertion_point(field_get:SingleRankItem.num)
  return num_;
}
inline void SingleRankItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:SingleRankItem.num)
}

// optional string uid_str = 4;
inline bool SingleRankItem::has_uid_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SingleRankItem::set_has_uid_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SingleRankItem::clear_has_uid_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SingleRankItem::clear_uid_str() {
  uid_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid_str();
}
inline const ::std::string& SingleRankItem::uid_str() const {
  // @@protoc_insertion_point(field_get:SingleRankItem.uid_str)
  return uid_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleRankItem::set_uid_str(const ::std::string& value) {
  set_has_uid_str();
  uid_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SingleRankItem.uid_str)
}
inline void SingleRankItem::set_uid_str(const char* value) {
  set_has_uid_str();
  uid_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SingleRankItem.uid_str)
}
inline void SingleRankItem::set_uid_str(const char* value, size_t size) {
  set_has_uid_str();
  uid_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SingleRankItem.uid_str)
}
inline ::std::string* SingleRankItem::mutable_uid_str() {
  set_has_uid_str();
  // @@protoc_insertion_point(field_mutable:SingleRankItem.uid_str)
  return uid_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleRankItem::release_uid_str() {
  clear_has_uid_str();
  return uid_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleRankItem::set_allocated_uid_str(::std::string* uid_str) {
  if (uid_str != NULL) {
    set_has_uid_str();
  } else {
    clear_has_uid_str();
  }
  uid_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid_str);
  // @@protoc_insertion_point(field_set_allocated:SingleRankItem.uid_str)
}

// optional string url = 5;
inline bool SingleRankItem::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SingleRankItem::set_has_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SingleRankItem::clear_has_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SingleRankItem::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& SingleRankItem::url() const {
  // @@protoc_insertion_point(field_get:SingleRankItem.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleRankItem::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SingleRankItem.url)
}
inline void SingleRankItem::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SingleRankItem.url)
}
inline void SingleRankItem::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SingleRankItem.url)
}
inline ::std::string* SingleRankItem::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:SingleRankItem.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleRankItem::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleRankItem::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:SingleRankItem.url)
}

// optional int32 wave = 6 [default = 0];
inline bool SingleRankItem::has_wave() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SingleRankItem::set_has_wave() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SingleRankItem::clear_has_wave() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SingleRankItem::clear_wave() {
  wave_ = 0;
  clear_has_wave();
}
inline ::google::protobuf::int32 SingleRankItem::wave() const {
  // @@protoc_insertion_point(field_get:SingleRankItem.wave)
  return wave_;
}
inline void SingleRankItem::set_wave(::google::protobuf::int32 value) {
  set_has_wave();
  wave_ = value;
  // @@protoc_insertion_point(field_set:SingleRankItem.wave)
}

// -------------------------------------------------------------------

// MseRank

// optional int32 rank_type = 1;
inline bool MseRank::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MseRank::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MseRank::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MseRank::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::google::protobuf::int32 MseRank::rank_type() const {
  // @@protoc_insertion_point(field_get:MseRank.rank_type)
  return rank_type_;
}
inline void MseRank::set_rank_type(::google::protobuf::int32 value) {
  set_has_rank_type();
  rank_type_ = value;
  // @@protoc_insertion_point(field_set:MseRank.rank_type)
}

// optional .SingleRankItem rank_item = 2;
inline bool MseRank::has_rank_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MseRank::set_has_rank_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MseRank::clear_has_rank_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MseRank::clear_rank_item() {
  if (rank_item_ != NULL) rank_item_->::SingleRankItem::Clear();
  clear_has_rank_item();
}
inline const ::SingleRankItem& MseRank::rank_item() const {
  // @@protoc_insertion_point(field_get:MseRank.rank_item)
  return rank_item_ != NULL ? *rank_item_ : *default_instance_->rank_item_;
}
inline ::SingleRankItem* MseRank::mutable_rank_item() {
  set_has_rank_item();
  if (rank_item_ == NULL) {
    rank_item_ = new ::SingleRankItem;
  }
  // @@protoc_insertion_point(field_mutable:MseRank.rank_item)
  return rank_item_;
}
inline ::SingleRankItem* MseRank::release_rank_item() {
  clear_has_rank_item();
  ::SingleRankItem* temp = rank_item_;
  rank_item_ = NULL;
  return temp;
}
inline void MseRank::set_allocated_rank_item(::SingleRankItem* rank_item) {
  delete rank_item_;
  rank_item_ = rank_item;
  if (rank_item) {
    set_has_rank_item();
  } else {
    clear_has_rank_item();
  }
  // @@protoc_insertion_point(field_set_allocated:MseRank.rank_item)
}

// optional int64 rank_version = 3;
inline bool MseRank::has_rank_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MseRank::set_has_rank_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MseRank::clear_has_rank_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MseRank::clear_rank_version() {
  rank_version_ = GOOGLE_LONGLONG(0);
  clear_has_rank_version();
}
inline ::google::protobuf::int64 MseRank::rank_version() const {
  // @@protoc_insertion_point(field_get:MseRank.rank_version)
  return rank_version_;
}
inline void MseRank::set_rank_version(::google::protobuf::int64 value) {
  set_has_rank_version();
  rank_version_ = value;
  // @@protoc_insertion_point(field_set:MseRank.rank_version)
}

// optional string rankname = 4 [default = ""];
inline bool MseRank::has_rankname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MseRank::set_has_rankname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MseRank::clear_has_rankname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MseRank::clear_rankname() {
  rankname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rankname();
}
inline const ::std::string& MseRank::rankname() const {
  // @@protoc_insertion_point(field_get:MseRank.rankname)
  return rankname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseRank::set_rankname(const ::std::string& value) {
  set_has_rankname();
  rankname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseRank.rankname)
}
inline void MseRank::set_rankname(const char* value) {
  set_has_rankname();
  rankname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseRank.rankname)
}
inline void MseRank::set_rankname(const char* value, size_t size) {
  set_has_rankname();
  rankname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseRank.rankname)
}
inline ::std::string* MseRank::mutable_rankname() {
  set_has_rankname();
  // @@protoc_insertion_point(field_mutable:MseRank.rankname)
  return rankname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MseRank::release_rankname() {
  clear_has_rankname();
  return rankname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseRank::set_allocated_rankname(::std::string* rankname) {
  if (rankname != NULL) {
    set_has_rankname();
  } else {
    clear_has_rankname();
  }
  rankname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rankname);
  // @@protoc_insertion_point(field_set_allocated:MseRank.rankname)
}

// optional int32 opernum = 5 [default = 0];
inline bool MseRank::has_opernum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MseRank::set_has_opernum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MseRank::clear_has_opernum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MseRank::clear_opernum() {
  opernum_ = 0;
  clear_has_opernum();
}
inline ::google::protobuf::int32 MseRank::opernum() const {
  // @@protoc_insertion_point(field_get:MseRank.opernum)
  return opernum_;
}
inline void MseRank::set_opernum(::google::protobuf::int32 value) {
  set_has_opernum();
  opernum_ = value;
  // @@protoc_insertion_point(field_set:MseRank.opernum)
}

// optional int32 rank_num = 6;
inline bool MseRank::has_rank_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MseRank::set_has_rank_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MseRank::clear_has_rank_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MseRank::clear_rank_num() {
  rank_num_ = 0;
  clear_has_rank_num();
}
inline ::google::protobuf::int32 MseRank::rank_num() const {
  // @@protoc_insertion_point(field_get:MseRank.rank_num)
  return rank_num_;
}
inline void MseRank::set_rank_num(::google::protobuf::int32 value) {
  set_has_rank_num();
  rank_num_ = value;
  // @@protoc_insertion_point(field_set:MseRank.rank_num)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MseRank_2eproto__INCLUDED
