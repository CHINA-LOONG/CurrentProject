// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MceGatewayFunction.proto

#ifndef PROTOBUF_MceGatewayFunction_2eproto__INCLUDED
#define PROTOBUF_MceGatewayFunction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MceGatewayFunction_2eproto();
void protobuf_AssignDesc_MceGatewayFunction_2eproto();
void protobuf_ShutdownFile_MceGatewayFunction_2eproto();

class MceGatewayFunction;

// ===================================================================

class MceGatewayFunction : public ::google::protobuf::Message {
 public:
  MceGatewayFunction();
  virtual ~MceGatewayFunction();

  MceGatewayFunction(const MceGatewayFunction& from);

  inline MceGatewayFunction& operator=(const MceGatewayFunction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MceGatewayFunction& default_instance();

  void Swap(MceGatewayFunction* other);

  // implements Message ----------------------------------------------

  inline MceGatewayFunction* New() const { return New(NULL); }

  MceGatewayFunction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MceGatewayFunction& from);
  void MergeFrom(const MceGatewayFunction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MceGatewayFunction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 action_idx = 1;
  bool has_action_idx() const;
  void clear_action_idx();
  static const int kActionIdxFieldNumber = 1;
  ::google::protobuf::int32 action_idx() const;
  void set_action_idx(::google::protobuf::int32 value);

  // optional string ServerName = 2;
  bool has_servername() const;
  void clear_servername();
  static const int kServerNameFieldNumber = 2;
  const ::std::string& servername() const;
  void set_servername(const ::std::string& value);
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  ::std::string* mutable_servername();
  ::std::string* release_servername();
  void set_allocated_servername(::std::string* servername);

  // optional string ActionName = 3;
  bool has_actionname() const;
  void clear_actionname();
  static const int kActionNameFieldNumber = 3;
  const ::std::string& actionname() const;
  void set_actionname(const ::std::string& value);
  void set_actionname(const char* value);
  void set_actionname(const char* value, size_t size);
  ::std::string* mutable_actionname();
  ::std::string* release_actionname();
  void set_allocated_actionname(::std::string* actionname);

  // optional string JsonAttr = 4;
  bool has_jsonattr() const;
  void clear_jsonattr();
  static const int kJsonAttrFieldNumber = 4;
  const ::std::string& jsonattr() const;
  void set_jsonattr(const ::std::string& value);
  void set_jsonattr(const char* value);
  void set_jsonattr(const char* value, size_t size);
  ::std::string* mutable_jsonattr();
  ::std::string* release_jsonattr();
  void set_allocated_jsonattr(::std::string* jsonattr);

  // @@protoc_insertion_point(class_scope:MceGatewayFunction)
 private:
  inline void set_has_action_idx();
  inline void clear_has_action_idx();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_actionname();
  inline void clear_has_actionname();
  inline void set_has_jsonattr();
  inline void clear_has_jsonattr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr servername_;
  ::google::protobuf::internal::ArenaStringPtr actionname_;
  ::google::protobuf::internal::ArenaStringPtr jsonattr_;
  ::google::protobuf::int32 action_idx_;
  friend void  protobuf_AddDesc_MceGatewayFunction_2eproto();
  friend void protobuf_AssignDesc_MceGatewayFunction_2eproto();
  friend void protobuf_ShutdownFile_MceGatewayFunction_2eproto();

  void InitAsDefaultInstance();
  static MceGatewayFunction* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MceGatewayFunction

// optional int32 action_idx = 1;
inline bool MceGatewayFunction::has_action_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MceGatewayFunction::set_has_action_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MceGatewayFunction::clear_has_action_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MceGatewayFunction::clear_action_idx() {
  action_idx_ = 0;
  clear_has_action_idx();
}
inline ::google::protobuf::int32 MceGatewayFunction::action_idx() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.action_idx)
  return action_idx_;
}
inline void MceGatewayFunction::set_action_idx(::google::protobuf::int32 value) {
  set_has_action_idx();
  action_idx_ = value;
  // @@protoc_insertion_point(field_set:MceGatewayFunction.action_idx)
}

// optional string ServerName = 2;
inline bool MceGatewayFunction::has_servername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MceGatewayFunction::set_has_servername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MceGatewayFunction::clear_has_servername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MceGatewayFunction::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servername();
}
inline const ::std::string& MceGatewayFunction::servername() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.ServerName)
  return servername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MceGatewayFunction::set_servername(const ::std::string& value) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MceGatewayFunction.ServerName)
}
inline void MceGatewayFunction::set_servername(const char* value) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MceGatewayFunction.ServerName)
}
inline void MceGatewayFunction::set_servername(const char* value, size_t size) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MceGatewayFunction.ServerName)
}
inline ::std::string* MceGatewayFunction::mutable_servername() {
  set_has_servername();
  // @@protoc_insertion_point(field_mutable:MceGatewayFunction.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MceGatewayFunction::release_servername() {
  clear_has_servername();
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MceGatewayFunction::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    set_has_servername();
  } else {
    clear_has_servername();
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:MceGatewayFunction.ServerName)
}

// optional string ActionName = 3;
inline bool MceGatewayFunction::has_actionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MceGatewayFunction::set_has_actionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MceGatewayFunction::clear_has_actionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MceGatewayFunction::clear_actionname() {
  actionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actionname();
}
inline const ::std::string& MceGatewayFunction::actionname() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.ActionName)
  return actionname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MceGatewayFunction::set_actionname(const ::std::string& value) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MceGatewayFunction.ActionName)
}
inline void MceGatewayFunction::set_actionname(const char* value) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MceGatewayFunction.ActionName)
}
inline void MceGatewayFunction::set_actionname(const char* value, size_t size) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MceGatewayFunction.ActionName)
}
inline ::std::string* MceGatewayFunction::mutable_actionname() {
  set_has_actionname();
  // @@protoc_insertion_point(field_mutable:MceGatewayFunction.ActionName)
  return actionname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MceGatewayFunction::release_actionname() {
  clear_has_actionname();
  return actionname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MceGatewayFunction::set_allocated_actionname(::std::string* actionname) {
  if (actionname != NULL) {
    set_has_actionname();
  } else {
    clear_has_actionname();
  }
  actionname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actionname);
  // @@protoc_insertion_point(field_set_allocated:MceGatewayFunction.ActionName)
}

// optional string JsonAttr = 4;
inline bool MceGatewayFunction::has_jsonattr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MceGatewayFunction::set_has_jsonattr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MceGatewayFunction::clear_has_jsonattr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MceGatewayFunction::clear_jsonattr() {
  jsonattr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jsonattr();
}
inline const ::std::string& MceGatewayFunction::jsonattr() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.JsonAttr)
  return jsonattr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MceGatewayFunction::set_jsonattr(const ::std::string& value) {
  set_has_jsonattr();
  jsonattr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MceGatewayFunction.JsonAttr)
}
inline void MceGatewayFunction::set_jsonattr(const char* value) {
  set_has_jsonattr();
  jsonattr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MceGatewayFunction.JsonAttr)
}
inline void MceGatewayFunction::set_jsonattr(const char* value, size_t size) {
  set_has_jsonattr();
  jsonattr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MceGatewayFunction.JsonAttr)
}
inline ::std::string* MceGatewayFunction::mutable_jsonattr() {
  set_has_jsonattr();
  // @@protoc_insertion_point(field_mutable:MceGatewayFunction.JsonAttr)
  return jsonattr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MceGatewayFunction::release_jsonattr() {
  clear_has_jsonattr();
  return jsonattr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MceGatewayFunction::set_allocated_jsonattr(::std::string* jsonattr) {
  if (jsonattr != NULL) {
    set_has_jsonattr();
  } else {
    clear_has_jsonattr();
  }
  jsonattr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsonattr);
  // @@protoc_insertion_point(field_set_allocated:MceGatewayFunction.JsonAttr)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MceGatewayFunction_2eproto__INCLUDED
