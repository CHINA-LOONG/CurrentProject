// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MseGatewayFunction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MseGatewayFunction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MseGatewayFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MseGatewayFunction_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MseGatewayFunction_2eproto() {
  protobuf_AddDesc_MseGatewayFunction_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MseGatewayFunction.proto");
  GOOGLE_CHECK(file != NULL);
  MseGatewayFunction_descriptor_ = file->message_type(0);
  static const int MseGatewayFunction_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, action_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, servername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, actionname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, jsonresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, dbm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, totalpage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, currpage_),
  };
  MseGatewayFunction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MseGatewayFunction_descriptor_,
      MseGatewayFunction::default_instance_,
      MseGatewayFunction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, _has_bits_[0]),
      -1,
      -1,
      sizeof(MseGatewayFunction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseGatewayFunction, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MseGatewayFunction_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MseGatewayFunction_descriptor_, &MseGatewayFunction::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MseGatewayFunction_2eproto() {
  delete MseGatewayFunction::default_instance_;
  delete MseGatewayFunction_reflection_;
}

void protobuf_AddDesc_MseGatewayFunction_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030MseGatewayFunction.proto\"\251\001\n\022MseGatewa"
    "yFunction\022\022\n\naction_idx\030\001 \001(\005\022\022\n\nServerN"
    "ame\030\002 \001(\t\022\022\n\nActionName\030\003 \001(\t\022\022\n\nJsonRes"
    "ult\030\004 \001(\t\022\013\n\003err\030\005 \001(\005\022\013\n\003dbm\030\006 \001(\t\022\024\n\tT"
    "otalPage\030\007 \001(\005:\0011\022\023\n\010CurrPage\030\010 \001(\005:\0011", 198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MseGatewayFunction.proto", &protobuf_RegisterTypes);
  MseGatewayFunction::default_instance_ = new MseGatewayFunction();
  MseGatewayFunction::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MseGatewayFunction_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MseGatewayFunction_2eproto {
  StaticDescriptorInitializer_MseGatewayFunction_2eproto() {
    protobuf_AddDesc_MseGatewayFunction_2eproto();
  }
} static_descriptor_initializer_MseGatewayFunction_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MseGatewayFunction::kActionIdxFieldNumber;
const int MseGatewayFunction::kServerNameFieldNumber;
const int MseGatewayFunction::kActionNameFieldNumber;
const int MseGatewayFunction::kJsonResultFieldNumber;
const int MseGatewayFunction::kErrFieldNumber;
const int MseGatewayFunction::kDbmFieldNumber;
const int MseGatewayFunction::kTotalPageFieldNumber;
const int MseGatewayFunction::kCurrPageFieldNumber;
#endif  // !_MSC_VER

MseGatewayFunction::MseGatewayFunction()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MseGatewayFunction)
}

void MseGatewayFunction::InitAsDefaultInstance() {
}

MseGatewayFunction::MseGatewayFunction(const MseGatewayFunction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MseGatewayFunction)
}

void MseGatewayFunction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  action_idx_ = 0;
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jsonresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  dbm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalpage_ = 1;
  currpage_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MseGatewayFunction::~MseGatewayFunction() {
  // @@protoc_insertion_point(destructor:MseGatewayFunction)
  SharedDtor();
}

void MseGatewayFunction::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jsonresult_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MseGatewayFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MseGatewayFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MseGatewayFunction_descriptor_;
}

const MseGatewayFunction& MseGatewayFunction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MseGatewayFunction_2eproto();
  return *default_instance_;
}

MseGatewayFunction* MseGatewayFunction::default_instance_ = NULL;

MseGatewayFunction* MseGatewayFunction::New(::google::protobuf::Arena* arena) const {
  MseGatewayFunction* n = new MseGatewayFunction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MseGatewayFunction::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MseGatewayFunction*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(action_idx_, err_);
    if (has_servername()) {
      servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_actionname()) {
      actionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_jsonresult()) {
      jsonresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dbm()) {
      dbm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    totalpage_ = 1;
    currpage_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MseGatewayFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MseGatewayFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 action_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_idx_)));
          set_has_action_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerName;
        break;
      }

      // optional string ServerName = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MseGatewayFunction.ServerName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ActionName;
        break;
      }

      // optional string ActionName = 3;
      case 3: {
        if (tag == 26) {
         parse_ActionName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actionname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actionname().data(), this->actionname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MseGatewayFunction.ActionName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_JsonResult;
        break;
      }

      // optional string JsonResult = 4;
      case 4: {
        if (tag == 34) {
         parse_JsonResult:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonresult()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jsonresult().data(), this->jsonresult().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MseGatewayFunction.JsonResult");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_err;
        break;
      }

      // optional int32 err = 5;
      case 5: {
        if (tag == 40) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_dbm;
        break;
      }

      // optional string dbm = 6;
      case 6: {
        if (tag == 50) {
         parse_dbm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dbm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dbm().data(), this->dbm().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MseGatewayFunction.dbm");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_TotalPage;
        break;
      }

      // optional int32 TotalPage = 7 [default = 1];
      case 7: {
        if (tag == 56) {
         parse_TotalPage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalpage_)));
          set_has_totalpage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_CurrPage;
        break;
      }

      // optional int32 CurrPage = 8 [default = 1];
      case 8: {
        if (tag == 64) {
         parse_CurrPage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currpage_)));
          set_has_currpage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MseGatewayFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MseGatewayFunction)
  return false;
#undef DO_
}

void MseGatewayFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MseGatewayFunction)
  // optional int32 action_idx = 1;
  if (has_action_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action_idx(), output);
  }

  // optional string ServerName = 2;
  if (has_servername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // optional string ActionName = 3;
  if (has_actionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actionname().data(), this->actionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.ActionName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->actionname(), output);
  }

  // optional string JsonResult = 4;
  if (has_jsonresult()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jsonresult().data(), this->jsonresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.JsonResult");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->jsonresult(), output);
  }

  // optional int32 err = 5;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->err(), output);
  }

  // optional string dbm = 6;
  if (has_dbm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dbm().data(), this->dbm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.dbm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dbm(), output);
  }

  // optional int32 TotalPage = 7 [default = 1];
  if (has_totalpage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->totalpage(), output);
  }

  // optional int32 CurrPage = 8 [default = 1];
  if (has_currpage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->currpage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MseGatewayFunction)
}

::google::protobuf::uint8* MseGatewayFunction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MseGatewayFunction)
  // optional int32 action_idx = 1;
  if (has_action_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action_idx(), target);
  }

  // optional string ServerName = 2;
  if (has_servername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // optional string ActionName = 3;
  if (has_actionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actionname().data(), this->actionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.ActionName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->actionname(), target);
  }

  // optional string JsonResult = 4;
  if (has_jsonresult()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jsonresult().data(), this->jsonresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.JsonResult");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->jsonresult(), target);
  }

  // optional int32 err = 5;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->err(), target);
  }

  // optional string dbm = 6;
  if (has_dbm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dbm().data(), this->dbm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseGatewayFunction.dbm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dbm(), target);
  }

  // optional int32 TotalPage = 7 [default = 1];
  if (has_totalpage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->totalpage(), target);
  }

  // optional int32 CurrPage = 8 [default = 1];
  if (has_currpage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->currpage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MseGatewayFunction)
  return target;
}

int MseGatewayFunction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 action_idx = 1;
    if (has_action_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_idx());
    }

    // optional string ServerName = 2;
    if (has_servername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->servername());
    }

    // optional string ActionName = 3;
    if (has_actionname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actionname());
    }

    // optional string JsonResult = 4;
    if (has_jsonresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jsonresult());
    }

    // optional int32 err = 5;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err());
    }

    // optional string dbm = 6;
    if (has_dbm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dbm());
    }

    // optional int32 TotalPage = 7 [default = 1];
    if (has_totalpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalpage());
    }

    // optional int32 CurrPage = 8 [default = 1];
    if (has_currpage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currpage());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MseGatewayFunction::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MseGatewayFunction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MseGatewayFunction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MseGatewayFunction::MergeFrom(const MseGatewayFunction& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_action_idx()) {
      set_action_idx(from.action_idx());
    }
    if (from.has_servername()) {
      set_has_servername();
      servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
    }
    if (from.has_actionname()) {
      set_has_actionname();
      actionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionname_);
    }
    if (from.has_jsonresult()) {
      set_has_jsonresult();
      jsonresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonresult_);
    }
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_dbm()) {
      set_has_dbm();
      dbm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dbm_);
    }
    if (from.has_totalpage()) {
      set_totalpage(from.totalpage());
    }
    if (from.has_currpage()) {
      set_currpage(from.currpage());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MseGatewayFunction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MseGatewayFunction::CopyFrom(const MseGatewayFunction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MseGatewayFunction::IsInitialized() const {

  return true;
}

void MseGatewayFunction::Swap(MseGatewayFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MseGatewayFunction::InternalSwap(MseGatewayFunction* other) {
  std::swap(action_idx_, other->action_idx_);
  servername_.Swap(&other->servername_);
  actionname_.Swap(&other->actionname_);
  jsonresult_.Swap(&other->jsonresult_);
  std::swap(err_, other->err_);
  dbm_.Swap(&other->dbm_);
  std::swap(totalpage_, other->totalpage_);
  std::swap(currpage_, other->currpage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MseGatewayFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MseGatewayFunction_descriptor_;
  metadata.reflection = MseGatewayFunction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MseGatewayFunction

// optional int32 action_idx = 1;
 bool MseGatewayFunction::has_action_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MseGatewayFunction::set_has_action_idx() {
  _has_bits_[0] |= 0x00000001u;
}
 void MseGatewayFunction::clear_has_action_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MseGatewayFunction::clear_action_idx() {
  action_idx_ = 0;
  clear_has_action_idx();
}
 ::google::protobuf::int32 MseGatewayFunction::action_idx() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.action_idx)
  return action_idx_;
}
 void MseGatewayFunction::set_action_idx(::google::protobuf::int32 value) {
  set_has_action_idx();
  action_idx_ = value;
  // @@protoc_insertion_point(field_set:MseGatewayFunction.action_idx)
}

// optional string ServerName = 2;
 bool MseGatewayFunction::has_servername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MseGatewayFunction::set_has_servername() {
  _has_bits_[0] |= 0x00000002u;
}
 void MseGatewayFunction::clear_has_servername() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MseGatewayFunction::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servername();
}
 const ::std::string& MseGatewayFunction::servername() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.ServerName)
  return servername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_servername(const ::std::string& value) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseGatewayFunction.ServerName)
}
 void MseGatewayFunction::set_servername(const char* value) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseGatewayFunction.ServerName)
}
 void MseGatewayFunction::set_servername(const char* value, size_t size) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseGatewayFunction.ServerName)
}
 ::std::string* MseGatewayFunction::mutable_servername() {
  set_has_servername();
  // @@protoc_insertion_point(field_mutable:MseGatewayFunction.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MseGatewayFunction::release_servername() {
  clear_has_servername();
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    set_has_servername();
  } else {
    clear_has_servername();
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:MseGatewayFunction.ServerName)
}

// optional string ActionName = 3;
 bool MseGatewayFunction::has_actionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MseGatewayFunction::set_has_actionname() {
  _has_bits_[0] |= 0x00000004u;
}
 void MseGatewayFunction::clear_has_actionname() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MseGatewayFunction::clear_actionname() {
  actionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actionname();
}
 const ::std::string& MseGatewayFunction::actionname() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.ActionName)
  return actionname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_actionname(const ::std::string& value) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseGatewayFunction.ActionName)
}
 void MseGatewayFunction::set_actionname(const char* value) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseGatewayFunction.ActionName)
}
 void MseGatewayFunction::set_actionname(const char* value, size_t size) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseGatewayFunction.ActionName)
}
 ::std::string* MseGatewayFunction::mutable_actionname() {
  set_has_actionname();
  // @@protoc_insertion_point(field_mutable:MseGatewayFunction.ActionName)
  return actionname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MseGatewayFunction::release_actionname() {
  clear_has_actionname();
  return actionname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_allocated_actionname(::std::string* actionname) {
  if (actionname != NULL) {
    set_has_actionname();
  } else {
    clear_has_actionname();
  }
  actionname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actionname);
  // @@protoc_insertion_point(field_set_allocated:MseGatewayFunction.ActionName)
}

// optional string JsonResult = 4;
 bool MseGatewayFunction::has_jsonresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MseGatewayFunction::set_has_jsonresult() {
  _has_bits_[0] |= 0x00000008u;
}
 void MseGatewayFunction::clear_has_jsonresult() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MseGatewayFunction::clear_jsonresult() {
  jsonresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jsonresult();
}
 const ::std::string& MseGatewayFunction::jsonresult() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.JsonResult)
  return jsonresult_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_jsonresult(const ::std::string& value) {
  set_has_jsonresult();
  jsonresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseGatewayFunction.JsonResult)
}
 void MseGatewayFunction::set_jsonresult(const char* value) {
  set_has_jsonresult();
  jsonresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseGatewayFunction.JsonResult)
}
 void MseGatewayFunction::set_jsonresult(const char* value, size_t size) {
  set_has_jsonresult();
  jsonresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseGatewayFunction.JsonResult)
}
 ::std::string* MseGatewayFunction::mutable_jsonresult() {
  set_has_jsonresult();
  // @@protoc_insertion_point(field_mutable:MseGatewayFunction.JsonResult)
  return jsonresult_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MseGatewayFunction::release_jsonresult() {
  clear_has_jsonresult();
  return jsonresult_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_allocated_jsonresult(::std::string* jsonresult) {
  if (jsonresult != NULL) {
    set_has_jsonresult();
  } else {
    clear_has_jsonresult();
  }
  jsonresult_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsonresult);
  // @@protoc_insertion_point(field_set_allocated:MseGatewayFunction.JsonResult)
}

// optional int32 err = 5;
 bool MseGatewayFunction::has_err() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void MseGatewayFunction::set_has_err() {
  _has_bits_[0] |= 0x00000010u;
}
 void MseGatewayFunction::clear_has_err() {
  _has_bits_[0] &= ~0x00000010u;
}
 void MseGatewayFunction::clear_err() {
  err_ = 0;
  clear_has_err();
}
 ::google::protobuf::int32 MseGatewayFunction::err() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.err)
  return err_;
}
 void MseGatewayFunction::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:MseGatewayFunction.err)
}

// optional string dbm = 6;
 bool MseGatewayFunction::has_dbm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void MseGatewayFunction::set_has_dbm() {
  _has_bits_[0] |= 0x00000020u;
}
 void MseGatewayFunction::clear_has_dbm() {
  _has_bits_[0] &= ~0x00000020u;
}
 void MseGatewayFunction::clear_dbm() {
  dbm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dbm();
}
 const ::std::string& MseGatewayFunction::dbm() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.dbm)
  return dbm_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_dbm(const ::std::string& value) {
  set_has_dbm();
  dbm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseGatewayFunction.dbm)
}
 void MseGatewayFunction::set_dbm(const char* value) {
  set_has_dbm();
  dbm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseGatewayFunction.dbm)
}
 void MseGatewayFunction::set_dbm(const char* value, size_t size) {
  set_has_dbm();
  dbm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseGatewayFunction.dbm)
}
 ::std::string* MseGatewayFunction::mutable_dbm() {
  set_has_dbm();
  // @@protoc_insertion_point(field_mutable:MseGatewayFunction.dbm)
  return dbm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MseGatewayFunction::release_dbm() {
  clear_has_dbm();
  return dbm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseGatewayFunction::set_allocated_dbm(::std::string* dbm) {
  if (dbm != NULL) {
    set_has_dbm();
  } else {
    clear_has_dbm();
  }
  dbm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dbm);
  // @@protoc_insertion_point(field_set_allocated:MseGatewayFunction.dbm)
}

// optional int32 TotalPage = 7 [default = 1];
 bool MseGatewayFunction::has_totalpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void MseGatewayFunction::set_has_totalpage() {
  _has_bits_[0] |= 0x00000040u;
}
 void MseGatewayFunction::clear_has_totalpage() {
  _has_bits_[0] &= ~0x00000040u;
}
 void MseGatewayFunction::clear_totalpage() {
  totalpage_ = 1;
  clear_has_totalpage();
}
 ::google::protobuf::int32 MseGatewayFunction::totalpage() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.TotalPage)
  return totalpage_;
}
 void MseGatewayFunction::set_totalpage(::google::protobuf::int32 value) {
  set_has_totalpage();
  totalpage_ = value;
  // @@protoc_insertion_point(field_set:MseGatewayFunction.TotalPage)
}

// optional int32 CurrPage = 8 [default = 1];
 bool MseGatewayFunction::has_currpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void MseGatewayFunction::set_has_currpage() {
  _has_bits_[0] |= 0x00000080u;
}
 void MseGatewayFunction::clear_has_currpage() {
  _has_bits_[0] &= ~0x00000080u;
}
 void MseGatewayFunction::clear_currpage() {
  currpage_ = 1;
  clear_has_currpage();
}
 ::google::protobuf::int32 MseGatewayFunction::currpage() const {
  // @@protoc_insertion_point(field_get:MseGatewayFunction.CurrPage)
  return currpage_;
}
 void MseGatewayFunction::set_currpage(::google::protobuf::int32 value) {
  set_has_currpage();
  currpage_ = value;
  // @@protoc_insertion_point(field_set:MseGatewayFunction.CurrPage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
