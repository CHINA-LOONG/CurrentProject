// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MceGatewayFunction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MceGatewayFunction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MceGatewayFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MceGatewayFunction_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MceGatewayFunction_2eproto() {
  protobuf_AddDesc_MceGatewayFunction_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MceGatewayFunction.proto");
  GOOGLE_CHECK(file != NULL);
  MceGatewayFunction_descriptor_ = file->message_type(0);
  static const int MceGatewayFunction_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MceGatewayFunction, action_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MceGatewayFunction, servername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MceGatewayFunction, actionname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MceGatewayFunction, jsonattr_),
  };
  MceGatewayFunction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MceGatewayFunction_descriptor_,
      MceGatewayFunction::default_instance_,
      MceGatewayFunction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MceGatewayFunction, _has_bits_[0]),
      -1,
      -1,
      sizeof(MceGatewayFunction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MceGatewayFunction, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MceGatewayFunction_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MceGatewayFunction_descriptor_, &MceGatewayFunction::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MceGatewayFunction_2eproto() {
  delete MceGatewayFunction::default_instance_;
  delete MceGatewayFunction_reflection_;
}

void protobuf_AddDesc_MceGatewayFunction_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030MceGatewayFunction.proto\"b\n\022MceGateway"
    "Function\022\022\n\naction_idx\030\001 \001(\005\022\022\n\nServerNa"
    "me\030\002 \001(\t\022\022\n\nActionName\030\003 \001(\t\022\020\n\010JsonAttr"
    "\030\004 \001(\t", 126);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MceGatewayFunction.proto", &protobuf_RegisterTypes);
  MceGatewayFunction::default_instance_ = new MceGatewayFunction();
  MceGatewayFunction::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MceGatewayFunction_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MceGatewayFunction_2eproto {
  StaticDescriptorInitializer_MceGatewayFunction_2eproto() {
    protobuf_AddDesc_MceGatewayFunction_2eproto();
  }
} static_descriptor_initializer_MceGatewayFunction_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MceGatewayFunction::kActionIdxFieldNumber;
const int MceGatewayFunction::kServerNameFieldNumber;
const int MceGatewayFunction::kActionNameFieldNumber;
const int MceGatewayFunction::kJsonAttrFieldNumber;
#endif  // !_MSC_VER

MceGatewayFunction::MceGatewayFunction()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MceGatewayFunction)
}

void MceGatewayFunction::InitAsDefaultInstance() {
}

MceGatewayFunction::MceGatewayFunction(const MceGatewayFunction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MceGatewayFunction)
}

void MceGatewayFunction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  action_idx_ = 0;
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jsonattr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MceGatewayFunction::~MceGatewayFunction() {
  // @@protoc_insertion_point(destructor:MceGatewayFunction)
  SharedDtor();
}

void MceGatewayFunction::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jsonattr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MceGatewayFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MceGatewayFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MceGatewayFunction_descriptor_;
}

const MceGatewayFunction& MceGatewayFunction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MceGatewayFunction_2eproto();
  return *default_instance_;
}

MceGatewayFunction* MceGatewayFunction::default_instance_ = NULL;

MceGatewayFunction* MceGatewayFunction::New(::google::protobuf::Arena* arena) const {
  MceGatewayFunction* n = new MceGatewayFunction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MceGatewayFunction::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    action_idx_ = 0;
    if (has_servername()) {
      servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_actionname()) {
      actionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_jsonattr()) {
      jsonattr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MceGatewayFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MceGatewayFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 action_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_idx_)));
          set_has_action_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerName;
        break;
      }

      // optional string ServerName = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MceGatewayFunction.ServerName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ActionName;
        break;
      }

      // optional string ActionName = 3;
      case 3: {
        if (tag == 26) {
         parse_ActionName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actionname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actionname().data(), this->actionname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MceGatewayFunction.ActionName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_JsonAttr;
        break;
      }

      // optional string JsonAttr = 4;
      case 4: {
        if (tag == 34) {
         parse_JsonAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonattr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jsonattr().data(), this->jsonattr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MceGatewayFunction.JsonAttr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MceGatewayFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MceGatewayFunction)
  return false;
#undef DO_
}

void MceGatewayFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MceGatewayFunction)
  // optional int32 action_idx = 1;
  if (has_action_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action_idx(), output);
  }

  // optional string ServerName = 2;
  if (has_servername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MceGatewayFunction.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // optional string ActionName = 3;
  if (has_actionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actionname().data(), this->actionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MceGatewayFunction.ActionName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->actionname(), output);
  }

  // optional string JsonAttr = 4;
  if (has_jsonattr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jsonattr().data(), this->jsonattr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MceGatewayFunction.JsonAttr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->jsonattr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MceGatewayFunction)
}

::google::protobuf::uint8* MceGatewayFunction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MceGatewayFunction)
  // optional int32 action_idx = 1;
  if (has_action_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action_idx(), target);
  }

  // optional string ServerName = 2;
  if (has_servername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MceGatewayFunction.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // optional string ActionName = 3;
  if (has_actionname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actionname().data(), this->actionname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MceGatewayFunction.ActionName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->actionname(), target);
  }

  // optional string JsonAttr = 4;
  if (has_jsonattr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jsonattr().data(), this->jsonattr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MceGatewayFunction.JsonAttr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->jsonattr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MceGatewayFunction)
  return target;
}

int MceGatewayFunction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional int32 action_idx = 1;
    if (has_action_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_idx());
    }

    // optional string ServerName = 2;
    if (has_servername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->servername());
    }

    // optional string ActionName = 3;
    if (has_actionname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actionname());
    }

    // optional string JsonAttr = 4;
    if (has_jsonattr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jsonattr());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MceGatewayFunction::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MceGatewayFunction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MceGatewayFunction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MceGatewayFunction::MergeFrom(const MceGatewayFunction& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_action_idx()) {
      set_action_idx(from.action_idx());
    }
    if (from.has_servername()) {
      set_has_servername();
      servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
    }
    if (from.has_actionname()) {
      set_has_actionname();
      actionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionname_);
    }
    if (from.has_jsonattr()) {
      set_has_jsonattr();
      jsonattr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonattr_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MceGatewayFunction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MceGatewayFunction::CopyFrom(const MceGatewayFunction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MceGatewayFunction::IsInitialized() const {

  return true;
}

void MceGatewayFunction::Swap(MceGatewayFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MceGatewayFunction::InternalSwap(MceGatewayFunction* other) {
  std::swap(action_idx_, other->action_idx_);
  servername_.Swap(&other->servername_);
  actionname_.Swap(&other->actionname_);
  jsonattr_.Swap(&other->jsonattr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MceGatewayFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MceGatewayFunction_descriptor_;
  metadata.reflection = MceGatewayFunction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MceGatewayFunction

// optional int32 action_idx = 1;
 bool MceGatewayFunction::has_action_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MceGatewayFunction::set_has_action_idx() {
  _has_bits_[0] |= 0x00000001u;
}
 void MceGatewayFunction::clear_has_action_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MceGatewayFunction::clear_action_idx() {
  action_idx_ = 0;
  clear_has_action_idx();
}
 ::google::protobuf::int32 MceGatewayFunction::action_idx() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.action_idx)
  return action_idx_;
}
 void MceGatewayFunction::set_action_idx(::google::protobuf::int32 value) {
  set_has_action_idx();
  action_idx_ = value;
  // @@protoc_insertion_point(field_set:MceGatewayFunction.action_idx)
}

// optional string ServerName = 2;
 bool MceGatewayFunction::has_servername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MceGatewayFunction::set_has_servername() {
  _has_bits_[0] |= 0x00000002u;
}
 void MceGatewayFunction::clear_has_servername() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MceGatewayFunction::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servername();
}
 const ::std::string& MceGatewayFunction::servername() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.ServerName)
  return servername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MceGatewayFunction::set_servername(const ::std::string& value) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MceGatewayFunction.ServerName)
}
 void MceGatewayFunction::set_servername(const char* value) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MceGatewayFunction.ServerName)
}
 void MceGatewayFunction::set_servername(const char* value, size_t size) {
  set_has_servername();
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MceGatewayFunction.ServerName)
}
 ::std::string* MceGatewayFunction::mutable_servername() {
  set_has_servername();
  // @@protoc_insertion_point(field_mutable:MceGatewayFunction.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MceGatewayFunction::release_servername() {
  clear_has_servername();
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MceGatewayFunction::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    set_has_servername();
  } else {
    clear_has_servername();
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:MceGatewayFunction.ServerName)
}

// optional string ActionName = 3;
 bool MceGatewayFunction::has_actionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MceGatewayFunction::set_has_actionname() {
  _has_bits_[0] |= 0x00000004u;
}
 void MceGatewayFunction::clear_has_actionname() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MceGatewayFunction::clear_actionname() {
  actionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actionname();
}
 const ::std::string& MceGatewayFunction::actionname() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.ActionName)
  return actionname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MceGatewayFunction::set_actionname(const ::std::string& value) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MceGatewayFunction.ActionName)
}
 void MceGatewayFunction::set_actionname(const char* value) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MceGatewayFunction.ActionName)
}
 void MceGatewayFunction::set_actionname(const char* value, size_t size) {
  set_has_actionname();
  actionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MceGatewayFunction.ActionName)
}
 ::std::string* MceGatewayFunction::mutable_actionname() {
  set_has_actionname();
  // @@protoc_insertion_point(field_mutable:MceGatewayFunction.ActionName)
  return actionname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MceGatewayFunction::release_actionname() {
  clear_has_actionname();
  return actionname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MceGatewayFunction::set_allocated_actionname(::std::string* actionname) {
  if (actionname != NULL) {
    set_has_actionname();
  } else {
    clear_has_actionname();
  }
  actionname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actionname);
  // @@protoc_insertion_point(field_set_allocated:MceGatewayFunction.ActionName)
}

// optional string JsonAttr = 4;
 bool MceGatewayFunction::has_jsonattr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MceGatewayFunction::set_has_jsonattr() {
  _has_bits_[0] |= 0x00000008u;
}
 void MceGatewayFunction::clear_has_jsonattr() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MceGatewayFunction::clear_jsonattr() {
  jsonattr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jsonattr();
}
 const ::std::string& MceGatewayFunction::jsonattr() const {
  // @@protoc_insertion_point(field_get:MceGatewayFunction.JsonAttr)
  return jsonattr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MceGatewayFunction::set_jsonattr(const ::std::string& value) {
  set_has_jsonattr();
  jsonattr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MceGatewayFunction.JsonAttr)
}
 void MceGatewayFunction::set_jsonattr(const char* value) {
  set_has_jsonattr();
  jsonattr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MceGatewayFunction.JsonAttr)
}
 void MceGatewayFunction::set_jsonattr(const char* value, size_t size) {
  set_has_jsonattr();
  jsonattr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MceGatewayFunction.JsonAttr)
}
 ::std::string* MceGatewayFunction::mutable_jsonattr() {
  set_has_jsonattr();
  // @@protoc_insertion_point(field_mutable:MceGatewayFunction.JsonAttr)
  return jsonattr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MceGatewayFunction::release_jsonattr() {
  clear_has_jsonattr();
  return jsonattr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MceGatewayFunction::set_allocated_jsonattr(::std::string* jsonattr) {
  if (jsonattr != NULL) {
    set_has_jsonattr();
  } else {
    clear_has_jsonattr();
  }
  jsonattr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsonattr);
  // @@protoc_insertion_point(field_set_allocated:MceGatewayFunction.JsonAttr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
