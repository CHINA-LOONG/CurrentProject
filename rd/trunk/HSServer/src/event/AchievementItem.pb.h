// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AchievementItem.proto

#ifndef PROTOBUF_AchievementItem_2eproto__INCLUDED
#define PROTOBUF_AchievementItem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_AchievementItem_2eproto();
void protobuf_AssignDesc_AchievementItem_2eproto();
void protobuf_ShutdownFile_AchievementItem_2eproto();

class AchievementItem;

// ===================================================================

class AchievementItem : public ::google::protobuf::Message {
 public:
  AchievementItem();
  virtual ~AchievementItem();

  AchievementItem(const AchievementItem& from);

  inline AchievementItem& operator=(const AchievementItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementItem& default_instance();

  void Swap(AchievementItem* other);

  // implements Message ----------------------------------------------

  inline AchievementItem* New() const { return New(NULL); }

  AchievementItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AchievementItem& from);
  void MergeFrom(const AchievementItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AchievementItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 now_value = 1 [default = 0];
  bool has_now_value() const;
  void clear_now_value();
  static const int kNowValueFieldNumber = 1;
  ::google::protobuf::int32 now_value() const;
  void set_now_value(::google::protobuf::int32 value);

  // optional int32 max_value = 2 [default = 0];
  bool has_max_value() const;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 2;
  ::google::protobuf::int32 max_value() const;
  void set_max_value(::google::protobuf::int32 value);

  // optional int32 state = 3 [default = 0];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional int32 type = 4 [default = 0];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 id = 5 [default = 0];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementItem)
 private:
  inline void set_has_now_value();
  inline void clear_has_now_value();
  inline void set_has_max_value();
  inline void clear_has_max_value();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 now_value_;
  ::google::protobuf::int32 max_value_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_AchievementItem_2eproto();
  friend void protobuf_AssignDesc_AchievementItem_2eproto();
  friend void protobuf_ShutdownFile_AchievementItem_2eproto();

  void InitAsDefaultInstance();
  static AchievementItem* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementItem

// optional int32 now_value = 1 [default = 0];
inline bool AchievementItem::has_now_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchievementItem::set_has_now_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchievementItem::clear_has_now_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchievementItem::clear_now_value() {
  now_value_ = 0;
  clear_has_now_value();
}
inline ::google::protobuf::int32 AchievementItem::now_value() const {
  // @@protoc_insertion_point(field_get:AchievementItem.now_value)
  return now_value_;
}
inline void AchievementItem::set_now_value(::google::protobuf::int32 value) {
  set_has_now_value();
  now_value_ = value;
  // @@protoc_insertion_point(field_set:AchievementItem.now_value)
}

// optional int32 max_value = 2 [default = 0];
inline bool AchievementItem::has_max_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AchievementItem::set_has_max_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AchievementItem::clear_has_max_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AchievementItem::clear_max_value() {
  max_value_ = 0;
  clear_has_max_value();
}
inline ::google::protobuf::int32 AchievementItem::max_value() const {
  // @@protoc_insertion_point(field_get:AchievementItem.max_value)
  return max_value_;
}
inline void AchievementItem::set_max_value(::google::protobuf::int32 value) {
  set_has_max_value();
  max_value_ = value;
  // @@protoc_insertion_point(field_set:AchievementItem.max_value)
}

// optional int32 state = 3 [default = 0];
inline bool AchievementItem::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AchievementItem::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AchievementItem::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AchievementItem::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AchievementItem::state() const {
  // @@protoc_insertion_point(field_get:AchievementItem.state)
  return state_;
}
inline void AchievementItem::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:AchievementItem.state)
}

// optional int32 type = 4 [default = 0];
inline bool AchievementItem::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AchievementItem::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AchievementItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AchievementItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AchievementItem::type() const {
  // @@protoc_insertion_point(field_get:AchievementItem.type)
  return type_;
}
inline void AchievementItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:AchievementItem.type)
}

// optional int32 id = 5 [default = 0];
inline bool AchievementItem::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AchievementItem::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AchievementItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AchievementItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AchievementItem::id() const {
  // @@protoc_insertion_point(field_get:AchievementItem.id)
  return id_;
}
inline void AchievementItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AchievementItem.id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AchievementItem_2eproto__INCLUDED
