// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MseFuncSwich.proto

#ifndef PROTOBUF_MseFuncSwich_2eproto__INCLUDED
#define PROTOBUF_MseFuncSwich_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MseFuncSwich_2eproto();
void protobuf_AssignDesc_MseFuncSwich_2eproto();
void protobuf_ShutdownFile_MseFuncSwich_2eproto();

class MseFuncSwich;

// ===================================================================

class MseFuncSwich : public ::google::protobuf::Message {
 public:
  MseFuncSwich();
  virtual ~MseFuncSwich();

  MseFuncSwich(const MseFuncSwich& from);

  inline MseFuncSwich& operator=(const MseFuncSwich& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MseFuncSwich& default_instance();

  void Swap(MseFuncSwich* other);

  // implements Message ----------------------------------------------

  inline MseFuncSwich* New() const { return New(NULL); }

  MseFuncSwich* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MseFuncSwich& from);
  void MergeFrom(const MseFuncSwich& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MseFuncSwich* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 time_now = 4;
  bool has_time_now() const;
  void clear_time_now();
  static const int kTimeNowFieldNumber = 4;
  ::google::protobuf::int32 time_now() const;
  void set_time_now(::google::protobuf::int32 value);

  // repeated int32 index = 1;
  int index_size() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index(int index) const;
  void set_index(int index, ::google::protobuf::int32 value);
  void add_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // repeated bool enable = 2;
  int enable_size() const;
  void clear_enable();
  static const int kEnableFieldNumber = 2;
  bool enable(int index) const;
  void set_enable(int index, bool value);
  void add_enable(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      enable() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_enable();

  // repeated int32 level = 3;
  int level_size() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level(int index) const;
  void set_level(int index, ::google::protobuf::int32 value);
  void add_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_level();

  // repeated int32 end_time = 5;
  int end_time_size() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::int32 end_time(int index) const;
  void set_end_time(int index, ::google::protobuf::int32 value);
  void add_end_time(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      end_time() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_end_time();

  // optional string str = 6 [default = ""];
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 6;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional string start_time = 7;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // repeated int32 is_show = 8;
  int is_show_size() const;
  void clear_is_show();
  static const int kIsShowFieldNumber = 8;
  ::google::protobuf::int32 is_show(int index) const;
  void set_is_show(int index, ::google::protobuf::int32 value);
  void add_is_show(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      is_show() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_is_show();

  // @@protoc_insertion_point(class_scope:MseFuncSwich)
 private:
  inline void set_has_time_now();
  inline void clear_has_time_now();
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;
  ::google::protobuf::RepeatedField< bool > enable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > end_time_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > is_show_;
  ::google::protobuf::int32 time_now_;
  friend void  protobuf_AddDesc_MseFuncSwich_2eproto();
  friend void protobuf_AssignDesc_MseFuncSwich_2eproto();
  friend void protobuf_ShutdownFile_MseFuncSwich_2eproto();

  void InitAsDefaultInstance();
  static MseFuncSwich* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MseFuncSwich

// optional int32 time_now = 4;
inline bool MseFuncSwich::has_time_now() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MseFuncSwich::set_has_time_now() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MseFuncSwich::clear_has_time_now() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MseFuncSwich::clear_time_now() {
  time_now_ = 0;
  clear_has_time_now();
}
inline ::google::protobuf::int32 MseFuncSwich::time_now() const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.time_now)
  return time_now_;
}
inline void MseFuncSwich::set_time_now(::google::protobuf::int32 value) {
  set_has_time_now();
  time_now_ = value;
  // @@protoc_insertion_point(field_set:MseFuncSwich.time_now)
}

// repeated int32 index = 1;
inline int MseFuncSwich::index_size() const {
  return index_.size();
}
inline void MseFuncSwich::clear_index() {
  index_.Clear();
}
inline ::google::protobuf::int32 MseFuncSwich::index(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.index)
  return index_.Get(index);
}
inline void MseFuncSwich::set_index(int index, ::google::protobuf::int32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.index)
}
inline void MseFuncSwich::add_index(::google::protobuf::int32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::index() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.index)
  return &index_;
}

// repeated bool enable = 2;
inline int MseFuncSwich::enable_size() const {
  return enable_.size();
}
inline void MseFuncSwich::clear_enable() {
  enable_.Clear();
}
inline bool MseFuncSwich::enable(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.enable)
  return enable_.Get(index);
}
inline void MseFuncSwich::set_enable(int index, bool value) {
  enable_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.enable)
}
inline void MseFuncSwich::add_enable(bool value) {
  enable_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.enable)
}
inline const ::google::protobuf::RepeatedField< bool >&
MseFuncSwich::enable() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.enable)
  return enable_;
}
inline ::google::protobuf::RepeatedField< bool >*
MseFuncSwich::mutable_enable() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.enable)
  return &enable_;
}

// repeated int32 level = 3;
inline int MseFuncSwich::level_size() const {
  return level_.size();
}
inline void MseFuncSwich::clear_level() {
  level_.Clear();
}
inline ::google::protobuf::int32 MseFuncSwich::level(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.level)
  return level_.Get(index);
}
inline void MseFuncSwich::set_level(int index, ::google::protobuf::int32 value) {
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.level)
}
inline void MseFuncSwich::add_level(::google::protobuf::int32 value) {
  level_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::level() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.level)
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.level)
  return &level_;
}

// repeated int32 end_time = 5;
inline int MseFuncSwich::end_time_size() const {
  return end_time_.size();
}
inline void MseFuncSwich::clear_end_time() {
  end_time_.Clear();
}
inline ::google::protobuf::int32 MseFuncSwich::end_time(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.end_time)
  return end_time_.Get(index);
}
inline void MseFuncSwich::set_end_time(int index, ::google::protobuf::int32 value) {
  end_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.end_time)
}
inline void MseFuncSwich::add_end_time(::google::protobuf::int32 value) {
  end_time_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.end_time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::end_time() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.end_time)
  return end_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_end_time() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.end_time)
  return &end_time_;
}

// optional string str = 6 [default = ""];
inline bool MseFuncSwich::has_str() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MseFuncSwich::set_has_str() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MseFuncSwich::clear_has_str() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MseFuncSwich::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& MseFuncSwich::str() const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFuncSwich::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.str)
}
inline void MseFuncSwich::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseFuncSwich.str)
}
inline void MseFuncSwich::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseFuncSwich.str)
}
inline ::std::string* MseFuncSwich::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:MseFuncSwich.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MseFuncSwich::release_str() {
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFuncSwich::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:MseFuncSwich.str)
}

// optional string start_time = 7;
inline bool MseFuncSwich::has_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MseFuncSwich::set_has_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MseFuncSwich::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MseFuncSwich::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_time();
}
inline const ::std::string& MseFuncSwich::start_time() const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.start_time)
  return start_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFuncSwich::set_start_time(const ::std::string& value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.start_time)
}
inline void MseFuncSwich::set_start_time(const char* value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseFuncSwich.start_time)
}
inline void MseFuncSwich::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseFuncSwich.start_time)
}
inline ::std::string* MseFuncSwich::mutable_start_time() {
  set_has_start_time();
  // @@protoc_insertion_point(field_mutable:MseFuncSwich.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MseFuncSwich::release_start_time() {
  clear_has_start_time();
  return start_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MseFuncSwich::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    set_has_start_time();
  } else {
    clear_has_start_time();
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:MseFuncSwich.start_time)
}

// repeated int32 is_show = 8;
inline int MseFuncSwich::is_show_size() const {
  return is_show_.size();
}
inline void MseFuncSwich::clear_is_show() {
  is_show_.Clear();
}
inline ::google::protobuf::int32 MseFuncSwich::is_show(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.is_show)
  return is_show_.Get(index);
}
inline void MseFuncSwich::set_is_show(int index, ::google::protobuf::int32 value) {
  is_show_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.is_show)
}
inline void MseFuncSwich::add_is_show(::google::protobuf::int32 value) {
  is_show_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.is_show)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::is_show() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.is_show)
  return is_show_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_is_show() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.is_show)
  return &is_show_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MseFuncSwich_2eproto__INCLUDED
