// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BroadcastMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BroadcastMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BroadcastMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BroadcastMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BroadcastMessage_MessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BroadcastMessage_BroadcastType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_BroadcastMessage_2eproto() {
  protobuf_AddDesc_BroadcastMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BroadcastMessage.proto");
  GOOGLE_CHECK(file != NULL);
  BroadcastMessage_descriptor_ = file->message_type(0);
  static const int BroadcastMessage_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, broadcasttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, listener_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, listener_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, read_flag_),
  };
  BroadcastMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BroadcastMessage_descriptor_,
      BroadcastMessage::default_instance_,
      BroadcastMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(BroadcastMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadcastMessage, _internal_metadata_),
      -1);
  BroadcastMessage_MessageType_descriptor_ = BroadcastMessage_descriptor_->enum_type(0);
  BroadcastMessage_BroadcastType_descriptor_ = BroadcastMessage_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BroadcastMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BroadcastMessage_descriptor_, &BroadcastMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BroadcastMessage_2eproto() {
  delete BroadcastMessage::default_instance_;
  delete BroadcastMessage_reflection_;
}

void protobuf_AddDesc_BroadcastMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026BroadcastMessage.proto\"\205\003\n\020BroadcastMe"
    "ssage\022\013\n\003uid\030\001 \002(\t\022\016\n\004name\030\005 \001(\t:\000\022A\n\013me"
    "ssagetype\030\002 \001(\0162\035.BroadcastMessage.Messa"
    "geType:\rNORMAL_STRING\022;\n\rbroadcasttype\030\003"
    " \001(\0162\037.BroadcastMessage.BroadcastType:\003A"
    "LL\022\014\n\004args\030\004 \003(\005\022\021\n\007message\030\007 \001(\t:\000\022\022\n\010l"
    "istener\030\010 \001(\t:\000\022\027\n\rlistener_name\030\006 \001(\t:\000"
    "\022\016\n\004time\030\t \001(\t:\000\022\030\n\tread_flag\030\n \001(\010:\005fal"
    "se\"2\n\013MessageType\022\021\n\rNORMAL_STRING\020\000\022\020\n\014"
    "SYSTEM_ADMIN\020\001\"(\n\rBroadcastType\022\016\n\nSINGA"
    "L_ONE\020\001\022\007\n\003ALL\020\002", 416);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BroadcastMessage.proto", &protobuf_RegisterTypes);
  BroadcastMessage::default_instance_ = new BroadcastMessage();
  BroadcastMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BroadcastMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BroadcastMessage_2eproto {
  StaticDescriptorInitializer_BroadcastMessage_2eproto() {
    protobuf_AddDesc_BroadcastMessage_2eproto();
  }
} static_descriptor_initializer_BroadcastMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* BroadcastMessage_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BroadcastMessage_MessageType_descriptor_;
}
bool BroadcastMessage_MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BroadcastMessage_MessageType BroadcastMessage::NORMAL_STRING;
const BroadcastMessage_MessageType BroadcastMessage::SYSTEM_ADMIN;
const BroadcastMessage_MessageType BroadcastMessage::MessageType_MIN;
const BroadcastMessage_MessageType BroadcastMessage::MessageType_MAX;
const int BroadcastMessage::MessageType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* BroadcastMessage_BroadcastType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BroadcastMessage_BroadcastType_descriptor_;
}
bool BroadcastMessage_BroadcastType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BroadcastMessage_BroadcastType BroadcastMessage::SINGAL_ONE;
const BroadcastMessage_BroadcastType BroadcastMessage::ALL;
const BroadcastMessage_BroadcastType BroadcastMessage::BroadcastType_MIN;
const BroadcastMessage_BroadcastType BroadcastMessage::BroadcastType_MAX;
const int BroadcastMessage::BroadcastType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int BroadcastMessage::kUidFieldNumber;
const int BroadcastMessage::kNameFieldNumber;
const int BroadcastMessage::kMessagetypeFieldNumber;
const int BroadcastMessage::kBroadcasttypeFieldNumber;
const int BroadcastMessage::kArgsFieldNumber;
const int BroadcastMessage::kMessageFieldNumber;
const int BroadcastMessage::kListenerFieldNumber;
const int BroadcastMessage::kListenerNameFieldNumber;
const int BroadcastMessage::kTimeFieldNumber;
const int BroadcastMessage::kReadFlagFieldNumber;
#endif  // !_MSC_VER

BroadcastMessage::BroadcastMessage()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BroadcastMessage)
}

void BroadcastMessage::InitAsDefaultInstance() {
}

BroadcastMessage::BroadcastMessage(const BroadcastMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BroadcastMessage)
}

void BroadcastMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetype_ = 0;
  broadcasttype_ = 2;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listener_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listener_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  read_flag_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BroadcastMessage::~BroadcastMessage() {
  // @@protoc_insertion_point(destructor:BroadcastMessage)
  SharedDtor();
}

void BroadcastMessage::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listener_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listener_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BroadcastMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadcastMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BroadcastMessage_descriptor_;
}

const BroadcastMessage& BroadcastMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BroadcastMessage_2eproto();
  return *default_instance_;
}

BroadcastMessage* BroadcastMessage::default_instance_ = NULL;

BroadcastMessage* BroadcastMessage::New(::google::protobuf::Arena* arena) const {
  BroadcastMessage* n = new BroadcastMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadcastMessage::Clear() {
  if (_has_bits_[0 / 32] & 239) {
    if (has_uid()) {
      uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    messagetype_ = 0;
    broadcasttype_ = 2;
    if (has_message()) {
      message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_listener()) {
      listener_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_listener_name()) {
      listener_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_time()) {
      time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    read_flag_ = false;
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BroadcastMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BroadcastMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BroadcastMessage.uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_messagetype;
        break;
      }

      // optional .BroadcastMessage.MessageType messagetype = 2 [default = NORMAL_STRING];
      case 2: {
        if (tag == 16) {
         parse_messagetype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BroadcastMessage_MessageType_IsValid(value)) {
            set_messagetype(static_cast< ::BroadcastMessage_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_broadcasttype;
        break;
      }

      // optional .BroadcastMessage.BroadcastType broadcasttype = 3 [default = ALL];
      case 3: {
        if (tag == 24) {
         parse_broadcasttype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BroadcastMessage_BroadcastType_IsValid(value)) {
            set_broadcasttype(static_cast< ::BroadcastMessage_BroadcastType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_args;
        break;
      }

      // repeated int32 args = 4;
      case 4: {
        if (tag == 32) {
         parse_args:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_args())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_args())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_args;
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5 [default = ""];
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BroadcastMessage.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_listener_name;
        break;
      }

      // optional string listener_name = 6 [default = ""];
      case 6: {
        if (tag == 50) {
         parse_listener_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listener_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listener_name().data(), this->listener_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BroadcastMessage.listener_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_message;
        break;
      }

      // optional string message = 7 [default = ""];
      case 7: {
        if (tag == 58) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BroadcastMessage.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_listener;
        break;
      }

      // optional string listener = 8 [default = ""];
      case 8: {
        if (tag == 66) {
         parse_listener:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listener()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listener().data(), this->listener().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BroadcastMessage.listener");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_time;
        break;
      }

      // optional string time = 9 [default = ""];
      case 9: {
        if (tag == 74) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BroadcastMessage.time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_read_flag;
        break;
      }

      // optional bool read_flag = 10 [default = false];
      case 10: {
        if (tag == 80) {
         parse_read_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_flag_)));
          set_has_read_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BroadcastMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BroadcastMessage)
  return false;
#undef DO_
}

void BroadcastMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BroadcastMessage)
  // required string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional .BroadcastMessage.MessageType messagetype = 2 [default = NORMAL_STRING];
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->messagetype(), output);
  }

  // optional .BroadcastMessage.BroadcastType broadcasttype = 3 [default = ALL];
  if (has_broadcasttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->broadcasttype(), output);
  }

  // repeated int32 args = 4;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->args(i), output);
  }

  // optional string name = 5 [default = ""];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional string listener_name = 6 [default = ""];
  if (has_listener_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listener_name().data(), this->listener_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.listener_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->listener_name(), output);
  }

  // optional string message = 7 [default = ""];
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->message(), output);
  }

  // optional string listener = 8 [default = ""];
  if (has_listener()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listener().data(), this->listener().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.listener");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->listener(), output);
  }

  // optional string time = 9 [default = ""];
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->time(), output);
  }

  // optional bool read_flag = 10 [default = false];
  if (has_read_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->read_flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BroadcastMessage)
}

::google::protobuf::uint8* BroadcastMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BroadcastMessage)
  // required string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional .BroadcastMessage.MessageType messagetype = 2 [default = NORMAL_STRING];
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->messagetype(), target);
  }

  // optional .BroadcastMessage.BroadcastType broadcasttype = 3 [default = ALL];
  if (has_broadcasttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->broadcasttype(), target);
  }

  // repeated int32 args = 4;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->args(i), target);
  }

  // optional string name = 5 [default = ""];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional string listener_name = 6 [default = ""];
  if (has_listener_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listener_name().data(), this->listener_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.listener_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->listener_name(), target);
  }

  // optional string message = 7 [default = ""];
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->message(), target);
  }

  // optional string listener = 8 [default = ""];
  if (has_listener()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listener().data(), this->listener().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.listener");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->listener(), target);
  }

  // optional string time = 9 [default = ""];
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BroadcastMessage.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->time(), target);
  }

  // optional bool read_flag = 10 [default = false];
  if (has_read_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->read_flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BroadcastMessage)
  return target;
}

int BroadcastMessage::ByteSize() const {
  int total_size = 0;

  // required string uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }
  if (_has_bits_[1 / 32] & 238) {
    // optional string name = 5 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .BroadcastMessage.MessageType messagetype = 2 [default = NORMAL_STRING];
    if (has_messagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
    }

    // optional .BroadcastMessage.BroadcastType broadcasttype = 3 [default = ALL];
    if (has_broadcasttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->broadcasttype());
    }

    // optional string message = 7 [default = ""];
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional string listener = 8 [default = ""];
    if (has_listener()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->listener());
    }

    // optional string listener_name = 6 [default = ""];
    if (has_listener_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->listener_name());
    }

  }
  if (_has_bits_[8 / 32] & 768) {
    // optional string time = 9 [default = ""];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional bool read_flag = 10 [default = false];
    if (has_read_flag()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 args = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->args_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->args(i));
    }
    total_size += 1 * this->args_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadcastMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BroadcastMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BroadcastMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BroadcastMessage::MergeFrom(const BroadcastMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_broadcasttype()) {
      set_broadcasttype(from.broadcasttype());
    }
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (from.has_listener()) {
      set_has_listener();
      listener_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listener_);
    }
    if (from.has_listener_name()) {
      set_has_listener_name();
      listener_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listener_name_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_time()) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (from.has_read_flag()) {
      set_read_flag(from.read_flag());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BroadcastMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastMessage::CopyFrom(const BroadcastMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BroadcastMessage::Swap(BroadcastMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastMessage::InternalSwap(BroadcastMessage* other) {
  uid_.Swap(&other->uid_);
  name_.Swap(&other->name_);
  std::swap(messagetype_, other->messagetype_);
  std::swap(broadcasttype_, other->broadcasttype_);
  args_.UnsafeArenaSwap(&other->args_);
  message_.Swap(&other->message_);
  listener_.Swap(&other->listener_);
  listener_name_.Swap(&other->listener_name_);
  time_.Swap(&other->time_);
  std::swap(read_flag_, other->read_flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadcastMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BroadcastMessage_descriptor_;
  metadata.reflection = BroadcastMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BroadcastMessage

// required string uid = 1;
 bool BroadcastMessage::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void BroadcastMessage::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
 void BroadcastMessage::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
 void BroadcastMessage::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
 const ::std::string& BroadcastMessage::uid() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.uid)
}
 void BroadcastMessage::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadcastMessage.uid)
}
 void BroadcastMessage::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadcastMessage.uid)
}
 ::std::string* BroadcastMessage::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:BroadcastMessage.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadcastMessage::release_uid() {
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:BroadcastMessage.uid)
}

// optional string name = 5 [default = ""];
 bool BroadcastMessage::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void BroadcastMessage::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void BroadcastMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void BroadcastMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& BroadcastMessage::name() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.name)
}
 void BroadcastMessage::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadcastMessage.name)
}
 void BroadcastMessage::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadcastMessage.name)
}
 ::std::string* BroadcastMessage::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:BroadcastMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadcastMessage::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:BroadcastMessage.name)
}

// optional .BroadcastMessage.MessageType messagetype = 2 [default = NORMAL_STRING];
 bool BroadcastMessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void BroadcastMessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000004u;
}
 void BroadcastMessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000004u;
}
 void BroadcastMessage::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
 ::BroadcastMessage_MessageType BroadcastMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.messagetype)
  return static_cast< ::BroadcastMessage_MessageType >(messagetype_);
}
 void BroadcastMessage::set_messagetype(::BroadcastMessage_MessageType value) {
  assert(::BroadcastMessage_MessageType_IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:BroadcastMessage.messagetype)
}

// optional .BroadcastMessage.BroadcastType broadcasttype = 3 [default = ALL];
 bool BroadcastMessage::has_broadcasttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void BroadcastMessage::set_has_broadcasttype() {
  _has_bits_[0] |= 0x00000008u;
}
 void BroadcastMessage::clear_has_broadcasttype() {
  _has_bits_[0] &= ~0x00000008u;
}
 void BroadcastMessage::clear_broadcasttype() {
  broadcasttype_ = 2;
  clear_has_broadcasttype();
}
 ::BroadcastMessage_BroadcastType BroadcastMessage::broadcasttype() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.broadcasttype)
  return static_cast< ::BroadcastMessage_BroadcastType >(broadcasttype_);
}
 void BroadcastMessage::set_broadcasttype(::BroadcastMessage_BroadcastType value) {
  assert(::BroadcastMessage_BroadcastType_IsValid(value));
  set_has_broadcasttype();
  broadcasttype_ = value;
  // @@protoc_insertion_point(field_set:BroadcastMessage.broadcasttype)
}

// repeated int32 args = 4;
 int BroadcastMessage::args_size() const {
  return args_.size();
}
 void BroadcastMessage::clear_args() {
  args_.Clear();
}
 ::google::protobuf::int32 BroadcastMessage::args(int index) const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.args)
  return args_.Get(index);
}
 void BroadcastMessage::set_args(int index, ::google::protobuf::int32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.args)
}
 void BroadcastMessage::add_args(::google::protobuf::int32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:BroadcastMessage.args)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BroadcastMessage::args() const {
  // @@protoc_insertion_point(field_list:BroadcastMessage.args)
  return args_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BroadcastMessage::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:BroadcastMessage.args)
  return &args_;
}

// optional string message = 7 [default = ""];
 bool BroadcastMessage::has_message() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void BroadcastMessage::set_has_message() {
  _has_bits_[0] |= 0x00000020u;
}
 void BroadcastMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000020u;
}
 void BroadcastMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
 const ::std::string& BroadcastMessage::message() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.message)
}
 void BroadcastMessage::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadcastMessage.message)
}
 void BroadcastMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadcastMessage.message)
}
 ::std::string* BroadcastMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:BroadcastMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadcastMessage::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:BroadcastMessage.message)
}

// optional string listener = 8 [default = ""];
 bool BroadcastMessage::has_listener() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void BroadcastMessage::set_has_listener() {
  _has_bits_[0] |= 0x00000040u;
}
 void BroadcastMessage::clear_has_listener() {
  _has_bits_[0] &= ~0x00000040u;
}
 void BroadcastMessage::clear_listener() {
  listener_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_listener();
}
 const ::std::string& BroadcastMessage::listener() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.listener)
  return listener_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_listener(const ::std::string& value) {
  set_has_listener();
  listener_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.listener)
}
 void BroadcastMessage::set_listener(const char* value) {
  set_has_listener();
  listener_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadcastMessage.listener)
}
 void BroadcastMessage::set_listener(const char* value, size_t size) {
  set_has_listener();
  listener_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadcastMessage.listener)
}
 ::std::string* BroadcastMessage::mutable_listener() {
  set_has_listener();
  // @@protoc_insertion_point(field_mutable:BroadcastMessage.listener)
  return listener_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadcastMessage::release_listener() {
  clear_has_listener();
  return listener_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_allocated_listener(::std::string* listener) {
  if (listener != NULL) {
    set_has_listener();
  } else {
    clear_has_listener();
  }
  listener_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listener);
  // @@protoc_insertion_point(field_set_allocated:BroadcastMessage.listener)
}

// optional string listener_name = 6 [default = ""];
 bool BroadcastMessage::has_listener_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void BroadcastMessage::set_has_listener_name() {
  _has_bits_[0] |= 0x00000080u;
}
 void BroadcastMessage::clear_has_listener_name() {
  _has_bits_[0] &= ~0x00000080u;
}
 void BroadcastMessage::clear_listener_name() {
  listener_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_listener_name();
}
 const ::std::string& BroadcastMessage::listener_name() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.listener_name)
  return listener_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_listener_name(const ::std::string& value) {
  set_has_listener_name();
  listener_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.listener_name)
}
 void BroadcastMessage::set_listener_name(const char* value) {
  set_has_listener_name();
  listener_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadcastMessage.listener_name)
}
 void BroadcastMessage::set_listener_name(const char* value, size_t size) {
  set_has_listener_name();
  listener_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadcastMessage.listener_name)
}
 ::std::string* BroadcastMessage::mutable_listener_name() {
  set_has_listener_name();
  // @@protoc_insertion_point(field_mutable:BroadcastMessage.listener_name)
  return listener_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadcastMessage::release_listener_name() {
  clear_has_listener_name();
  return listener_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_allocated_listener_name(::std::string* listener_name) {
  if (listener_name != NULL) {
    set_has_listener_name();
  } else {
    clear_has_listener_name();
  }
  listener_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listener_name);
  // @@protoc_insertion_point(field_set_allocated:BroadcastMessage.listener_name)
}

// optional string time = 9 [default = ""];
 bool BroadcastMessage::has_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void BroadcastMessage::set_has_time() {
  _has_bits_[0] |= 0x00000100u;
}
 void BroadcastMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00000100u;
}
 void BroadcastMessage::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
 const ::std::string& BroadcastMessage::time() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadcastMessage.time)
}
 void BroadcastMessage::set_time(const char* value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadcastMessage.time)
}
 void BroadcastMessage::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadcastMessage.time)
}
 ::std::string* BroadcastMessage::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:BroadcastMessage.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadcastMessage::release_time() {
  clear_has_time();
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadcastMessage::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:BroadcastMessage.time)
}

// optional bool read_flag = 10 [default = false];
 bool BroadcastMessage::has_read_flag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void BroadcastMessage::set_has_read_flag() {
  _has_bits_[0] |= 0x00000200u;
}
 void BroadcastMessage::clear_has_read_flag() {
  _has_bits_[0] &= ~0x00000200u;
}
 void BroadcastMessage::clear_read_flag() {
  read_flag_ = false;
  clear_has_read_flag();
}
 bool BroadcastMessage::read_flag() const {
  // @@protoc_insertion_point(field_get:BroadcastMessage.read_flag)
  return read_flag_;
}
 void BroadcastMessage::set_read_flag(bool value) {
  set_has_read_flag();
  read_flag_ = value;
  // @@protoc_insertion_point(field_set:BroadcastMessage.read_flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
