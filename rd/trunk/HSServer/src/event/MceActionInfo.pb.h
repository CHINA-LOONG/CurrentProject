// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MceActionInfo.proto

#ifndef PROTOBUF_MceActionInfo_2eproto__INCLUDED
#define PROTOBUF_MceActionInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MceActionInfo_2eproto();
void protobuf_AssignDesc_MceActionInfo_2eproto();
void protobuf_ShutdownFile_MceActionInfo_2eproto();

class MceActionInfo;

// ===================================================================

class MceActionInfo : public ::google::protobuf::Message {
 public:
  MceActionInfo();
  virtual ~MceActionInfo();

  MceActionInfo(const MceActionInfo& from);

  inline MceActionInfo& operator=(const MceActionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MceActionInfo& default_instance();

  void Swap(MceActionInfo* other);

  // implements Message ----------------------------------------------

  inline MceActionInfo* New() const { return New(NULL); }

  MceActionInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MceActionInfo& from);
  void MergeFrom(const MceActionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MceActionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 action_idx = 1;
  bool has_action_idx() const;
  void clear_action_idx();
  static const int kActionIdxFieldNumber = 1;
  ::google::protobuf::int32 action_idx() const;
  void set_action_idx(::google::protobuf::int32 value);

  // optional int32 episode_idx = 2;
  bool has_episode_idx() const;
  void clear_episode_idx();
  static const int kEpisodeIdxFieldNumber = 2;
  ::google::protobuf::int32 episode_idx() const;
  void set_episode_idx(::google::protobuf::int32 value);

  // optional int32 rank_start = 3;
  bool has_rank_start() const;
  void clear_rank_start();
  static const int kRankStartFieldNumber = 3;
  ::google::protobuf::int32 rank_start() const;
  void set_rank_start(::google::protobuf::int32 value);

  // optional int32 rank_end = 4;
  bool has_rank_end() const;
  void clear_rank_end();
  static const int kRankEndFieldNumber = 4;
  ::google::protobuf::int32 rank_end() const;
  void set_rank_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MceActionInfo)
 private:
  inline void set_has_action_idx();
  inline void clear_has_action_idx();
  inline void set_has_episode_idx();
  inline void clear_has_episode_idx();
  inline void set_has_rank_start();
  inline void clear_has_rank_start();
  inline void set_has_rank_end();
  inline void clear_has_rank_end();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 action_idx_;
  ::google::protobuf::int32 episode_idx_;
  ::google::protobuf::int32 rank_start_;
  ::google::protobuf::int32 rank_end_;
  friend void  protobuf_AddDesc_MceActionInfo_2eproto();
  friend void protobuf_AssignDesc_MceActionInfo_2eproto();
  friend void protobuf_ShutdownFile_MceActionInfo_2eproto();

  void InitAsDefaultInstance();
  static MceActionInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MceActionInfo

// optional int32 action_idx = 1;
inline bool MceActionInfo::has_action_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MceActionInfo::set_has_action_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MceActionInfo::clear_has_action_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MceActionInfo::clear_action_idx() {
  action_idx_ = 0;
  clear_has_action_idx();
}
inline ::google::protobuf::int32 MceActionInfo::action_idx() const {
  // @@protoc_insertion_point(field_get:MceActionInfo.action_idx)
  return action_idx_;
}
inline void MceActionInfo::set_action_idx(::google::protobuf::int32 value) {
  set_has_action_idx();
  action_idx_ = value;
  // @@protoc_insertion_point(field_set:MceActionInfo.action_idx)
}

// optional int32 episode_idx = 2;
inline bool MceActionInfo::has_episode_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MceActionInfo::set_has_episode_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MceActionInfo::clear_has_episode_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MceActionInfo::clear_episode_idx() {
  episode_idx_ = 0;
  clear_has_episode_idx();
}
inline ::google::protobuf::int32 MceActionInfo::episode_idx() const {
  // @@protoc_insertion_point(field_get:MceActionInfo.episode_idx)
  return episode_idx_;
}
inline void MceActionInfo::set_episode_idx(::google::protobuf::int32 value) {
  set_has_episode_idx();
  episode_idx_ = value;
  // @@protoc_insertion_point(field_set:MceActionInfo.episode_idx)
}

// optional int32 rank_start = 3;
inline bool MceActionInfo::has_rank_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MceActionInfo::set_has_rank_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MceActionInfo::clear_has_rank_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MceActionInfo::clear_rank_start() {
  rank_start_ = 0;
  clear_has_rank_start();
}
inline ::google::protobuf::int32 MceActionInfo::rank_start() const {
  // @@protoc_insertion_point(field_get:MceActionInfo.rank_start)
  return rank_start_;
}
inline void MceActionInfo::set_rank_start(::google::protobuf::int32 value) {
  set_has_rank_start();
  rank_start_ = value;
  // @@protoc_insertion_point(field_set:MceActionInfo.rank_start)
}

// optional int32 rank_end = 4;
inline bool MceActionInfo::has_rank_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MceActionInfo::set_has_rank_end() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MceActionInfo::clear_has_rank_end() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MceActionInfo::clear_rank_end() {
  rank_end_ = 0;
  clear_has_rank_end();
}
inline ::google::protobuf::int32 MceActionInfo::rank_end() const {
  // @@protoc_insertion_point(field_get:MceActionInfo.rank_end)
  return rank_end_;
}
inline void MceActionInfo::set_rank_end(::google::protobuf::int32 value) {
  set_has_rank_end();
  rank_end_ = value;
  // @@protoc_insertion_point(field_set:MceActionInfo.rank_end)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MceActionInfo_2eproto__INCLUDED
