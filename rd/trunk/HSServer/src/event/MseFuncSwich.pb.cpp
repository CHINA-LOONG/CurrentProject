// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MseFuncSwich.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MseFuncSwich.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MseFuncSwich_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MseFuncSwich_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MseFuncSwich_2eproto() {
  protobuf_AddDesc_MseFuncSwich_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MseFuncSwich.proto");
  GOOGLE_CHECK(file != NULL);
  MseFuncSwich_descriptor_ = file->message_type(0);
  static const int MseFuncSwich_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, time_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, enable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, is_show_),
  };
  MseFuncSwich_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MseFuncSwich_descriptor_,
      MseFuncSwich::default_instance_,
      MseFuncSwich_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, _has_bits_[0]),
      -1,
      -1,
      sizeof(MseFuncSwich),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MseFuncSwich, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MseFuncSwich_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MseFuncSwich_descriptor_, &MseFuncSwich::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MseFuncSwich_2eproto() {
  delete MseFuncSwich::default_instance_;
  delete MseFuncSwich_reflection_;
}

void protobuf_AddDesc_MseFuncSwich_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022MseFuncSwich.proto\"\224\001\n\014MseFuncSwich\022\020\n"
    "\010time_now\030\004 \001(\005\022\r\n\005index\030\001 \003(\005\022\016\n\006enable"
    "\030\002 \003(\010\022\r\n\005level\030\003 \003(\005\022\020\n\010end_time\030\005 \003(\005\022"
    "\r\n\003str\030\006 \001(\t:\000\022\022\n\nstart_time\030\007 \001(\t\022\017\n\007is"
    "_show\030\010 \003(\005", 171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MseFuncSwich.proto", &protobuf_RegisterTypes);
  MseFuncSwich::default_instance_ = new MseFuncSwich();
  MseFuncSwich::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MseFuncSwich_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MseFuncSwich_2eproto {
  StaticDescriptorInitializer_MseFuncSwich_2eproto() {
    protobuf_AddDesc_MseFuncSwich_2eproto();
  }
} static_descriptor_initializer_MseFuncSwich_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MseFuncSwich::kTimeNowFieldNumber;
const int MseFuncSwich::kIndexFieldNumber;
const int MseFuncSwich::kEnableFieldNumber;
const int MseFuncSwich::kLevelFieldNumber;
const int MseFuncSwich::kEndTimeFieldNumber;
const int MseFuncSwich::kStrFieldNumber;
const int MseFuncSwich::kStartTimeFieldNumber;
const int MseFuncSwich::kIsShowFieldNumber;
#endif  // !_MSC_VER

MseFuncSwich::MseFuncSwich()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MseFuncSwich)
}

void MseFuncSwich::InitAsDefaultInstance() {
}

MseFuncSwich::MseFuncSwich(const MseFuncSwich& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MseFuncSwich)
}

void MseFuncSwich::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  time_now_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MseFuncSwich::~MseFuncSwich() {
  // @@protoc_insertion_point(destructor:MseFuncSwich)
  SharedDtor();
}

void MseFuncSwich::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MseFuncSwich::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MseFuncSwich::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MseFuncSwich_descriptor_;
}

const MseFuncSwich& MseFuncSwich::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MseFuncSwich_2eproto();
  return *default_instance_;
}

MseFuncSwich* MseFuncSwich::default_instance_ = NULL;

MseFuncSwich* MseFuncSwich::New(::google::protobuf::Arena* arena) const {
  MseFuncSwich* n = new MseFuncSwich;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MseFuncSwich::Clear() {
  if (_has_bits_[0 / 32] & 97) {
    time_now_ = 0;
    if (has_str()) {
      str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_start_time()) {
      start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  index_.Clear();
  enable_.Clear();
  level_.Clear();
  end_time_.Clear();
  is_show_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MseFuncSwich::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MseFuncSwich)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 index = 1;
      case 1: {
        if (tag == 8) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_index())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_index;
        if (input->ExpectTag(16)) goto parse_enable;
        break;
      }

      // repeated bool enable = 2;
      case 2: {
        if (tag == 16) {
         parse_enable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 16, input, this->mutable_enable())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_enable())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enable;
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // repeated int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_level())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        if (input->ExpectTag(32)) goto parse_time_now;
        break;
      }

      // optional int32 time_now = 4;
      case 4: {
        if (tag == 32) {
         parse_time_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_now_)));
          set_has_time_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_end_time;
        break;
      }

      // repeated int32 end_time = 5;
      case 5: {
        if (tag == 40) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_end_time())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_end_time())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_end_time;
        if (input->ExpectTag(50)) goto parse_str;
        break;
      }

      // optional string str = 6 [default = ""];
      case 6: {
        if (tag == 50) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MseFuncSwich.str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_start_time;
        break;
      }

      // optional string start_time = 7;
      case 7: {
        if (tag == 58) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->start_time().data(), this->start_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MseFuncSwich.start_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_is_show;
        break;
      }

      // repeated int32 is_show = 8;
      case 8: {
        if (tag == 64) {
         parse_is_show:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_is_show())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_is_show())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_is_show;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MseFuncSwich)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MseFuncSwich)
  return false;
#undef DO_
}

void MseFuncSwich::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MseFuncSwich)
  // repeated int32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->index(i), output);
  }

  // repeated bool enable = 2;
  for (int i = 0; i < this->enable_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      2, this->enable(i), output);
  }

  // repeated int32 level = 3;
  for (int i = 0; i < this->level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->level(i), output);
  }

  // optional int32 time_now = 4;
  if (has_time_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time_now(), output);
  }

  // repeated int32 end_time = 5;
  for (int i = 0; i < this->end_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->end_time(i), output);
  }

  // optional string str = 6 [default = ""];
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseFuncSwich.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->str(), output);
  }

  // optional string start_time = 7;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_time().data(), this->start_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseFuncSwich.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->start_time(), output);
  }

  // repeated int32 is_show = 8;
  for (int i = 0; i < this->is_show_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->is_show(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MseFuncSwich)
}

::google::protobuf::uint8* MseFuncSwich::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MseFuncSwich)
  // repeated int32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->index(i), target);
  }

  // repeated bool enable = 2;
  for (int i = 0; i < this->enable_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(2, this->enable(i), target);
  }

  // repeated int32 level = 3;
  for (int i = 0; i < this->level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->level(i), target);
  }

  // optional int32 time_now = 4;
  if (has_time_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time_now(), target);
  }

  // repeated int32 end_time = 5;
  for (int i = 0; i < this->end_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->end_time(i), target);
  }

  // optional string str = 6 [default = ""];
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseFuncSwich.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->str(), target);
  }

  // optional string start_time = 7;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_time().data(), this->start_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MseFuncSwich.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->start_time(), target);
  }

  // repeated int32 is_show = 8;
  for (int i = 0; i < this->is_show_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->is_show(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MseFuncSwich)
  return target;
}

int MseFuncSwich::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 97) {
    // optional int32 time_now = 4;
    if (has_time_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_now());
    }

    // optional string str = 6 [default = ""];
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

    // optional string start_time = 7;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->start_time());
    }

  }
  // repeated int32 index = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }

  // repeated bool enable = 2;
  {
    int data_size = 0;
    data_size = 1 * this->enable_size();
    total_size += 1 * this->enable_size() + data_size;
  }

  // repeated int32 level = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->level(i));
    }
    total_size += 1 * this->level_size() + data_size;
  }

  // repeated int32 end_time = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->end_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->end_time(i));
    }
    total_size += 1 * this->end_time_size() + data_size;
  }

  // repeated int32 is_show = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->is_show_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->is_show(i));
    }
    total_size += 1 * this->is_show_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MseFuncSwich::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MseFuncSwich* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MseFuncSwich*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MseFuncSwich::MergeFrom(const MseFuncSwich& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  index_.MergeFrom(from.index_);
  enable_.MergeFrom(from.enable_);
  level_.MergeFrom(from.level_);
  end_time_.MergeFrom(from.end_time_);
  is_show_.MergeFrom(from.is_show_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time_now()) {
      set_time_now(from.time_now());
    }
    if (from.has_str()) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
    if (from.has_start_time()) {
      set_has_start_time();
      start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MseFuncSwich::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MseFuncSwich::CopyFrom(const MseFuncSwich& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MseFuncSwich::IsInitialized() const {

  return true;
}

void MseFuncSwich::Swap(MseFuncSwich* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MseFuncSwich::InternalSwap(MseFuncSwich* other) {
  std::swap(time_now_, other->time_now_);
  index_.UnsafeArenaSwap(&other->index_);
  enable_.UnsafeArenaSwap(&other->enable_);
  level_.UnsafeArenaSwap(&other->level_);
  end_time_.UnsafeArenaSwap(&other->end_time_);
  str_.Swap(&other->str_);
  start_time_.Swap(&other->start_time_);
  is_show_.UnsafeArenaSwap(&other->is_show_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MseFuncSwich::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MseFuncSwich_descriptor_;
  metadata.reflection = MseFuncSwich_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MseFuncSwich

// optional int32 time_now = 4;
 bool MseFuncSwich::has_time_now() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MseFuncSwich::set_has_time_now() {
  _has_bits_[0] |= 0x00000001u;
}
 void MseFuncSwich::clear_has_time_now() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MseFuncSwich::clear_time_now() {
  time_now_ = 0;
  clear_has_time_now();
}
 ::google::protobuf::int32 MseFuncSwich::time_now() const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.time_now)
  return time_now_;
}
 void MseFuncSwich::set_time_now(::google::protobuf::int32 value) {
  set_has_time_now();
  time_now_ = value;
  // @@protoc_insertion_point(field_set:MseFuncSwich.time_now)
}

// repeated int32 index = 1;
 int MseFuncSwich::index_size() const {
  return index_.size();
}
 void MseFuncSwich::clear_index() {
  index_.Clear();
}
 ::google::protobuf::int32 MseFuncSwich::index(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.index)
  return index_.Get(index);
}
 void MseFuncSwich::set_index(int index, ::google::protobuf::int32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.index)
}
 void MseFuncSwich::add_index(::google::protobuf::int32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.index)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::index() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.index)
  return index_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.index)
  return &index_;
}

// repeated bool enable = 2;
 int MseFuncSwich::enable_size() const {
  return enable_.size();
}
 void MseFuncSwich::clear_enable() {
  enable_.Clear();
}
 bool MseFuncSwich::enable(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.enable)
  return enable_.Get(index);
}
 void MseFuncSwich::set_enable(int index, bool value) {
  enable_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.enable)
}
 void MseFuncSwich::add_enable(bool value) {
  enable_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.enable)
}
 const ::google::protobuf::RepeatedField< bool >&
MseFuncSwich::enable() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.enable)
  return enable_;
}
 ::google::protobuf::RepeatedField< bool >*
MseFuncSwich::mutable_enable() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.enable)
  return &enable_;
}

// repeated int32 level = 3;
 int MseFuncSwich::level_size() const {
  return level_.size();
}
 void MseFuncSwich::clear_level() {
  level_.Clear();
}
 ::google::protobuf::int32 MseFuncSwich::level(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.level)
  return level_.Get(index);
}
 void MseFuncSwich::set_level(int index, ::google::protobuf::int32 value) {
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.level)
}
 void MseFuncSwich::add_level(::google::protobuf::int32 value) {
  level_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.level)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::level() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.level)
  return level_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_level() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.level)
  return &level_;
}

// repeated int32 end_time = 5;
 int MseFuncSwich::end_time_size() const {
  return end_time_.size();
}
 void MseFuncSwich::clear_end_time() {
  end_time_.Clear();
}
 ::google::protobuf::int32 MseFuncSwich::end_time(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.end_time)
  return end_time_.Get(index);
}
 void MseFuncSwich::set_end_time(int index, ::google::protobuf::int32 value) {
  end_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.end_time)
}
 void MseFuncSwich::add_end_time(::google::protobuf::int32 value) {
  end_time_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.end_time)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::end_time() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.end_time)
  return end_time_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_end_time() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.end_time)
  return &end_time_;
}

// optional string str = 6 [default = ""];
 bool MseFuncSwich::has_str() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void MseFuncSwich::set_has_str() {
  _has_bits_[0] |= 0x00000020u;
}
 void MseFuncSwich::clear_has_str() {
  _has_bits_[0] &= ~0x00000020u;
}
 void MseFuncSwich::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
 const ::std::string& MseFuncSwich::str() const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseFuncSwich::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.str)
}
 void MseFuncSwich::set_str(const char* value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseFuncSwich.str)
}
 void MseFuncSwich::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseFuncSwich.str)
}
 ::std::string* MseFuncSwich::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:MseFuncSwich.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MseFuncSwich::release_str() {
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseFuncSwich::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:MseFuncSwich.str)
}

// optional string start_time = 7;
 bool MseFuncSwich::has_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void MseFuncSwich::set_has_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
 void MseFuncSwich::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
 void MseFuncSwich::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_time();
}
 const ::std::string& MseFuncSwich::start_time() const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.start_time)
  return start_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseFuncSwich::set_start_time(const ::std::string& value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.start_time)
}
 void MseFuncSwich::set_start_time(const char* value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MseFuncSwich.start_time)
}
 void MseFuncSwich::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MseFuncSwich.start_time)
}
 ::std::string* MseFuncSwich::mutable_start_time() {
  set_has_start_time();
  // @@protoc_insertion_point(field_mutable:MseFuncSwich.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MseFuncSwich::release_start_time() {
  clear_has_start_time();
  return start_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MseFuncSwich::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    set_has_start_time();
  } else {
    clear_has_start_time();
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:MseFuncSwich.start_time)
}

// repeated int32 is_show = 8;
 int MseFuncSwich::is_show_size() const {
  return is_show_.size();
}
 void MseFuncSwich::clear_is_show() {
  is_show_.Clear();
}
 ::google::protobuf::int32 MseFuncSwich::is_show(int index) const {
  // @@protoc_insertion_point(field_get:MseFuncSwich.is_show)
  return is_show_.Get(index);
}
 void MseFuncSwich::set_is_show(int index, ::google::protobuf::int32 value) {
  is_show_.Set(index, value);
  // @@protoc_insertion_point(field_set:MseFuncSwich.is_show)
}
 void MseFuncSwich::add_is_show(::google::protobuf::int32 value) {
  is_show_.Add(value);
  // @@protoc_insertion_point(field_add:MseFuncSwich.is_show)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MseFuncSwich::is_show() const {
  // @@protoc_insertion_point(field_list:MseFuncSwich.is_show)
  return is_show_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MseFuncSwich::mutable_is_show() {
  // @@protoc_insertion_point(field_mutable_list:MseFuncSwich.is_show)
  return &is_show_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
