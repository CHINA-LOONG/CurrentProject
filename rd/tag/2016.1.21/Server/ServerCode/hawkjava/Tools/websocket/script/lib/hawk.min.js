var ProtoBuf=dcodeIO.ProtoBuf,ByteBuffer=dcodeIO.ByteBuffer,HawkProtocolManager={builderMap:{},handlerMap:{},HEADER_SIZE:16,protoDir:"protocol/",registerProtocol:function($protocolFile$$){try{var $fullPath$$=HawkProtocolManager.protoDir+$protocolFile$$,$builder$$=ProtoBuf.loadProtoFile($fullPath$$);if(!$builder$$)return console.log("load proto file failed: "+$fullPath$$),null;var $protocolName$$=$protocolFile$$.split(".")[0];HawkProtocolManager.builderMap[$protocolName$$]=$builder$$;console.log("load proto file ok: "+
$fullPath$$);return $builder$$}catch($e$$){console.log("exception: "+$e$$.toString())}return null},getBuilderClass:function($messageName_nameArray$$){$messageName_nameArray$$=$messageName_nameArray$$.split(".");var $builder$$=HawkProtocolManager.builderMap[$messageName_nameArray$$[0]];return null!=$builder$$?$builder$$.build($messageName_nameArray$$[1]):null},newBuilder:function($builder$$2_messageName$$){$builder$$2_messageName$$=HawkProtocolManager.getBuilderClass($builder$$2_messageName$$);return null!=
$builder$$2_messageName$$?new $builder$$2_messageName$$:null},registerHandler:function($hpCode$$,$messageName$$,$handler$$,$thisObject$$){if(HawkProtocolManager.handlerMap[$hpCode$$])return console.log("protocol handler is exist: "+$hpCode$$+", message: "+$messageName$$),!1;HawkProtocolManager.handlerMap[$hpCode$$]={};HawkProtocolManager.handlerMap[$hpCode$$].messageName=$messageName$$;HawkProtocolManager.handlerMap[$hpCode$$].handler=$handler$$;HawkProtocolManager.handlerMap[$hpCode$$].object=$thisObject$$;
return!0},handlerProtocol:function($protocol$$){try{var $handlerInfo$$=HawkProtocolManager.handlerMap[$protocol$$.getType()];if(!$handlerInfo$$)return console.log("protocol handler is null: "+$protocol$$.getType()),!1;var $builderClass$$=HawkProtocolManager.getBuilderClass($handlerInfo$$.messageName);if(!$builderClass$$)return console.log("protocol class is null: "+$protocol$$.getType()),!1;var $msgBuilder$$=null;try{$msgBuilder$$=$builderClass$$.decode($protocol$$.getMsgBuffer())}catch($e$$){console.log("protocol decode failed: "+
$protocol$$.getType())}if($msgBuilder$$){console.log("recv protocol: "+$protocol$$.getType()+", msg: "+$msgBuilder$$.toString());var $handler$$=$handlerInfo$$.handler,$object$$=$handlerInfo$$.object;if(!$handler$$)return console.log("protocol handler is null: "+$protocol$$.getType()),!1;$object$$?$handler$$.apply($object$$,[$protocol$$.getType(),$msgBuilder$$]):$handler$$($protocol$$.getType(),$msgBuilder$$);return!0}console.log("protocol decode failed: "+$protocol$$.getType())}catch($e$$0$$){console.log("exception: "+
$e$$0$$.toString())}return!1},calcCrc:function($byteBuffer$$){var $hash$$=0;if($byteBuffer$$){for(var $offset$$=$byteBuffer$$.offset,$i$$=$byteBuffer$$.offset;$i$$<$byteBuffer$$.limit;$i$$++)var $value$$=$byteBuffer$$.readByte(),$hash$$=$hash$$^(0==($i$$&1)?$hash$$<<7^$value$$&255^$hash$$>>>3:~($hash$$<<11^$value$$&255^$hash$$>>>5));$byteBuffer$$.offset=$offset$$}return $hash$$}};function HawkProtocol($type$$,$msgBuilder$$){$type$$&&$msgBuilder$$?(this.type=$type$$,this.msgBuffer=$msgBuilder$$.encode(),this.size=this.msgBuffer.remaining(),this.reserve=0,this.crc=HawkProtocolManager.calcCrc(this.msgBuffer)):(this.crc=this.reserve=this.size=this.type=0,this.msgBuffer=null)}HawkProtocol.prototype.getType=function $HawkProtocol$$getType$(){return this.type};HawkProtocol.prototype.getSize=function $HawkProtocol$$getSize$(){return this.size};HawkProtocol.prototype.getReserve=function $HawkProtocol$$getReserve$(){return this.reserve};
HawkProtocol.prototype.getCrc=function $HawkProtocol$$getCrc$(){return this.crc};HawkProtocol.prototype.getMsgBuffer=function $HawkProtocol$$getMsgBuffer$(){return this.msgBuffer};
HawkProtocol.prototype.encode=function $HawkProtocol$$encode$(){try{var $byteBuffer$$=new ByteBuffer(1024);$byteBuffer$$.writeInt32(this.type);$byteBuffer$$.writeInt32(this.size);$byteBuffer$$.writeInt32(this.reserve);$byteBuffer$$.writeInt32(this.crc);$byteBuffer$$.append(this.msgBuffer);$byteBuffer$$.flip();return $byteBuffer$$}catch($e$$){console.log("exception: "+$e$$.toString())}return null};
HawkProtocol.prototype.decode=function $HawkProtocol$$decode$($byteBuffer$$){if($byteBuffer$$.remaining()<HawkProtocolManager.HEADER_SIZE)return!1;$byteBuffer$$.mark();try{if(this.type=$byteBuffer$$.readInt32(),this.size=$byteBuffer$$.readInt32(),this.reserve=$byteBuffer$$.readInt32(),this.crc=$byteBuffer$$.readInt32(),$byteBuffer$$.remaining()>=this.size)0<this.size&&(this.msgBuffer=new ByteBuffer(this.size),$byteBuffer$$.copyTo(this.msgBuffer,0,$byteBuffer$$.offset,$byteBuffer$$.offset+this.size));
else return $byteBuffer$$.reset(),!1}catch($e$$){return $byteBuffer$$.reset(),console.log("exception: "+$e$$.toString()),!1}return HawkProtocolManager.calcCrc(this.msgBuffer)!=this.crc?!1:!0};function HawkSocket(){this.url="";this.close_cb=this.message_cb=this.open_cb=this.socket=null}HawkSocket.prototype.getUrl=function $HawkSocket$$getUrl$(){return this.url};HawkSocket.prototype.isAlive=function $HawkSocket$$isAlive$(){return this.socket.readyState==WebSocket.OPEN};HawkSocket.prototype.onOpen=function $HawkSocket$$onOpen$(){"function"==typeof eval(this.open_cb)&&this.open_cb()};
HawkSocket.prototype.onMessage=function $HawkSocket$$onMessage$($data$$){"function"==typeof eval(this.message_cb)&&this.message_cb($data$$)};HawkSocket.prototype.onClose=function $HawkSocket$$onClose$(){"function"==typeof eval(this.close_cb)&&this.close_cb()};
HawkSocket.prototype.connect=function $HawkSocket$$connect$($url$$,$open_cb$$,$close_cb$$,$msg_cb$$){var $that$$=this;this.url=$url$$;this.open_cb=$open_cb$$;this.msg_cb=$msg_cb$$;this.close_cb=$close_cb$$;this.socket=new WebSocket($url$$,"org.hawk.protocol");this.socket.onopen=function $this$socket$onopen$($event$$){console.log("session opened: "+$that$$.url);$that$$.onOpen()};this.socket.onmessage=function $this$socket$onmessage$($event$$){try{var $reader$$=new FileReader;$reader$$.onload=function $$reader$$$onload$($byteBuffer$$3_data$$22_evt$$){if($byteBuffer$$3_data$$22_evt$$.target.readyState==
FileReader.DONE){$byteBuffer$$3_data$$22_evt$$=new Uint8Array($byteBuffer$$3_data$$22_evt$$.target.result);$that$$.onMessage($byteBuffer$$3_data$$22_evt$$);$byteBuffer$$3_data$$22_evt$$=ByteBuffer.wrap($byteBuffer$$3_data$$22_evt$$);var $protocol$$=new HawkProtocol;$protocol$$.decode($byteBuffer$$3_data$$22_evt$$)?HawkProtocolManager.handlerProtocol($protocol$$):console.log("protocol decode failed")}};$reader$$.readAsArrayBuffer($event$$.data)}catch($e$$){console.log("exception: "+$e$$.toString())}};
this.socket.onclose=function $this$socket$onclose$($event$$){console.log("session closed: "+$that$$.url);$that$$.onClose()};this.socket.onerror=function $this$socket$onerror$($event$$){console.log("session error: "+$that$$.url)}};HawkSocket.prototype.reconnect=function $HawkSocket$$reconnect$(){(null==this.socket||this.socket.readyState!=WebSocket.OPEN)&&this.connect(this.url)};
HawkSocket.prototype.sendProtocol=function $HawkSocket$$sendProtocol$($hpCode$$,$msgBuilder$$){if(this.socket.readyState==WebSocket.OPEN)try{var $byteBuffer$$=(new HawkProtocol($hpCode$$,$msgBuilder$$)).encode();if(null!=$byteBuffer$$)return this.socket.send($byteBuffer$$.toBuffer()),!0}catch($e$$){console.log("exception: "+$e$$.toString())}return!1};
//@ sourceMappingURL=hawk.min.js.map